
Exception.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000c680  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001508  0800c820  0800c820  0001c820  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000248  0800dd28  0800dd28  0001dd28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM          000002d8  0800df70  0800df70  0001df70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800e248  0800e248  00020078  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  0800e248  0800e248  0001e248  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800e250  0800e250  0001e250  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000078  20000000  0800e254  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020078  2**0
                  CONTENTS
 10 .bss          00000630  20000078  20000078  00020078  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200006a8  200006a8  00020078  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020078  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  000200a8  2**0
                  CONTENTS, READONLY
 14 .debug_info   0000caf2  00000000  00000000  000200eb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00001de5  00000000  00000000  0002cbdd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000760  00000000  00000000  0002e9c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00024086  00000000  00000000  0002f128  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000bcc7  00000000  00000000  000531ae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000c6864  00000000  00000000  0005ee75  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_rnglists 00000586  00000000  00000000  001256d9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00005d24  00000000  00000000  00125c60  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000067  00000000  00000000  0012b984  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000078 	.word	0x20000078
 80001bc:	00000000 	.word	0x00000000
 80001c0:	0800c808 	.word	0x0800c808

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	2000007c 	.word	0x2000007c
 80001dc:	0800c808 	.word	0x0800c808

080001e0 <d_make_comp>:
 80001e0:	2931      	cmp	r1, #49	; 0x31
 80001e2:	b570      	push	{r4, r5, r6, lr}
 80001e4:	4686      	mov	lr, r0
 80001e6:	d845      	bhi.n	8000274 <d_make_comp+0x94>
 80001e8:	2928      	cmp	r1, #40	; 0x28
 80001ea:	d82a      	bhi.n	8000242 <d_make_comp+0x62>
 80001ec:	290a      	cmp	r1, #10
 80001ee:	d920      	bls.n	8000232 <d_make_comp+0x52>
 80001f0:	f1a1 0c0b 	sub.w	ip, r1, #11
 80001f4:	4c32      	ldr	r4, [pc, #200]	; (80002c0 <d_make_comp+0xe0>)
 80001f6:	fa5f fc8c 	uxtb.w	ip, ip
 80001fa:	2001      	movs	r0, #1
 80001fc:	fa00 f00c 	lsl.w	r0, r0, ip
 8000200:	4004      	ands	r4, r0
 8000202:	2c00      	cmp	r4, #0
 8000204:	d04d      	beq.n	80002a2 <d_make_comp+0xc2>
 8000206:	b1d2      	cbz	r2, 800023e <d_make_comp+0x5e>
 8000208:	e9de 4005 	ldrd	r4, r0, [lr, #20]
 800020c:	4284      	cmp	r4, r0
 800020e:	da16      	bge.n	800023e <d_make_comp+0x5e>
 8000210:	f8de 5010 	ldr.w	r5, [lr, #16]
 8000214:	eb04 0c84 	add.w	ip, r4, r4, lsl #2
 8000218:	eb05 008c 	add.w	r0, r5, ip, lsl #2
 800021c:	3401      	adds	r4, #1
 800021e:	2600      	movs	r6, #0
 8000220:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8000224:	f8ce 4014 	str.w	r4, [lr, #20]
 8000228:	f805 102c 	strb.w	r1, [r5, ip, lsl #2]
 800022c:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8000230:	bd70      	pop	{r4, r5, r6, pc}
 8000232:	2904      	cmp	r1, #4
 8000234:	d930      	bls.n	8000298 <d_make_comp+0xb8>
 8000236:	f1a1 0009 	sub.w	r0, r1, #9
 800023a:	2801      	cmp	r0, #1
 800023c:	d9e3      	bls.n	8000206 <d_make_comp+0x26>
 800023e:	2000      	movs	r0, #0
 8000240:	bd70      	pop	{r4, r5, r6, pc}
 8000242:	f1a1 0029 	sub.w	r0, r1, #41	; 0x29
 8000246:	2808      	cmp	r0, #8
 8000248:	d8f9      	bhi.n	800023e <d_make_comp+0x5e>
 800024a:	a401      	add	r4, pc, #4	; (adr r4, 8000250 <d_make_comp+0x70>)
 800024c:	f854 f020 	ldr.w	pc, [r4, r0, lsl #2]
 8000250:	08000209 	.word	0x08000209
 8000254:	0800029d 	.word	0x0800029d
 8000258:	08000299 	.word	0x08000299
 800025c:	0800023f 	.word	0x0800023f
 8000260:	08000299 	.word	0x08000299
 8000264:	08000209 	.word	0x08000209
 8000268:	08000209 	.word	0x08000209
 800026c:	08000207 	.word	0x08000207
 8000270:	0800029d 	.word	0x0800029d
 8000274:	f1a1 0034 	sub.w	r0, r1, #52	; 0x34
 8000278:	b2c0      	uxtb	r0, r0
 800027a:	281d      	cmp	r0, #29
 800027c:	d8df      	bhi.n	800023e <d_make_comp+0x5e>
 800027e:	4c11      	ldr	r4, [pc, #68]	; (80002c4 <d_make_comp+0xe4>)
 8000280:	f04f 0c01 	mov.w	ip, #1
 8000284:	fa0c fc00 	lsl.w	ip, ip, r0
 8000288:	ea0c 0404 	and.w	r4, ip, r4
 800028c:	2c00      	cmp	r4, #0
 800028e:	d1ba      	bne.n	8000206 <d_make_comp+0x26>
 8000290:	480d      	ldr	r0, [pc, #52]	; (80002c8 <d_make_comp+0xe8>)
 8000292:	ea0c 0000 	and.w	r0, ip, r0
 8000296:	b170      	cbz	r0, 80002b6 <d_make_comp+0xd6>
 8000298:	2a00      	cmp	r2, #0
 800029a:	d0d0      	beq.n	800023e <d_make_comp+0x5e>
 800029c:	2b00      	cmp	r3, #0
 800029e:	d1b3      	bne.n	8000208 <d_make_comp+0x28>
 80002a0:	e7cd      	b.n	800023e <d_make_comp+0x5e>
 80002a2:	f410 1f7f 	tst.w	r0, #4177920	; 0x3fc000
 80002a6:	d1af      	bne.n	8000208 <d_make_comp+0x28>
 80002a8:	4c08      	ldr	r4, [pc, #32]	; (80002cc <d_make_comp+0xec>)
 80002aa:	4004      	ands	r4, r0
 80002ac:	2c00      	cmp	r4, #0
 80002ae:	d0c6      	beq.n	800023e <d_make_comp+0x5e>
 80002b0:	2a00      	cmp	r2, #0
 80002b2:	d1f3      	bne.n	800029c <d_make_comp+0xbc>
 80002b4:	e7c3      	b.n	800023e <d_make_comp+0x5e>
 80002b6:	f01c 5c50 	ands.w	ip, ip, #872415232	; 0x34000000
 80002ba:	d0c0      	beq.n	800023e <d_make_comp+0x5e>
 80002bc:	e7a4      	b.n	8000208 <d_make_comp+0x28>
 80002be:	bf00      	nop
 80002c0:	2f801ffe 	.word	0x2f801ffe
 80002c4:	01c71107 	.word	0x01c71107
 80002c8:	0a002ef8 	.word	0x0a002ef8
 80002cc:	00400001 	.word	0x00400001

080002d0 <d_number>:
 80002d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80002d2:	68c2      	ldr	r2, [r0, #12]
 80002d4:	7811      	ldrb	r1, [r2, #0]
 80002d6:	296e      	cmp	r1, #110	; 0x6e
 80002d8:	4686      	mov	lr, r0
 80002da:	d025      	beq.n	8000328 <d_number+0x58>
 80002dc:	3930      	subs	r1, #48	; 0x30
 80002de:	b2cb      	uxtb	r3, r1
 80002e0:	2b09      	cmp	r3, #9
 80002e2:	d82b      	bhi.n	800033c <d_number+0x6c>
 80002e4:	2600      	movs	r6, #0
 80002e6:	4d16      	ldr	r5, [pc, #88]	; (8000340 <d_number+0x70>)
 80002e8:	2000      	movs	r0, #0
 80002ea:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
 80002ee:	e002      	b.n	80002f6 <d_number+0x26>
 80002f0:	ebb0 0fd3 	cmp.w	r0, r3, lsr #3
 80002f4:	dc15      	bgt.n	8000322 <d_number+0x52>
 80002f6:	3201      	adds	r2, #1
 80002f8:	f8ce 200c 	str.w	r2, [lr, #12]
 80002fc:	7813      	ldrb	r3, [r2, #0]
 80002fe:	3b30      	subs	r3, #48	; 0x30
 8000300:	fa5f fc83 	uxtb.w	ip, r3
 8000304:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8000308:	eb01 0040 	add.w	r0, r1, r0, lsl #1
 800030c:	f1bc 0f09 	cmp.w	ip, #9
 8000310:	4619      	mov	r1, r3
 8000312:	eba4 0303 	sub.w	r3, r4, r3
 8000316:	fba5 7303 	umull	r7, r3, r5, r3
 800031a:	d9e9      	bls.n	80002f0 <d_number+0x20>
 800031c:	b106      	cbz	r6, 8000320 <d_number+0x50>
 800031e:	4240      	negs	r0, r0
 8000320:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000322:	f04f 30ff 	mov.w	r0, #4294967295
 8000326:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000328:	1c53      	adds	r3, r2, #1
 800032a:	60c3      	str	r3, [r0, #12]
 800032c:	7851      	ldrb	r1, [r2, #1]
 800032e:	3930      	subs	r1, #48	; 0x30
 8000330:	b2ca      	uxtb	r2, r1
 8000332:	2a09      	cmp	r2, #9
 8000334:	d802      	bhi.n	800033c <d_number+0x6c>
 8000336:	461a      	mov	r2, r3
 8000338:	2601      	movs	r6, #1
 800033a:	e7d4      	b.n	80002e6 <d_number+0x16>
 800033c:	2000      	movs	r0, #0
 800033e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000340:	cccccccd 	.word	0xcccccccd

08000344 <d_call_offset>:
 8000344:	b510      	push	{r4, lr}
 8000346:	4604      	mov	r4, r0
 8000348:	b929      	cbnz	r1, 8000356 <d_call_offset+0x12>
 800034a:	68c3      	ldr	r3, [r0, #12]
 800034c:	781a      	ldrb	r2, [r3, #0]
 800034e:	b16a      	cbz	r2, 800036c <d_call_offset+0x28>
 8000350:	1c5a      	adds	r2, r3, #1
 8000352:	60c2      	str	r2, [r0, #12]
 8000354:	7819      	ldrb	r1, [r3, #0]
 8000356:	2968      	cmp	r1, #104	; 0x68
 8000358:	d00c      	beq.n	8000374 <d_call_offset+0x30>
 800035a:	2976      	cmp	r1, #118	; 0x76
 800035c:	d106      	bne.n	800036c <d_call_offset+0x28>
 800035e:	4620      	mov	r0, r4
 8000360:	f7ff ffb6 	bl	80002d0 <d_number>
 8000364:	68e3      	ldr	r3, [r4, #12]
 8000366:	781a      	ldrb	r2, [r3, #0]
 8000368:	2a5f      	cmp	r2, #95	; 0x5f
 800036a:	d001      	beq.n	8000370 <d_call_offset+0x2c>
 800036c:	2000      	movs	r0, #0
 800036e:	bd10      	pop	{r4, pc}
 8000370:	3301      	adds	r3, #1
 8000372:	60e3      	str	r3, [r4, #12]
 8000374:	4620      	mov	r0, r4
 8000376:	f7ff ffab 	bl	80002d0 <d_number>
 800037a:	68e3      	ldr	r3, [r4, #12]
 800037c:	781a      	ldrb	r2, [r3, #0]
 800037e:	2a5f      	cmp	r2, #95	; 0x5f
 8000380:	d1f4      	bne.n	800036c <d_call_offset+0x28>
 8000382:	3301      	adds	r3, #1
 8000384:	60e3      	str	r3, [r4, #12]
 8000386:	2001      	movs	r0, #1
 8000388:	bd10      	pop	{r4, pc}
 800038a:	bf00      	nop

0800038c <d_ref_qualifier>:
 800038c:	b410      	push	{r4}
 800038e:	68c3      	ldr	r3, [r0, #12]
 8000390:	460a      	mov	r2, r1
 8000392:	7819      	ldrb	r1, [r3, #0]
 8000394:	2952      	cmp	r1, #82	; 0x52
 8000396:	d00f      	beq.n	80003b8 <d_ref_qualifier+0x2c>
 8000398:	294f      	cmp	r1, #79	; 0x4f
 800039a:	d003      	beq.n	80003a4 <d_ref_qualifier+0x18>
 800039c:	4610      	mov	r0, r2
 800039e:	f85d 4b04 	ldr.w	r4, [sp], #4
 80003a2:	4770      	bx	lr
 80003a4:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 80003a6:	2120      	movs	r1, #32
 80003a8:	3403      	adds	r4, #3
 80003aa:	3301      	adds	r3, #1
 80003ac:	62c4      	str	r4, [r0, #44]	; 0x2c
 80003ae:	60c3      	str	r3, [r0, #12]
 80003b0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80003b4:	2300      	movs	r3, #0
 80003b6:	e713      	b.n	80001e0 <d_make_comp>
 80003b8:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 80003ba:	211f      	movs	r1, #31
 80003bc:	3402      	adds	r4, #2
 80003be:	e7f4      	b.n	80003aa <d_ref_qualifier+0x1e>

080003c0 <d_count_templates_scopes>:
 80003c0:	2900      	cmp	r1, #0
 80003c2:	d066      	beq.n	8000492 <d_count_templates_scopes+0xd2>
 80003c4:	b538      	push	{r3, r4, r5, lr}
 80003c6:	4605      	mov	r5, r0
 80003c8:	460c      	mov	r4, r1
 80003ca:	68a3      	ldr	r3, [r4, #8]
 80003cc:	2b01      	cmp	r3, #1
 80003ce:	dc39      	bgt.n	8000444 <d_count_templates_scopes+0x84>
 80003d0:	f8d5 011c 	ldr.w	r0, [r5, #284]	; 0x11c
 80003d4:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 80003d8:	f103 0301 	add.w	r3, r3, #1
 80003dc:	dc32      	bgt.n	8000444 <d_count_templates_scopes+0x84>
 80003de:	7822      	ldrb	r2, [r4, #0]
 80003e0:	60a3      	str	r3, [r4, #8]
 80003e2:	1e53      	subs	r3, r2, #1
 80003e4:	2b50      	cmp	r3, #80	; 0x50
 80003e6:	d82d      	bhi.n	8000444 <d_count_templates_scopes+0x84>
 80003e8:	e8df f003 	tbb	[pc, r3]
 80003ec:	4c313131 	.word	0x4c313131
 80003f0:	2d2d2c2c 	.word	0x2d2d2c2c
 80003f4:	31313131 	.word	0x31313131
 80003f8:	31313131 	.word	0x31313131
 80003fc:	31313131 	.word	0x31313131
 8000400:	2c313131 	.word	0x2c313131
 8000404:	31313131 	.word	0x31313131
 8000408:	31313131 	.word	0x31313131
 800040c:	42423131 	.word	0x42423131
 8000410:	312c3131 	.word	0x312c3131
 8000414:	29313131 	.word	0x29313131
 8000418:	31313131 	.word	0x31313131
 800041c:	312d2c31 	.word	0x312d2c31
 8000420:	31313131 	.word	0x31313131
 8000424:	31313131 	.word	0x31313131
 8000428:	31313131 	.word	0x31313131
 800042c:	312c2c31 	.word	0x312c2c31
 8000430:	29292929 	.word	0x29292929
 8000434:	3131312c 	.word	0x3131312c
 8000438:	31313131 	.word	0x31313131
 800043c:	31          	.byte	0x31
 800043d:	00          	.byte	0x00
 800043e:	68e4      	ldr	r4, [r4, #12]
 8000440:	2c00      	cmp	r4, #0
 8000442:	d1c2      	bne.n	80003ca <d_count_templates_scopes+0xa>
 8000444:	bd38      	pop	{r3, r4, r5, pc}
 8000446:	6924      	ldr	r4, [r4, #16]
 8000448:	2c00      	cmp	r4, #0
 800044a:	d1be      	bne.n	80003ca <d_count_templates_scopes+0xa>
 800044c:	e7fa      	b.n	8000444 <d_count_templates_scopes+0x84>
 800044e:	68e1      	ldr	r1, [r4, #12]
 8000450:	1c43      	adds	r3, r0, #1
 8000452:	f8c5 311c 	str.w	r3, [r5, #284]	; 0x11c
 8000456:	4628      	mov	r0, r5
 8000458:	f7ff ffb2 	bl	80003c0 <d_count_templates_scopes>
 800045c:	6921      	ldr	r1, [r4, #16]
 800045e:	4628      	mov	r0, r5
 8000460:	f7ff ffae 	bl	80003c0 <d_count_templates_scopes>
 8000464:	f8d5 311c 	ldr.w	r3, [r5, #284]	; 0x11c
 8000468:	3b01      	subs	r3, #1
 800046a:	f8c5 311c 	str.w	r3, [r5, #284]	; 0x11c
 800046e:	bd38      	pop	{r3, r4, r5, pc}
 8000470:	68e1      	ldr	r1, [r4, #12]
 8000472:	780b      	ldrb	r3, [r1, #0]
 8000474:	2b05      	cmp	r3, #5
 8000476:	d1eb      	bne.n	8000450 <d_count_templates_scopes+0x90>
 8000478:	f8d5 3138 	ldr.w	r3, [r5, #312]	; 0x138
 800047c:	3301      	adds	r3, #1
 800047e:	f8c5 3138 	str.w	r3, [r5, #312]	; 0x138
 8000482:	e7e5      	b.n	8000450 <d_count_templates_scopes+0x90>
 8000484:	f8d5 3144 	ldr.w	r3, [r5, #324]	; 0x144
 8000488:	68e1      	ldr	r1, [r4, #12]
 800048a:	3301      	adds	r3, #1
 800048c:	f8c5 3144 	str.w	r3, [r5, #324]	; 0x144
 8000490:	e7de      	b.n	8000450 <d_count_templates_scopes+0x90>
 8000492:	4770      	bx	lr

08000494 <d_pack_length>:
 8000494:	4603      	mov	r3, r0
 8000496:	b148      	cbz	r0, 80004ac <d_pack_length+0x18>
 8000498:	2300      	movs	r3, #0
 800049a:	e004      	b.n	80004a6 <d_pack_length+0x12>
 800049c:	68c2      	ldr	r2, [r0, #12]
 800049e:	b12a      	cbz	r2, 80004ac <d_pack_length+0x18>
 80004a0:	6900      	ldr	r0, [r0, #16]
 80004a2:	3301      	adds	r3, #1
 80004a4:	b110      	cbz	r0, 80004ac <d_pack_length+0x18>
 80004a6:	7802      	ldrb	r2, [r0, #0]
 80004a8:	2a2f      	cmp	r2, #47	; 0x2f
 80004aa:	d0f7      	beq.n	800049c <d_pack_length+0x8>
 80004ac:	4618      	mov	r0, r3
 80004ae:	4770      	bx	lr

080004b0 <d_discriminator>:
 80004b0:	68c3      	ldr	r3, [r0, #12]
 80004b2:	781a      	ldrb	r2, [r3, #0]
 80004b4:	2a5f      	cmp	r2, #95	; 0x5f
 80004b6:	d001      	beq.n	80004bc <d_discriminator+0xc>
 80004b8:	2001      	movs	r0, #1
 80004ba:	4770      	bx	lr
 80004bc:	b510      	push	{r4, lr}
 80004be:	1c5a      	adds	r2, r3, #1
 80004c0:	60c2      	str	r2, [r0, #12]
 80004c2:	785a      	ldrb	r2, [r3, #1]
 80004c4:	2a5f      	cmp	r2, #95	; 0x5f
 80004c6:	4604      	mov	r4, r0
 80004c8:	d004      	beq.n	80004d4 <d_discriminator+0x24>
 80004ca:	f7ff ff01 	bl	80002d0 <d_number>
 80004ce:	43c0      	mvns	r0, r0
 80004d0:	0fc0      	lsrs	r0, r0, #31
 80004d2:	bd10      	pop	{r4, pc}
 80004d4:	3302      	adds	r3, #2
 80004d6:	60c3      	str	r3, [r0, #12]
 80004d8:	f7ff fefa 	bl	80002d0 <d_number>
 80004dc:	2800      	cmp	r0, #0
 80004de:	db09      	blt.n	80004f4 <d_discriminator+0x44>
 80004e0:	2809      	cmp	r0, #9
 80004e2:	dd05      	ble.n	80004f0 <d_discriminator+0x40>
 80004e4:	68e3      	ldr	r3, [r4, #12]
 80004e6:	781a      	ldrb	r2, [r3, #0]
 80004e8:	2a5f      	cmp	r2, #95	; 0x5f
 80004ea:	d103      	bne.n	80004f4 <d_discriminator+0x44>
 80004ec:	3301      	adds	r3, #1
 80004ee:	60e3      	str	r3, [r4, #12]
 80004f0:	2001      	movs	r0, #1
 80004f2:	bd10      	pop	{r4, pc}
 80004f4:	2000      	movs	r0, #0
 80004f6:	bd10      	pop	{r4, pc}

080004f8 <d_index_template_argument.part.0>:
 80004f8:	b920      	cbnz	r0, 8000504 <d_index_template_argument.part.0+0xc>
 80004fa:	e009      	b.n	8000510 <d_index_template_argument.part.0+0x18>
 80004fc:	b139      	cbz	r1, 800050e <d_index_template_argument.part.0+0x16>
 80004fe:	6900      	ldr	r0, [r0, #16]
 8000500:	3901      	subs	r1, #1
 8000502:	b130      	cbz	r0, 8000512 <d_index_template_argument.part.0+0x1a>
 8000504:	7803      	ldrb	r3, [r0, #0]
 8000506:	2b2f      	cmp	r3, #47	; 0x2f
 8000508:	d0f8      	beq.n	80004fc <d_index_template_argument.part.0+0x4>
 800050a:	2000      	movs	r0, #0
 800050c:	4770      	bx	lr
 800050e:	68c0      	ldr	r0, [r0, #12]
 8000510:	4770      	bx	lr
 8000512:	4770      	bx	lr

08000514 <d_growable_string_callback_adapter>:
 8000514:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000516:	4614      	mov	r4, r2
 8000518:	6852      	ldr	r2, [r2, #4]
 800051a:	68a5      	ldr	r5, [r4, #8]
 800051c:	1c4b      	adds	r3, r1, #1
 800051e:	4413      	add	r3, r2
 8000520:	42ab      	cmp	r3, r5
 8000522:	b083      	sub	sp, #12
 8000524:	460e      	mov	r6, r1
 8000526:	4607      	mov	r7, r0
 8000528:	d811      	bhi.n	800054e <d_growable_string_callback_adapter+0x3a>
 800052a:	68e5      	ldr	r5, [r4, #12]
 800052c:	b96d      	cbnz	r5, 800054a <d_growable_string_callback_adapter+0x36>
 800052e:	6863      	ldr	r3, [r4, #4]
 8000530:	6820      	ldr	r0, [r4, #0]
 8000532:	4632      	mov	r2, r6
 8000534:	4418      	add	r0, r3
 8000536:	4639      	mov	r1, r7
 8000538:	f00b fce3 	bl	800bf02 <memcpy>
 800053c:	e9d4 3200 	ldrd	r3, r2, [r4]
 8000540:	4433      	add	r3, r6
 8000542:	549d      	strb	r5, [r3, r2]
 8000544:	6863      	ldr	r3, [r4, #4]
 8000546:	4433      	add	r3, r6
 8000548:	6063      	str	r3, [r4, #4]
 800054a:	b003      	add	sp, #12
 800054c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800054e:	68e2      	ldr	r2, [r4, #12]
 8000550:	2a00      	cmp	r2, #0
 8000552:	d1fa      	bne.n	800054a <d_growable_string_callback_adapter+0x36>
 8000554:	b155      	cbz	r5, 800056c <d_growable_string_callback_adapter+0x58>
 8000556:	006d      	lsls	r5, r5, #1
 8000558:	42ab      	cmp	r3, r5
 800055a:	d8fc      	bhi.n	8000556 <d_growable_string_callback_adapter+0x42>
 800055c:	6820      	ldr	r0, [r4, #0]
 800055e:	4629      	mov	r1, r5
 8000560:	f00b f88a 	bl	800b678 <realloc>
 8000564:	b138      	cbz	r0, 8000576 <d_growable_string_callback_adapter+0x62>
 8000566:	6020      	str	r0, [r4, #0]
 8000568:	60a5      	str	r5, [r4, #8]
 800056a:	e7de      	b.n	800052a <d_growable_string_callback_adapter+0x16>
 800056c:	2b02      	cmp	r3, #2
 800056e:	f04f 0502 	mov.w	r5, #2
 8000572:	d8f0      	bhi.n	8000556 <d_growable_string_callback_adapter+0x42>
 8000574:	e7f2      	b.n	800055c <d_growable_string_callback_adapter+0x48>
 8000576:	9001      	str	r0, [sp, #4]
 8000578:	6820      	ldr	r0, [r4, #0]
 800057a:	f00a ffc9 	bl	800b510 <free>
 800057e:	9b01      	ldr	r3, [sp, #4]
 8000580:	2201      	movs	r2, #1
 8000582:	e9c4 3300 	strd	r3, r3, [r4]
 8000586:	e9c4 3202 	strd	r3, r2, [r4, #8]
 800058a:	e7de      	b.n	800054a <d_growable_string_callback_adapter+0x36>

0800058c <next_is_type_qual.isra.0>:
 800058c:	7803      	ldrb	r3, [r0, #0]
 800058e:	2b72      	cmp	r3, #114	; 0x72
 8000590:	d007      	beq.n	80005a2 <next_is_type_qual.isra.0+0x16>
 8000592:	2b56      	cmp	r3, #86	; 0x56
 8000594:	d005      	beq.n	80005a2 <next_is_type_qual.isra.0+0x16>
 8000596:	2b4b      	cmp	r3, #75	; 0x4b
 8000598:	d003      	beq.n	80005a2 <next_is_type_qual.isra.0+0x16>
 800059a:	2b44      	cmp	r3, #68	; 0x44
 800059c:	d003      	beq.n	80005a6 <next_is_type_qual.isra.0+0x1a>
 800059e:	2000      	movs	r0, #0
 80005a0:	4770      	bx	lr
 80005a2:	2001      	movs	r0, #1
 80005a4:	4770      	bx	lr
 80005a6:	7840      	ldrb	r0, [r0, #1]
 80005a8:	f000 03df 	and.w	r3, r0, #223	; 0xdf
 80005ac:	2b4f      	cmp	r3, #79	; 0x4f
 80005ae:	d0f8      	beq.n	80005a2 <next_is_type_qual.isra.0+0x16>
 80005b0:	3877      	subs	r0, #119	; 0x77
 80005b2:	2801      	cmp	r0, #1
 80005b4:	bf8c      	ite	hi
 80005b6:	2000      	movhi	r0, #0
 80005b8:	2001      	movls	r0, #1
 80005ba:	4770      	bx	lr

080005bc <d_append_char>:
 80005bc:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80005c0:	2bff      	cmp	r3, #255	; 0xff
 80005c2:	b570      	push	{r4, r5, r6, lr}
 80005c4:	4604      	mov	r4, r0
 80005c6:	460d      	mov	r5, r1
 80005c8:	d006      	beq.n	80005d8 <d_append_char+0x1c>
 80005ca:	1c5a      	adds	r2, r3, #1
 80005cc:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80005d0:	54e5      	strb	r5, [r4, r3]
 80005d2:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 80005d6:	bd70      	pop	{r4, r5, r6, pc}
 80005d8:	2600      	movs	r6, #0
 80005da:	4619      	mov	r1, r3
 80005dc:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
 80005e0:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
 80005e4:	4798      	blx	r3
 80005e6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80005ea:	2201      	movs	r2, #1
 80005ec:	4413      	add	r3, r2
 80005ee:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80005f2:	4633      	mov	r3, r6
 80005f4:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80005f8:	54e5      	strb	r5, [r4, r3]
 80005fa:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 80005fe:	bd70      	pop	{r4, r5, r6, pc}

08000600 <d_lookup_template_argument>:
 8000600:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
 8000604:	b19b      	cbz	r3, 800062e <d_lookup_template_argument+0x2e>
 8000606:	68ca      	ldr	r2, [r1, #12]
 8000608:	685b      	ldr	r3, [r3, #4]
 800060a:	2a00      	cmp	r2, #0
 800060c:	691b      	ldr	r3, [r3, #16]
 800060e:	db09      	blt.n	8000624 <d_lookup_template_argument+0x24>
 8000610:	b923      	cbnz	r3, 800061c <d_lookup_template_argument+0x1c>
 8000612:	e007      	b.n	8000624 <d_lookup_template_argument+0x24>
 8000614:	b142      	cbz	r2, 8000628 <d_lookup_template_argument+0x28>
 8000616:	691b      	ldr	r3, [r3, #16]
 8000618:	3a01      	subs	r2, #1
 800061a:	b11b      	cbz	r3, 8000624 <d_lookup_template_argument+0x24>
 800061c:	7819      	ldrb	r1, [r3, #0]
 800061e:	292f      	cmp	r1, #47	; 0x2f
 8000620:	d0f8      	beq.n	8000614 <d_lookup_template_argument+0x14>
 8000622:	2300      	movs	r3, #0
 8000624:	4618      	mov	r0, r3
 8000626:	4770      	bx	lr
 8000628:	68db      	ldr	r3, [r3, #12]
 800062a:	4618      	mov	r0, r3
 800062c:	4770      	bx	lr
 800062e:	2201      	movs	r2, #1
 8000630:	f8c0 2118 	str.w	r2, [r0, #280]	; 0x118
 8000634:	e7f6      	b.n	8000624 <d_lookup_template_argument+0x24>
 8000636:	bf00      	nop

08000638 <d_find_pack>:
 8000638:	2900      	cmp	r1, #0
 800063a:	d040      	beq.n	80006be <d_find_pack+0x86>
 800063c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000640:	f8df 8084 	ldr.w	r8, [pc, #132]	; 80006c8 <d_find_pack+0x90>
 8000644:	4f1f      	ldr	r7, [pc, #124]	; (80006c4 <d_find_pack+0x8c>)
 8000646:	4605      	mov	r5, r0
 8000648:	460c      	mov	r4, r1
 800064a:	2601      	movs	r6, #1
 800064c:	7823      	ldrb	r3, [r4, #0]
 800064e:	2b08      	cmp	r3, #8
 8000650:	d813      	bhi.n	800067a <d_find_pack+0x42>
 8000652:	2b08      	cmp	r3, #8
 8000654:	d81e      	bhi.n	8000694 <d_find_pack+0x5c>
 8000656:	e8df f003 	tbb	[pc, r3]
 800065a:	1d0d      	.short	0x1d0d
 800065c:	271d1d1d 	.word	0x271d1d1d
 8000660:	230d      	.short	0x230d
 8000662:	23          	.byte	0x23
 8000663:	00          	.byte	0x00
 8000664:	2b17      	cmp	r3, #23
 8000666:	d915      	bls.n	8000694 <d_find_pack+0x5c>
 8000668:	3b18      	subs	r3, #24
 800066a:	b2db      	uxtb	r3, r3
 800066c:	fa27 f303 	lsr.w	r3, r7, r3
 8000670:	07db      	lsls	r3, r3, #31
 8000672:	d50f      	bpl.n	8000694 <d_find_pack+0x5c>
 8000674:	2000      	movs	r0, #0
 8000676:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800067a:	2b2c      	cmp	r3, #44	; 0x2c
 800067c:	d9f2      	bls.n	8000664 <d_find_pack+0x2c>
 800067e:	3b32      	subs	r3, #50	; 0x32
 8000680:	b2db      	uxtb	r3, r3
 8000682:	2b1b      	cmp	r3, #27
 8000684:	d806      	bhi.n	8000694 <d_find_pack+0x5c>
 8000686:	fa06 f203 	lsl.w	r2, r6, r3
 800068a:	ea12 0f08 	tst.w	r2, r8
 800068e:	d1f1      	bne.n	8000674 <d_find_pack+0x3c>
 8000690:	2b01      	cmp	r3, #1
 8000692:	d005      	beq.n	80006a0 <d_find_pack+0x68>
 8000694:	68e1      	ldr	r1, [r4, #12]
 8000696:	4628      	mov	r0, r5
 8000698:	f7ff ffce 	bl	8000638 <d_find_pack>
 800069c:	2800      	cmp	r0, #0
 800069e:	d1ea      	bne.n	8000676 <d_find_pack+0x3e>
 80006a0:	6924      	ldr	r4, [r4, #16]
 80006a2:	2c00      	cmp	r4, #0
 80006a4:	d1d2      	bne.n	800064c <d_find_pack+0x14>
 80006a6:	e7e5      	b.n	8000674 <d_find_pack+0x3c>
 80006a8:	4621      	mov	r1, r4
 80006aa:	4628      	mov	r0, r5
 80006ac:	f7ff ffa8 	bl	8000600 <d_lookup_template_argument>
 80006b0:	2800      	cmp	r0, #0
 80006b2:	d0df      	beq.n	8000674 <d_find_pack+0x3c>
 80006b4:	7803      	ldrb	r3, [r0, #0]
 80006b6:	2b2f      	cmp	r3, #47	; 0x2f
 80006b8:	d1dc      	bne.n	8000674 <d_find_pack+0x3c>
 80006ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80006be:	2000      	movs	r0, #0
 80006c0:	4770      	bx	lr
 80006c2:	bf00      	nop
 80006c4:	00108001 	.word	0x00108001
 80006c8:	0ce30001 	.word	0x0ce30001

080006cc <d_append_string>:
 80006cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80006d0:	4604      	mov	r4, r0
 80006d2:	4608      	mov	r0, r1
 80006d4:	460d      	mov	r5, r1
 80006d6:	f005 fdbb 	bl	8006250 <strlen>
 80006da:	b340      	cbz	r0, 800072e <d_append_string+0x62>
 80006dc:	3d01      	subs	r5, #1
 80006de:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80006e2:	182f      	adds	r7, r5, r0
 80006e4:	f04f 0800 	mov.w	r8, #0
 80006e8:	e009      	b.n	80006fe <d_append_string+0x32>
 80006ea:	460b      	mov	r3, r1
 80006ec:	42bd      	cmp	r5, r7
 80006ee:	f101 0101 	add.w	r1, r1, #1
 80006f2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80006f6:	54e6      	strb	r6, [r4, r3]
 80006f8:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80006fc:	d017      	beq.n	800072e <d_append_string+0x62>
 80006fe:	29ff      	cmp	r1, #255	; 0xff
 8000700:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 8000704:	d1f1      	bne.n	80006ea <d_append_string+0x1e>
 8000706:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800070a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800070e:	4620      	mov	r0, r4
 8000710:	4798      	blx	r3
 8000712:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8000716:	2101      	movs	r1, #1
 8000718:	440b      	add	r3, r1
 800071a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800071e:	2300      	movs	r3, #0
 8000720:	42bd      	cmp	r5, r7
 8000722:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8000726:	54e6      	strb	r6, [r4, r3]
 8000728:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 800072c:	d1e7      	bne.n	80006fe <d_append_string+0x32>
 800072e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000732:	bf00      	nop

08000734 <d_template_param>:
 8000734:	b538      	push	{r3, r4, r5, lr}
 8000736:	68c3      	ldr	r3, [r0, #12]
 8000738:	781a      	ldrb	r2, [r3, #0]
 800073a:	2a54      	cmp	r2, #84	; 0x54
 800073c:	d124      	bne.n	8000788 <d_template_param+0x54>
 800073e:	1c5a      	adds	r2, r3, #1
 8000740:	60c2      	str	r2, [r0, #12]
 8000742:	785a      	ldrb	r2, [r3, #1]
 8000744:	2a5f      	cmp	r2, #95	; 0x5f
 8000746:	4604      	mov	r4, r0
 8000748:	d020      	beq.n	800078c <d_template_param+0x58>
 800074a:	2a6e      	cmp	r2, #110	; 0x6e
 800074c:	d01c      	beq.n	8000788 <d_template_param+0x54>
 800074e:	f7ff fdbf 	bl	80002d0 <d_number>
 8000752:	1c41      	adds	r1, r0, #1
 8000754:	d418      	bmi.n	8000788 <d_template_param+0x54>
 8000756:	68e3      	ldr	r3, [r4, #12]
 8000758:	781a      	ldrb	r2, [r3, #0]
 800075a:	2a5f      	cmp	r2, #95	; 0x5f
 800075c:	d114      	bne.n	8000788 <d_template_param+0x54>
 800075e:	3301      	adds	r3, #1
 8000760:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
 8000764:	4282      	cmp	r2, r0
 8000766:	60e3      	str	r3, [r4, #12]
 8000768:	da0e      	bge.n	8000788 <d_template_param+0x54>
 800076a:	6923      	ldr	r3, [r4, #16]
 800076c:	eb02 0c82 	add.w	ip, r2, r2, lsl #2
 8000770:	eb03 008c 	add.w	r0, r3, ip, lsl #2
 8000774:	3201      	adds	r2, #1
 8000776:	2500      	movs	r5, #0
 8000778:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800077c:	6162      	str	r2, [r4, #20]
 800077e:	2205      	movs	r2, #5
 8000780:	f803 202c 	strb.w	r2, [r3, ip, lsl #2]
 8000784:	60c1      	str	r1, [r0, #12]
 8000786:	bd38      	pop	{r3, r4, r5, pc}
 8000788:	2000      	movs	r0, #0
 800078a:	bd38      	pop	{r3, r4, r5, pc}
 800078c:	3302      	adds	r3, #2
 800078e:	2100      	movs	r1, #0
 8000790:	e7e6      	b.n	8000760 <d_template_param+0x2c>
 8000792:	bf00      	nop

08000794 <d_append_num>:
 8000794:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000798:	b088      	sub	sp, #32
 800079a:	460a      	mov	r2, r1
 800079c:	4604      	mov	r4, r0
 800079e:	491a      	ldr	r1, [pc, #104]	; (8000808 <d_append_num+0x74>)
 80007a0:	a801      	add	r0, sp, #4
 80007a2:	f00b f9ab 	bl	800bafc <siprintf>
 80007a6:	a801      	add	r0, sp, #4
 80007a8:	f005 fd52 	bl	8006250 <strlen>
 80007ac:	b340      	cbz	r0, 8000800 <d_append_num+0x6c>
 80007ae:	ad01      	add	r5, sp, #4
 80007b0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80007b4:	182f      	adds	r7, r5, r0
 80007b6:	f04f 0800 	mov.w	r8, #0
 80007ba:	e009      	b.n	80007d0 <d_append_num+0x3c>
 80007bc:	460b      	mov	r3, r1
 80007be:	42bd      	cmp	r5, r7
 80007c0:	f101 0101 	add.w	r1, r1, #1
 80007c4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80007c8:	54e6      	strb	r6, [r4, r3]
 80007ca:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80007ce:	d017      	beq.n	8000800 <d_append_num+0x6c>
 80007d0:	29ff      	cmp	r1, #255	; 0xff
 80007d2:	f815 6b01 	ldrb.w	r6, [r5], #1
 80007d6:	d1f1      	bne.n	80007bc <d_append_num+0x28>
 80007d8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80007dc:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80007e0:	4620      	mov	r0, r4
 80007e2:	4798      	blx	r3
 80007e4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80007e8:	2101      	movs	r1, #1
 80007ea:	440b      	add	r3, r1
 80007ec:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80007f0:	2300      	movs	r3, #0
 80007f2:	42bd      	cmp	r5, r7
 80007f4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80007f8:	54e6      	strb	r6, [r4, r3]
 80007fa:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80007fe:	d1e7      	bne.n	80007d0 <d_append_num+0x3c>
 8000800:	b008      	add	sp, #32
 8000802:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000806:	bf00      	nop
 8000808:	0800d440 	.word	0x0800d440

0800080c <d_source_name>:
 800080c:	b570      	push	{r4, r5, r6, lr}
 800080e:	4604      	mov	r4, r0
 8000810:	f7ff fd5e 	bl	80002d0 <d_number>
 8000814:	1e05      	subs	r5, r0, #0
 8000816:	dd46      	ble.n	80008a6 <d_source_name+0x9a>
 8000818:	68e6      	ldr	r6, [r4, #12]
 800081a:	6863      	ldr	r3, [r4, #4]
 800081c:	1b9b      	subs	r3, r3, r6
 800081e:	429d      	cmp	r5, r3
 8000820:	dc3e      	bgt.n	80008a0 <d_source_name+0x94>
 8000822:	68a2      	ldr	r2, [r4, #8]
 8000824:	1973      	adds	r3, r6, r5
 8000826:	0752      	lsls	r2, r2, #29
 8000828:	60e3      	str	r3, [r4, #12]
 800082a:	d504      	bpl.n	8000836 <d_source_name+0x2a>
 800082c:	5d72      	ldrb	r2, [r6, r5]
 800082e:	2a24      	cmp	r2, #36	; 0x24
 8000830:	bf04      	itt	eq
 8000832:	3301      	addeq	r3, #1
 8000834:	60e3      	streq	r3, [r4, #12]
 8000836:	2d09      	cmp	r5, #9
 8000838:	dd22      	ble.n	8000880 <d_source_name+0x74>
 800083a:	492a      	ldr	r1, [pc, #168]	; (80008e4 <d_source_name+0xd8>)
 800083c:	2208      	movs	r2, #8
 800083e:	4630      	mov	r0, r6
 8000840:	f00b fa54 	bl	800bcec <memcmp>
 8000844:	b930      	cbnz	r0, 8000854 <d_source_name+0x48>
 8000846:	7a33      	ldrb	r3, [r6, #8]
 8000848:	2b2e      	cmp	r3, #46	; 0x2e
 800084a:	d02e      	beq.n	80008aa <d_source_name+0x9e>
 800084c:	2b5f      	cmp	r3, #95	; 0x5f
 800084e:	d02c      	beq.n	80008aa <d_source_name+0x9e>
 8000850:	2b24      	cmp	r3, #36	; 0x24
 8000852:	d02a      	beq.n	80008aa <d_source_name+0x9e>
 8000854:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8000858:	4293      	cmp	r3, r2
 800085a:	da21      	bge.n	80008a0 <d_source_name+0x94>
 800085c:	6920      	ldr	r0, [r4, #16]
 800085e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8000862:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8000866:	3301      	adds	r3, #1
 8000868:	2200      	movs	r2, #0
 800086a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800086e:	6163      	str	r3, [r4, #20]
 8000870:	2300      	movs	r3, #0
 8000872:	7003      	strb	r3, [r0, #0]
 8000874:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8000878:	e9c0 6503 	strd	r6, r5, [r0, #12]
 800087c:	62a0      	str	r0, [r4, #40]	; 0x28
 800087e:	bd70      	pop	{r4, r5, r6, pc}
 8000880:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8000884:	4293      	cmp	r3, r2
 8000886:	da0b      	bge.n	80008a0 <d_source_name+0x94>
 8000888:	6920      	ldr	r0, [r4, #16]
 800088a:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800088e:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8000892:	3301      	adds	r3, #1
 8000894:	2200      	movs	r2, #0
 8000896:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800089a:	6163      	str	r3, [r4, #20]
 800089c:	2e00      	cmp	r6, #0
 800089e:	d1e7      	bne.n	8000870 <d_source_name+0x64>
 80008a0:	2000      	movs	r0, #0
 80008a2:	62a0      	str	r0, [r4, #40]	; 0x28
 80008a4:	bd70      	pop	{r4, r5, r6, pc}
 80008a6:	2000      	movs	r0, #0
 80008a8:	bd70      	pop	{r4, r5, r6, pc}
 80008aa:	7a73      	ldrb	r3, [r6, #9]
 80008ac:	2b4e      	cmp	r3, #78	; 0x4e
 80008ae:	d1d1      	bne.n	8000854 <d_source_name+0x48>
 80008b0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80008b2:	6963      	ldr	r3, [r4, #20]
 80008b4:	69a1      	ldr	r1, [r4, #24]
 80008b6:	3216      	adds	r2, #22
 80008b8:	1b52      	subs	r2, r2, r5
 80008ba:	428b      	cmp	r3, r1
 80008bc:	62e2      	str	r2, [r4, #44]	; 0x2c
 80008be:	daef      	bge.n	80008a0 <d_source_name+0x94>
 80008c0:	6922      	ldr	r2, [r4, #16]
 80008c2:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 80008c6:	0081      	lsls	r1, r0, #2
 80008c8:	3301      	adds	r3, #1
 80008ca:	6163      	str	r3, [r4, #20]
 80008cc:	eb02 0080 	add.w	r0, r2, r0, lsl #2
 80008d0:	2300      	movs	r3, #0
 80008d2:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80008d6:	5453      	strb	r3, [r2, r1]
 80008d8:	4a03      	ldr	r2, [pc, #12]	; (80008e8 <d_source_name+0xdc>)
 80008da:	2315      	movs	r3, #21
 80008dc:	e9c0 2303 	strd	r2, r3, [r0, #12]
 80008e0:	e7df      	b.n	80008a2 <d_source_name+0x96>
 80008e2:	bf00      	nop
 80008e4:	0800d444 	.word	0x0800d444
 80008e8:	0800d450 	.word	0x0800d450

080008ec <d_substitution>:
 80008ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80008f0:	68c3      	ldr	r3, [r0, #12]
 80008f2:	781a      	ldrb	r2, [r3, #0]
 80008f4:	2a53      	cmp	r2, #83	; 0x53
 80008f6:	d131      	bne.n	800095c <d_substitution+0x70>
 80008f8:	1c5a      	adds	r2, r3, #1
 80008fa:	60c2      	str	r2, [r0, #12]
 80008fc:	785a      	ldrb	r2, [r3, #1]
 80008fe:	4604      	mov	r4, r0
 8000900:	b3a2      	cbz	r2, 800096c <d_substitution+0x80>
 8000902:	1c9a      	adds	r2, r3, #2
 8000904:	60c2      	str	r2, [r0, #12]
 8000906:	785a      	ldrb	r2, [r3, #1]
 8000908:	2a5f      	cmp	r2, #95	; 0x5f
 800090a:	d044      	beq.n	8000996 <d_substitution+0xaa>
 800090c:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8000910:	b2d8      	uxtb	r0, r3
 8000912:	2809      	cmp	r0, #9
 8000914:	d826      	bhi.n	8000964 <d_substitution+0x78>
 8000916:	2100      	movs	r1, #0
 8000918:	e00d      	b.n	8000936 <d_substitution+0x4a>
 800091a:	3b30      	subs	r3, #48	; 0x30
 800091c:	4299      	cmp	r1, r3
 800091e:	d81d      	bhi.n	800095c <d_substitution+0x70>
 8000920:	68e0      	ldr	r0, [r4, #12]
 8000922:	7802      	ldrb	r2, [r0, #0]
 8000924:	4619      	mov	r1, r3
 8000926:	1c45      	adds	r5, r0, #1
 8000928:	b11a      	cbz	r2, 8000932 <d_substitution+0x46>
 800092a:	60e5      	str	r5, [r4, #12]
 800092c:	7802      	ldrb	r2, [r0, #0]
 800092e:	2a5f      	cmp	r2, #95	; 0x5f
 8000930:	d03b      	beq.n	80009aa <d_substitution+0xbe>
 8000932:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8000936:	b2d8      	uxtb	r0, r3
 8000938:	2809      	cmp	r0, #9
 800093a:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
 800093e:	f1a2 0c41 	sub.w	ip, r2, #65	; 0x41
 8000942:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8000946:	d9e8      	bls.n	800091a <d_substitution+0x2e>
 8000948:	f1bc 0f19 	cmp.w	ip, #25
 800094c:	d806      	bhi.n	800095c <d_substitution+0x70>
 800094e:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
 8000952:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8000956:	3b37      	subs	r3, #55	; 0x37
 8000958:	4299      	cmp	r1, r3
 800095a:	d9e1      	bls.n	8000920 <d_substitution+0x34>
 800095c:	2500      	movs	r5, #0
 800095e:	4628      	mov	r0, r5
 8000960:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000964:	f1a2 0041 	sub.w	r0, r2, #65	; 0x41
 8000968:	2819      	cmp	r0, #25
 800096a:	d9d4      	bls.n	8000916 <d_substitution+0x2a>
 800096c:	68a3      	ldr	r3, [r4, #8]
 800096e:	f003 0308 	and.w	r3, r3, #8
 8000972:	2b00      	cmp	r3, #0
 8000974:	bf14      	ite	ne
 8000976:	2501      	movne	r5, #1
 8000978:	2500      	moveq	r5, #0
 800097a:	d100      	bne.n	800097e <d_substitution+0x92>
 800097c:	b9b9      	cbnz	r1, 80009ae <d_substitution+0xc2>
 800097e:	4b3f      	ldr	r3, [pc, #252]	; (8000a7c <d_substitution+0x190>)
 8000980:	2174      	movs	r1, #116	; 0x74
 8000982:	f103 00a8 	add.w	r0, r3, #168	; 0xa8
 8000986:	e001      	b.n	800098c <d_substitution+0xa0>
 8000988:	f813 1f1c 	ldrb.w	r1, [r3, #28]!
 800098c:	4291      	cmp	r1, r2
 800098e:	d015      	beq.n	80009bc <d_substitution+0xd0>
 8000990:	4283      	cmp	r3, r0
 8000992:	d1f9      	bne.n	8000988 <d_substitution+0x9c>
 8000994:	e7e2      	b.n	800095c <d_substitution+0x70>
 8000996:	2300      	movs	r3, #0
 8000998:	6a22      	ldr	r2, [r4, #32]
 800099a:	429a      	cmp	r2, r3
 800099c:	d9de      	bls.n	800095c <d_substitution+0x70>
 800099e:	69e2      	ldr	r2, [r4, #28]
 80009a0:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
 80009a4:	4628      	mov	r0, r5
 80009a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80009aa:	3301      	adds	r3, #1
 80009ac:	e7f4      	b.n	8000998 <d_substitution+0xac>
 80009ae:	68e3      	ldr	r3, [r4, #12]
 80009b0:	781b      	ldrb	r3, [r3, #0]
 80009b2:	3b43      	subs	r3, #67	; 0x43
 80009b4:	2b01      	cmp	r3, #1
 80009b6:	bf98      	it	ls
 80009b8:	460d      	movls	r5, r1
 80009ba:	e7e0      	b.n	800097e <d_substitution+0x92>
 80009bc:	695e      	ldr	r6, [r3, #20]
 80009be:	2e00      	cmp	r6, #0
 80009c0:	d054      	beq.n	8000a6c <d_substitution+0x180>
 80009c2:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
 80009c6:	4282      	cmp	r2, r0
 80009c8:	f8d3 8018 	ldr.w	r8, [r3, #24]
 80009cc:	da53      	bge.n	8000a76 <d_substitution+0x18a>
 80009ce:	6927      	ldr	r7, [r4, #16]
 80009d0:	eb02 0c82 	add.w	ip, r2, r2, lsl #2
 80009d4:	eb07 018c 	add.w	r1, r7, ip, lsl #2
 80009d8:	f04f 0e00 	mov.w	lr, #0
 80009dc:	e9c1 ee01 	strd	lr, lr, [r1, #4]
 80009e0:	3201      	adds	r2, #1
 80009e2:	f04f 0e18 	mov.w	lr, #24
 80009e6:	6162      	str	r2, [r4, #20]
 80009e8:	f807 e02c 	strb.w	lr, [r7, ip, lsl #2]
 80009ec:	e9c1 6803 	strd	r6, r8, [r1, #12]
 80009f0:	62a1      	str	r1, [r4, #40]	; 0x28
 80009f2:	2d00      	cmp	r5, #0
 80009f4:	d037      	beq.n	8000a66 <d_substitution+0x17a>
 80009f6:	e9d3 7103 	ldrd	r7, r1, [r3, #12]
 80009fa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80009fc:	4282      	cmp	r2, r0
 80009fe:	440b      	add	r3, r1
 8000a00:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000a02:	da36      	bge.n	8000a72 <d_substitution+0x186>
 8000a04:	6923      	ldr	r3, [r4, #16]
 8000a06:	eb02 0082 	add.w	r0, r2, r2, lsl #2
 8000a0a:	eb03 0580 	add.w	r5, r3, r0, lsl #2
 8000a0e:	3201      	adds	r2, #1
 8000a10:	2600      	movs	r6, #0
 8000a12:	e9c5 6601 	strd	r6, r6, [r5, #4]
 8000a16:	6162      	str	r2, [r4, #20]
 8000a18:	2218      	movs	r2, #24
 8000a1a:	f803 2020 	strb.w	r2, [r3, r0, lsl #2]
 8000a1e:	e9c5 7103 	strd	r7, r1, [r5, #12]
 8000a22:	68e3      	ldr	r3, [r4, #12]
 8000a24:	781a      	ldrb	r2, [r3, #0]
 8000a26:	2a42      	cmp	r2, #66	; 0x42
 8000a28:	d199      	bne.n	800095e <d_substitution+0x72>
 8000a2a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000a2c:	3301      	adds	r3, #1
 8000a2e:	60e3      	str	r3, [r4, #12]
 8000a30:	4620      	mov	r0, r4
 8000a32:	f7ff feeb 	bl	800080c <d_source_name>
 8000a36:	462a      	mov	r2, r5
 8000a38:	4603      	mov	r3, r0
 8000a3a:	214d      	movs	r1, #77	; 0x4d
 8000a3c:	4620      	mov	r0, r4
 8000a3e:	f7ff fbcf 	bl	80001e0 <d_make_comp>
 8000a42:	68e3      	ldr	r3, [r4, #12]
 8000a44:	781a      	ldrb	r2, [r3, #0]
 8000a46:	2a42      	cmp	r2, #66	; 0x42
 8000a48:	4605      	mov	r5, r0
 8000a4a:	d0ef      	beq.n	8000a2c <d_substitution+0x140>
 8000a4c:	62a6      	str	r6, [r4, #40]	; 0x28
 8000a4e:	2800      	cmp	r0, #0
 8000a50:	d084      	beq.n	800095c <d_substitution+0x70>
 8000a52:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 8000a56:	4293      	cmp	r3, r2
 8000a58:	da80      	bge.n	800095c <d_substitution+0x70>
 8000a5a:	69e1      	ldr	r1, [r4, #28]
 8000a5c:	1c5a      	adds	r2, r3, #1
 8000a5e:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8000a62:	6222      	str	r2, [r4, #32]
 8000a64:	e77b      	b.n	800095e <d_substitution+0x72>
 8000a66:	e9d3 7101 	ldrd	r7, r1, [r3, #4]
 8000a6a:	e7c6      	b.n	80009fa <d_substitution+0x10e>
 8000a6c:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
 8000a70:	e7bf      	b.n	80009f2 <d_substitution+0x106>
 8000a72:	2500      	movs	r5, #0
 8000a74:	e7d5      	b.n	8000a22 <d_substitution+0x136>
 8000a76:	2100      	movs	r1, #0
 8000a78:	e7ba      	b.n	80009f0 <d_substitution+0x104>
 8000a7a:	bf00      	nop
 8000a7c:	0800c890 	.word	0x0800c890

08000a80 <d_type>:
 8000a80:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000a84:	68c2      	ldr	r2, [r0, #12]
 8000a86:	b083      	sub	sp, #12
 8000a88:	4604      	mov	r4, r0
 8000a8a:	4610      	mov	r0, r2
 8000a8c:	f7ff fd7e 	bl	800058c <next_is_type_qual.isra.0>
 8000a90:	2800      	cmp	r0, #0
 8000a92:	d166      	bne.n	8000b62 <d_type+0xe2>
 8000a94:	7813      	ldrb	r3, [r2, #0]
 8000a96:	2b5a      	cmp	r3, #90	; 0x5a
 8000a98:	d831      	bhi.n	8000afe <d_type+0x7e>
 8000a9a:	2b2f      	cmp	r3, #47	; 0x2f
 8000a9c:	d95c      	bls.n	8000b58 <d_type+0xd8>
 8000a9e:	3b30      	subs	r3, #48	; 0x30
 8000aa0:	2b2a      	cmp	r3, #42	; 0x2a
 8000aa2:	d859      	bhi.n	8000b58 <d_type+0xd8>
 8000aa4:	e8df f013 	tbh	[pc, r3, lsl #1]
 8000aa8:	008c008c 	.word	0x008c008c
 8000aac:	008c008c 	.word	0x008c008c
 8000ab0:	008c008c 	.word	0x008c008c
 8000ab4:	008c008c 	.word	0x008c008c
 8000ab8:	008c008c 	.word	0x008c008c
 8000abc:	00580058 	.word	0x00580058
 8000ac0:	00580058 	.word	0x00580058
 8000ac4:	00580058 	.word	0x00580058
 8000ac8:	01d60058 	.word	0x01d60058
 8000acc:	00d90058 	.word	0x00d90058
 8000ad0:	005800ed 	.word	0x005800ed
 8000ad4:	016000e7 	.word	0x016000e7
 8000ad8:	00580058 	.word	0x00580058
 8000adc:	00580058 	.word	0x00580058
 8000ae0:	02180058 	.word	0x02180058
 8000ae4:	00cb008c 	.word	0x00cb008c
 8000ae8:	005800bd 	.word	0x005800bd
 8000aec:	019500af 	.word	0x019500af
 8000af0:	01be016e 	.word	0x01be016e
 8000af4:	00580058 	.word	0x00580058
 8000af8:	00580058 	.word	0x00580058
 8000afc:	008c      	.short	0x008c
 8000afe:	3b61      	subs	r3, #97	; 0x61
 8000b00:	fa5f fc83 	uxtb.w	ip, r3
 8000b04:	f1bc 0f19 	cmp.w	ip, #25
 8000b08:	d826      	bhi.n	8000b58 <d_type+0xd8>
 8000b0a:	4dc4      	ldr	r5, [pc, #784]	; (8000e1c <d_type+0x39c>)
 8000b0c:	2101      	movs	r1, #1
 8000b0e:	fa01 f10c 	lsl.w	r1, r1, ip
 8000b12:	400d      	ands	r5, r1
 8000b14:	b1ed      	cbz	r5, 8000b52 <d_type+0xd2>
 8000b16:	49c2      	ldr	r1, [pc, #776]	; (8000e20 <d_type+0x3a0>)
 8000b18:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8000b1c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8000b20:	e9d4 3505 	ldrd	r3, r5, [r4, #20]
 8000b24:	42ab      	cmp	r3, r5
 8000b26:	f280 83c5 	bge.w	80012b4 <d_type+0x834>
 8000b2a:	6926      	ldr	r6, [r4, #16]
 8000b2c:	eb03 0c83 	add.w	ip, r3, r3, lsl #2
 8000b30:	eb06 058c 	add.w	r5, r6, ip, lsl #2
 8000b34:	3301      	adds	r3, #1
 8000b36:	e9c5 0001 	strd	r0, r0, [r5, #4]
 8000b3a:	6163      	str	r3, [r4, #20]
 8000b3c:	2327      	movs	r3, #39	; 0x27
 8000b3e:	f806 302c 	strb.w	r3, [r6, ip, lsl #2]
 8000b42:	60e9      	str	r1, [r5, #12]
 8000b44:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8000b46:	6849      	ldr	r1, [r1, #4]
 8000b48:	3201      	adds	r2, #1
 8000b4a:	440b      	add	r3, r1
 8000b4c:	60e2      	str	r2, [r4, #12]
 8000b4e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000b50:	e003      	b.n	8000b5a <d_type+0xda>
 8000b52:	f1bc 0f14 	cmp.w	ip, #20
 8000b56:	d048      	beq.n	8000bea <d_type+0x16a>
 8000b58:	2500      	movs	r5, #0
 8000b5a:	4628      	mov	r0, r5
 8000b5c:	b003      	add	sp, #12
 8000b5e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000b62:	2200      	movs	r2, #0
 8000b64:	a901      	add	r1, sp, #4
 8000b66:	4620      	mov	r0, r4
 8000b68:	f001 fab4 	bl	80020d4 <d_cv_qualifiers>
 8000b6c:	4605      	mov	r5, r0
 8000b6e:	2800      	cmp	r0, #0
 8000b70:	d0f2      	beq.n	8000b58 <d_type+0xd8>
 8000b72:	68e3      	ldr	r3, [r4, #12]
 8000b74:	781b      	ldrb	r3, [r3, #0]
 8000b76:	2b46      	cmp	r3, #70	; 0x46
 8000b78:	4620      	mov	r0, r4
 8000b7a:	d01e      	beq.n	8000bba <d_type+0x13a>
 8000b7c:	f7ff ff80 	bl	8000a80 <d_type>
 8000b80:	6028      	str	r0, [r5, #0]
 8000b82:	2800      	cmp	r0, #0
 8000b84:	d0e8      	beq.n	8000b58 <d_type+0xd8>
 8000b86:	7803      	ldrb	r3, [r0, #0]
 8000b88:	3b1f      	subs	r3, #31
 8000b8a:	2b01      	cmp	r3, #1
 8000b8c:	d805      	bhi.n	8000b9a <d_type+0x11a>
 8000b8e:	9a01      	ldr	r2, [sp, #4]
 8000b90:	68c3      	ldr	r3, [r0, #12]
 8000b92:	60c2      	str	r2, [r0, #12]
 8000b94:	682a      	ldr	r2, [r5, #0]
 8000b96:	9201      	str	r2, [sp, #4]
 8000b98:	602b      	str	r3, [r5, #0]
 8000b9a:	9d01      	ldr	r5, [sp, #4]
 8000b9c:	2d00      	cmp	r5, #0
 8000b9e:	d0db      	beq.n	8000b58 <d_type+0xd8>
 8000ba0:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 8000ba4:	4293      	cmp	r3, r2
 8000ba6:	dad7      	bge.n	8000b58 <d_type+0xd8>
 8000ba8:	69e1      	ldr	r1, [r4, #28]
 8000baa:	1c5a      	adds	r2, r3, #1
 8000bac:	4628      	mov	r0, r5
 8000bae:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
 8000bb2:	6222      	str	r2, [r4, #32]
 8000bb4:	b003      	add	sp, #12
 8000bb6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000bba:	f000 fbfd 	bl	80013b8 <d_function_type>
 8000bbe:	e7df      	b.n	8000b80 <d_type+0x100>
 8000bc0:	4620      	mov	r0, r4
 8000bc2:	f001 fd6b 	bl	800269c <d_name>
 8000bc6:	4605      	mov	r5, r0
 8000bc8:	9001      	str	r0, [sp, #4]
 8000bca:	2d00      	cmp	r5, #0
 8000bcc:	d0c4      	beq.n	8000b58 <d_type+0xd8>
 8000bce:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 8000bd2:	4293      	cmp	r3, r2
 8000bd4:	dac0      	bge.n	8000b58 <d_type+0xd8>
 8000bd6:	69e1      	ldr	r1, [r4, #28]
 8000bd8:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
 8000bdc:	9d01      	ldr	r5, [sp, #4]
 8000bde:	1c5a      	adds	r2, r3, #1
 8000be0:	4628      	mov	r0, r5
 8000be2:	6222      	str	r2, [r4, #32]
 8000be4:	b003      	add	sp, #12
 8000be6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000bea:	3201      	adds	r2, #1
 8000bec:	60e2      	str	r2, [r4, #12]
 8000bee:	4620      	mov	r0, r4
 8000bf0:	f7ff fe0c 	bl	800080c <d_source_name>
 8000bf4:	462b      	mov	r3, r5
 8000bf6:	4602      	mov	r2, r0
 8000bf8:	2128      	movs	r1, #40	; 0x28
 8000bfa:	4620      	mov	r0, r4
 8000bfc:	f7ff faf0 	bl	80001e0 <d_make_comp>
 8000c00:	4605      	mov	r5, r0
 8000c02:	9001      	str	r0, [sp, #4]
 8000c04:	e7e1      	b.n	8000bca <d_type+0x14a>
 8000c06:	3201      	adds	r2, #1
 8000c08:	60e2      	str	r2, [r4, #12]
 8000c0a:	4620      	mov	r0, r4
 8000c0c:	f7ff ff38 	bl	8000a80 <d_type>
 8000c10:	2300      	movs	r3, #0
 8000c12:	4602      	mov	r2, r0
 8000c14:	2123      	movs	r1, #35	; 0x23
 8000c16:	4620      	mov	r0, r4
 8000c18:	f7ff fae2 	bl	80001e0 <d_make_comp>
 8000c1c:	4605      	mov	r5, r0
 8000c1e:	9001      	str	r0, [sp, #4]
 8000c20:	e7d3      	b.n	8000bca <d_type+0x14a>
 8000c22:	3201      	adds	r2, #1
 8000c24:	60e2      	str	r2, [r4, #12]
 8000c26:	4620      	mov	r0, r4
 8000c28:	f7ff ff2a 	bl	8000a80 <d_type>
 8000c2c:	2300      	movs	r3, #0
 8000c2e:	4602      	mov	r2, r0
 8000c30:	2122      	movs	r1, #34	; 0x22
 8000c32:	4620      	mov	r0, r4
 8000c34:	f7ff fad4 	bl	80001e0 <d_make_comp>
 8000c38:	4605      	mov	r5, r0
 8000c3a:	9001      	str	r0, [sp, #4]
 8000c3c:	e7c5      	b.n	8000bca <d_type+0x14a>
 8000c3e:	3201      	adds	r2, #1
 8000c40:	60e2      	str	r2, [r4, #12]
 8000c42:	4620      	mov	r0, r4
 8000c44:	f7ff ff1c 	bl	8000a80 <d_type>
 8000c48:	2300      	movs	r3, #0
 8000c4a:	4602      	mov	r2, r0
 8000c4c:	2124      	movs	r1, #36	; 0x24
 8000c4e:	4620      	mov	r0, r4
 8000c50:	f7ff fac6 	bl	80001e0 <d_make_comp>
 8000c54:	4605      	mov	r5, r0
 8000c56:	9001      	str	r0, [sp, #4]
 8000c58:	e7b7      	b.n	8000bca <d_type+0x14a>
 8000c5a:	3201      	adds	r2, #1
 8000c5c:	60e2      	str	r2, [r4, #12]
 8000c5e:	4620      	mov	r0, r4
 8000c60:	f7ff ff0e 	bl	8000a80 <d_type>
 8000c64:	2300      	movs	r3, #0
 8000c66:	4602      	mov	r2, r0
 8000c68:	2125      	movs	r1, #37	; 0x25
 8000c6a:	4620      	mov	r0, r4
 8000c6c:	f7ff fab8 	bl	80001e0 <d_make_comp>
 8000c70:	4605      	mov	r5, r0
 8000c72:	9001      	str	r0, [sp, #4]
 8000c74:	e7a9      	b.n	8000bca <d_type+0x14a>
 8000c76:	4620      	mov	r0, r4
 8000c78:	f000 fb9e 	bl	80013b8 <d_function_type>
 8000c7c:	4605      	mov	r5, r0
 8000c7e:	9001      	str	r0, [sp, #4]
 8000c80:	e7a3      	b.n	8000bca <d_type+0x14a>
 8000c82:	1c53      	adds	r3, r2, #1
 8000c84:	60e3      	str	r3, [r4, #12]
 8000c86:	7853      	ldrb	r3, [r2, #1]
 8000c88:	2b00      	cmp	r3, #0
 8000c8a:	f43f af65 	beq.w	8000b58 <d_type+0xd8>
 8000c8e:	1c93      	adds	r3, r2, #2
 8000c90:	60e3      	str	r3, [r4, #12]
 8000c92:	7853      	ldrb	r3, [r2, #1]
 8000c94:	3b46      	subs	r3, #70	; 0x46
 8000c96:	2b30      	cmp	r3, #48	; 0x30
 8000c98:	f63f af5e 	bhi.w	8000b58 <d_type+0xd8>
 8000c9c:	a101      	add	r1, pc, #4	; (adr r1, 8000ca4 <d_type+0x224>)
 8000c9e:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000ca2:	bf00      	nop
 8000ca4:	08000f45 	.word	0x08000f45
 8000ca8:	08000b59 	.word	0x08000b59
 8000cac:	08000b59 	.word	0x08000b59
 8000cb0:	08000b59 	.word	0x08000b59
 8000cb4:	08000b59 	.word	0x08000b59
 8000cb8:	08000b59 	.word	0x08000b59
 8000cbc:	08000b59 	.word	0x08000b59
 8000cc0:	08000b59 	.word	0x08000b59
 8000cc4:	08000b59 	.word	0x08000b59
 8000cc8:	08000b59 	.word	0x08000b59
 8000ccc:	08000b59 	.word	0x08000b59
 8000cd0:	08000b59 	.word	0x08000b59
 8000cd4:	08000b59 	.word	0x08000b59
 8000cd8:	08000b59 	.word	0x08000b59
 8000cdc:	08000f09 	.word	0x08000f09
 8000ce0:	08000b59 	.word	0x08000b59
 8000ce4:	08000b59 	.word	0x08000b59
 8000ce8:	08000b59 	.word	0x08000b59
 8000cec:	08000b59 	.word	0x08000b59
 8000cf0:	08000b59 	.word	0x08000b59
 8000cf4:	08000b59 	.word	0x08000b59
 8000cf8:	08000b59 	.word	0x08000b59
 8000cfc:	08000b59 	.word	0x08000b59
 8000d00:	08000b59 	.word	0x08000b59
 8000d04:	08000b59 	.word	0x08000b59
 8000d08:	08000b59 	.word	0x08000b59
 8000d0c:	08000b59 	.word	0x08000b59
 8000d10:	08000fdd 	.word	0x08000fdd
 8000d14:	08000b59 	.word	0x08000b59
 8000d18:	08000fb1 	.word	0x08000fb1
 8000d1c:	080011cb 	.word	0x080011cb
 8000d20:	0800119b 	.word	0x0800119b
 8000d24:	08001039 	.word	0x08001039
 8000d28:	08000b59 	.word	0x08000b59
 8000d2c:	08001009 	.word	0x08001009
 8000d30:	0800116b 	.word	0x0800116b
 8000d34:	08000b59 	.word	0x08000b59
 8000d38:	08000b59 	.word	0x08000b59
 8000d3c:	08000b59 	.word	0x08000b59
 8000d40:	08000b59 	.word	0x08000b59
 8000d44:	0800113b 	.word	0x0800113b
 8000d48:	08000b59 	.word	0x08000b59
 8000d4c:	08001123 	.word	0x08001123
 8000d50:	08000b59 	.word	0x08000b59
 8000d54:	08000b59 	.word	0x08000b59
 8000d58:	080010f3 	.word	0x080010f3
 8000d5c:	08000f09 	.word	0x08000f09
 8000d60:	080010c3 	.word	0x080010c3
 8000d64:	08001069 	.word	0x08001069
 8000d68:	3201      	adds	r2, #1
 8000d6a:	60e2      	str	r2, [r4, #12]
 8000d6c:	4620      	mov	r0, r4
 8000d6e:	f7ff fe87 	bl	8000a80 <d_type>
 8000d72:	2300      	movs	r3, #0
 8000d74:	4602      	mov	r2, r0
 8000d76:	2126      	movs	r1, #38	; 0x26
 8000d78:	4620      	mov	r0, r4
 8000d7a:	f7ff fa31 	bl	80001e0 <d_make_comp>
 8000d7e:	4605      	mov	r5, r0
 8000d80:	9001      	str	r0, [sp, #4]
 8000d82:	e722      	b.n	8000bca <d_type+0x14a>
 8000d84:	4620      	mov	r0, r4
 8000d86:	f7ff fcd5 	bl	8000734 <d_template_param>
 8000d8a:	68e6      	ldr	r6, [r4, #12]
 8000d8c:	9001      	str	r0, [sp, #4]
 8000d8e:	7833      	ldrb	r3, [r6, #0]
 8000d90:	2b49      	cmp	r3, #73	; 0x49
 8000d92:	4605      	mov	r5, r0
 8000d94:	f47f af19 	bne.w	8000bca <d_type+0x14a>
 8000d98:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000d9a:	2b00      	cmp	r3, #0
 8000d9c:	f040 8257 	bne.w	800124e <d_type+0x7ce>
 8000da0:	2800      	cmp	r0, #0
 8000da2:	f43f aed9 	beq.w	8000b58 <d_type+0xd8>
 8000da6:	e9d4 2108 	ldrd	r2, r1, [r4, #32]
 8000daa:	428a      	cmp	r2, r1
 8000dac:	f6bf aed4 	bge.w	8000b58 <d_type+0xd8>
 8000db0:	69e1      	ldr	r1, [r4, #28]
 8000db2:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 8000db6:	3201      	adds	r2, #1
 8000db8:	6222      	str	r2, [r4, #32]
 8000dba:	7832      	ldrb	r2, [r6, #0]
 8000dbc:	3a49      	subs	r2, #73	; 0x49
 8000dbe:	2a01      	cmp	r2, #1
 8000dc0:	d805      	bhi.n	8000dce <d_type+0x34e>
 8000dc2:	3601      	adds	r6, #1
 8000dc4:	60e6      	str	r6, [r4, #12]
 8000dc6:	4620      	mov	r0, r4
 8000dc8:	f000 fe0a 	bl	80019e0 <d_template_args_1>
 8000dcc:	4603      	mov	r3, r0
 8000dce:	462a      	mov	r2, r5
 8000dd0:	e01c      	b.n	8000e0c <d_type+0x38c>
 8000dd2:	7853      	ldrb	r3, [r2, #1]
 8000dd4:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8000dd8:	2a09      	cmp	r2, #9
 8000dda:	d905      	bls.n	8000de8 <d_type+0x368>
 8000ddc:	2b5f      	cmp	r3, #95	; 0x5f
 8000dde:	d003      	beq.n	8000de8 <d_type+0x368>
 8000de0:	3b41      	subs	r3, #65	; 0x41
 8000de2:	2b19      	cmp	r3, #25
 8000de4:	f200 8226 	bhi.w	8001234 <d_type+0x7b4>
 8000de8:	2100      	movs	r1, #0
 8000dea:	4620      	mov	r0, r4
 8000dec:	f7ff fd7e 	bl	80008ec <d_substitution>
 8000df0:	68e3      	ldr	r3, [r4, #12]
 8000df2:	9001      	str	r0, [sp, #4]
 8000df4:	781a      	ldrb	r2, [r3, #0]
 8000df6:	2a49      	cmp	r2, #73	; 0x49
 8000df8:	4605      	mov	r5, r0
 8000dfa:	f47f aeae 	bne.w	8000b5a <d_type+0xda>
 8000dfe:	3301      	adds	r3, #1
 8000e00:	60e3      	str	r3, [r4, #12]
 8000e02:	4620      	mov	r0, r4
 8000e04:	f000 fdec 	bl	80019e0 <d_template_args_1>
 8000e08:	462a      	mov	r2, r5
 8000e0a:	4603      	mov	r3, r0
 8000e0c:	2104      	movs	r1, #4
 8000e0e:	4620      	mov	r0, r4
 8000e10:	f7ff f9e6 	bl	80001e0 <d_make_comp>
 8000e14:	4605      	mov	r5, r0
 8000e16:	9001      	str	r0, [sp, #4]
 8000e18:	e6d7      	b.n	8000bca <d_type+0x14a>
 8000e1a:	bf00      	nop
 8000e1c:	03ec7bff 	.word	0x03ec7bff
 8000e20:	0800c954 	.word	0x0800c954
 8000e24:	3201      	adds	r2, #1
 8000e26:	60e2      	str	r2, [r4, #12]
 8000e28:	4620      	mov	r0, r4
 8000e2a:	f7ff fcef 	bl	800080c <d_source_name>
 8000e2e:	68e3      	ldr	r3, [r4, #12]
 8000e30:	9001      	str	r0, [sp, #4]
 8000e32:	781a      	ldrb	r2, [r3, #0]
 8000e34:	2a49      	cmp	r2, #73	; 0x49
 8000e36:	4605      	mov	r5, r0
 8000e38:	f000 81e1 	beq.w	80011fe <d_type+0x77e>
 8000e3c:	4620      	mov	r0, r4
 8000e3e:	f7ff fe1f 	bl	8000a80 <d_type>
 8000e42:	462b      	mov	r3, r5
 8000e44:	4602      	mov	r2, r0
 8000e46:	2121      	movs	r1, #33	; 0x21
 8000e48:	4620      	mov	r0, r4
 8000e4a:	f7ff f9c9 	bl	80001e0 <d_make_comp>
 8000e4e:	4605      	mov	r5, r0
 8000e50:	9001      	str	r0, [sp, #4]
 8000e52:	e6ba      	b.n	8000bca <d_type+0x14a>
 8000e54:	1c55      	adds	r5, r2, #1
 8000e56:	60e5      	str	r5, [r4, #12]
 8000e58:	7853      	ldrb	r3, [r2, #1]
 8000e5a:	2b5f      	cmp	r3, #95	; 0x5f
 8000e5c:	f000 81cd 	beq.w	80011fa <d_type+0x77a>
 8000e60:	3b30      	subs	r3, #48	; 0x30
 8000e62:	2b09      	cmp	r3, #9
 8000e64:	f200 81d8 	bhi.w	8001218 <d_type+0x798>
 8000e68:	462b      	mov	r3, r5
 8000e6a:	469c      	mov	ip, r3
 8000e6c:	3301      	adds	r3, #1
 8000e6e:	60e3      	str	r3, [r4, #12]
 8000e70:	7819      	ldrb	r1, [r3, #0]
 8000e72:	3930      	subs	r1, #48	; 0x30
 8000e74:	2909      	cmp	r1, #9
 8000e76:	d9f8      	bls.n	8000e6a <d_type+0x3ea>
 8000e78:	e9d4 1005 	ldrd	r1, r0, [r4, #20]
 8000e7c:	4281      	cmp	r1, r0
 8000e7e:	ebac 0202 	sub.w	r2, ip, r2
 8000e82:	f6bf ae69 	bge.w	8000b58 <d_type+0xd8>
 8000e86:	6927      	ldr	r7, [r4, #16]
 8000e88:	eb01 0081 	add.w	r0, r1, r1, lsl #2
 8000e8c:	eb07 0680 	add.w	r6, r7, r0, lsl #2
 8000e90:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 8000e94:	2000      	movs	r0, #0
 8000e96:	3101      	adds	r1, #1
 8000e98:	4282      	cmp	r2, r0
 8000e9a:	e9c6 0001 	strd	r0, r0, [r6, #4]
 8000e9e:	6161      	str	r1, [r4, #20]
 8000ea0:	f77f ae5a 	ble.w	8000b58 <d_type+0xd8>
 8000ea4:	e9c6 0001 	strd	r0, r0, [r6, #4]
 8000ea8:	f807 000e 	strb.w	r0, [r7, lr]
 8000eac:	e9c6 5203 	strd	r5, r2, [r6, #12]
 8000eb0:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8000eb4:	461d      	mov	r5, r3
 8000eb6:	2a5f      	cmp	r2, #95	; 0x5f
 8000eb8:	f47f ae4e 	bne.w	8000b58 <d_type+0xd8>
 8000ebc:	3501      	adds	r5, #1
 8000ebe:	60e5      	str	r5, [r4, #12]
 8000ec0:	4620      	mov	r0, r4
 8000ec2:	f7ff fddd 	bl	8000a80 <d_type>
 8000ec6:	4632      	mov	r2, r6
 8000ec8:	4603      	mov	r3, r0
 8000eca:	212a      	movs	r1, #42	; 0x2a
 8000ecc:	4620      	mov	r0, r4
 8000ece:	f7ff f987 	bl	80001e0 <d_make_comp>
 8000ed2:	4605      	mov	r5, r0
 8000ed4:	9001      	str	r0, [sp, #4]
 8000ed6:	e678      	b.n	8000bca <d_type+0x14a>
 8000ed8:	3201      	adds	r2, #1
 8000eda:	60e2      	str	r2, [r4, #12]
 8000edc:	4620      	mov	r0, r4
 8000ede:	f7ff fdcf 	bl	8000a80 <d_type>
 8000ee2:	4605      	mov	r5, r0
 8000ee4:	2800      	cmp	r0, #0
 8000ee6:	f43f ae37 	beq.w	8000b58 <d_type+0xd8>
 8000eea:	4620      	mov	r0, r4
 8000eec:	f7ff fdc8 	bl	8000a80 <d_type>
 8000ef0:	4603      	mov	r3, r0
 8000ef2:	2800      	cmp	r0, #0
 8000ef4:	f43f ae30 	beq.w	8000b58 <d_type+0xd8>
 8000ef8:	462a      	mov	r2, r5
 8000efa:	212b      	movs	r1, #43	; 0x2b
 8000efc:	4620      	mov	r0, r4
 8000efe:	f7ff f96f 	bl	80001e0 <d_make_comp>
 8000f02:	4605      	mov	r5, r0
 8000f04:	9001      	str	r0, [sp, #4]
 8000f06:	e660      	b.n	8000bca <d_type+0x14a>
 8000f08:	2301      	movs	r3, #1
 8000f0a:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8000f0c:	6323      	str	r3, [r4, #48]	; 0x30
 8000f0e:	4620      	mov	r0, r4
 8000f10:	f000 fe2e 	bl	8001b70 <d_expression_1>
 8000f14:	6325      	str	r5, [r4, #48]	; 0x30
 8000f16:	4602      	mov	r2, r0
 8000f18:	2300      	movs	r3, #0
 8000f1a:	2144      	movs	r1, #68	; 0x44
 8000f1c:	4620      	mov	r0, r4
 8000f1e:	f7ff f95f 	bl	80001e0 <d_make_comp>
 8000f22:	4605      	mov	r5, r0
 8000f24:	9001      	str	r0, [sp, #4]
 8000f26:	2800      	cmp	r0, #0
 8000f28:	f43f ae16 	beq.w	8000b58 <d_type+0xd8>
 8000f2c:	68e3      	ldr	r3, [r4, #12]
 8000f2e:	781a      	ldrb	r2, [r3, #0]
 8000f30:	2a00      	cmp	r2, #0
 8000f32:	f43f ae11 	beq.w	8000b58 <d_type+0xd8>
 8000f36:	1c5a      	adds	r2, r3, #1
 8000f38:	60e2      	str	r2, [r4, #12]
 8000f3a:	781b      	ldrb	r3, [r3, #0]
 8000f3c:	2b45      	cmp	r3, #69	; 0x45
 8000f3e:	f47f ae0b 	bne.w	8000b58 <d_type+0xd8>
 8000f42:	e644      	b.n	8000bce <d_type+0x14e>
 8000f44:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8000f48:	428b      	cmp	r3, r1
 8000f4a:	f280 81b5 	bge.w	80012b8 <d_type+0x838>
 8000f4e:	6921      	ldr	r1, [r4, #16]
 8000f50:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 8000f54:	eb01 0580 	add.w	r5, r1, r0, lsl #2
 8000f58:	3301      	adds	r3, #1
 8000f5a:	2600      	movs	r6, #0
 8000f5c:	e9c5 6601 	strd	r6, r6, [r5, #4]
 8000f60:	6163      	str	r3, [r4, #20]
 8000f62:	232c      	movs	r3, #44	; 0x2c
 8000f64:	f801 3020 	strb.w	r3, [r1, r0, lsl #2]
 8000f68:	7893      	ldrb	r3, [r2, #2]
 8000f6a:	9501      	str	r5, [sp, #4]
 8000f6c:	3b30      	subs	r3, #48	; 0x30
 8000f6e:	b2db      	uxtb	r3, r3
 8000f70:	2b09      	cmp	r3, #9
 8000f72:	bf94      	ite	ls
 8000f74:	2301      	movls	r3, #1
 8000f76:	4633      	movhi	r3, r6
 8000f78:	822b      	strh	r3, [r5, #16]
 8000f7a:	d802      	bhi.n	8000f82 <d_type+0x502>
 8000f7c:	4620      	mov	r0, r4
 8000f7e:	f7ff f9a7 	bl	80002d0 <d_number>
 8000f82:	4620      	mov	r0, r4
 8000f84:	f7ff fd7c 	bl	8000a80 <d_type>
 8000f88:	60e8      	str	r0, [r5, #12]
 8000f8a:	2800      	cmp	r0, #0
 8000f8c:	f43f ade4 	beq.w	8000b58 <d_type+0xd8>
 8000f90:	4620      	mov	r0, r4
 8000f92:	f7ff f99d 	bl	80002d0 <d_number>
 8000f96:	68e2      	ldr	r2, [r4, #12]
 8000f98:	7813      	ldrb	r3, [r2, #0]
 8000f9a:	b113      	cbz	r3, 8000fa2 <d_type+0x522>
 8000f9c:	1c53      	adds	r3, r2, #1
 8000f9e:	60e3      	str	r3, [r4, #12]
 8000fa0:	7813      	ldrb	r3, [r2, #0]
 8000fa2:	f1a3 0373 	sub.w	r3, r3, #115	; 0x73
 8000fa6:	fab3 f383 	clz	r3, r3
 8000faa:	095b      	lsrs	r3, r3, #5
 8000fac:	826b      	strh	r3, [r5, #18]
 8000fae:	e5d4      	b.n	8000b5a <d_type+0xda>
 8000fb0:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8000fb4:	4293      	cmp	r3, r2
 8000fb6:	f6bf adcf 	bge.w	8000b58 <d_type+0xd8>
 8000fba:	6922      	ldr	r2, [r4, #16]
 8000fbc:	49c0      	ldr	r1, [pc, #768]	; (80012c0 <d_type+0x840>)
 8000fbe:	eb03 0583 	add.w	r5, r3, r3, lsl #2
 8000fc2:	00a8      	lsls	r0, r5, #2
 8000fc4:	3301      	adds	r3, #1
 8000fc6:	6163      	str	r3, [r4, #20]
 8000fc8:	eb02 0585 	add.w	r5, r2, r5, lsl #2
 8000fcc:	2300      	movs	r3, #0
 8000fce:	e9c5 3301 	strd	r3, r3, [r5, #4]
 8000fd2:	5413      	strb	r3, [r2, r0]
 8000fd4:	230e      	movs	r3, #14
 8000fd6:	e9c5 1303 	strd	r1, r3, [r5, #12]
 8000fda:	e5be      	b.n	8000b5a <d_type+0xda>
 8000fdc:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8000fe0:	4293      	cmp	r3, r2
 8000fe2:	f6bf adb9 	bge.w	8000b58 <d_type+0xd8>
 8000fe6:	6922      	ldr	r2, [r4, #16]
 8000fe8:	49b6      	ldr	r1, [pc, #728]	; (80012c4 <d_type+0x844>)
 8000fea:	eb03 0583 	add.w	r5, r3, r3, lsl #2
 8000fee:	00a8      	lsls	r0, r5, #2
 8000ff0:	3301      	adds	r3, #1
 8000ff2:	6163      	str	r3, [r4, #20]
 8000ff4:	eb02 0585 	add.w	r5, r2, r5, lsl #2
 8000ff8:	2300      	movs	r3, #0
 8000ffa:	e9c5 3301 	strd	r3, r3, [r5, #4]
 8000ffe:	5413      	strb	r3, [r2, r0]
 8001000:	2304      	movs	r3, #4
 8001002:	e9c5 1303 	strd	r1, r3, [r5, #12]
 8001006:	e5a8      	b.n	8000b5a <d_type+0xda>
 8001008:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 800100c:	4293      	cmp	r3, r2
 800100e:	f280 816b 	bge.w	80012e8 <d_type+0x868>
 8001012:	6922      	ldr	r2, [r4, #16]
 8001014:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 8001018:	eb02 0581 	add.w	r5, r2, r1, lsl #2
 800101c:	3301      	adds	r3, #1
 800101e:	2000      	movs	r0, #0
 8001020:	e9c5 0001 	strd	r0, r0, [r5, #4]
 8001024:	6163      	str	r3, [r4, #20]
 8001026:	2327      	movs	r3, #39	; 0x27
 8001028:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
 800102c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800102e:	4aa6      	ldr	r2, [pc, #664]	; (80012c8 <d_type+0x848>)
 8001030:	60ea      	str	r2, [r5, #12]
 8001032:	3304      	adds	r3, #4
 8001034:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001036:	e590      	b.n	8000b5a <d_type+0xda>
 8001038:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 800103c:	4293      	cmp	r3, r2
 800103e:	f280 8153 	bge.w	80012e8 <d_type+0x868>
 8001042:	6922      	ldr	r2, [r4, #16]
 8001044:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 8001048:	eb02 0581 	add.w	r5, r2, r1, lsl #2
 800104c:	3301      	adds	r3, #1
 800104e:	2000      	movs	r0, #0
 8001050:	e9c5 0001 	strd	r0, r0, [r5, #4]
 8001054:	6163      	str	r3, [r4, #20]
 8001056:	2327      	movs	r3, #39	; 0x27
 8001058:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
 800105c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800105e:	4a9b      	ldr	r2, [pc, #620]	; (80012cc <d_type+0x84c>)
 8001060:	60ea      	str	r2, [r5, #12]
 8001062:	3309      	adds	r3, #9
 8001064:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001066:	e578      	b.n	8000b5a <d_type+0xda>
 8001068:	7893      	ldrb	r3, [r2, #2]
 800106a:	2b5f      	cmp	r3, #95	; 0x5f
 800106c:	f000 8114 	beq.w	8001298 <d_type+0x818>
 8001070:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8001074:	4293      	cmp	r3, r2
 8001076:	f6bf ad6f 	bge.w	8000b58 <d_type+0xd8>
 800107a:	6922      	ldr	r2, [r4, #16]
 800107c:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 8001080:	eb02 0581 	add.w	r5, r2, r1, lsl #2
 8001084:	3301      	adds	r3, #1
 8001086:	2000      	movs	r0, #0
 8001088:	e9c5 0001 	strd	r0, r0, [r5, #4]
 800108c:	6163      	str	r3, [r4, #20]
 800108e:	2343      	movs	r3, #67	; 0x43
 8001090:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
 8001094:	4620      	mov	r0, r4
 8001096:	f7ff f91b 	bl	80002d0 <d_number>
 800109a:	60e8      	str	r0, [r5, #12]
 800109c:	68e3      	ldr	r3, [r4, #12]
 800109e:	781a      	ldrb	r2, [r3, #0]
 80010a0:	2a5f      	cmp	r2, #95	; 0x5f
 80010a2:	f47f ad59 	bne.w	8000b58 <d_type+0xd8>
 80010a6:	3301      	adds	r3, #1
 80010a8:	60e3      	str	r3, [r4, #12]
 80010aa:	4620      	mov	r0, r4
 80010ac:	f7ff fce8 	bl	8000a80 <d_type>
 80010b0:	462a      	mov	r2, r5
 80010b2:	4603      	mov	r3, r0
 80010b4:	212d      	movs	r1, #45	; 0x2d
 80010b6:	4620      	mov	r0, r4
 80010b8:	f7ff f892 	bl	80001e0 <d_make_comp>
 80010bc:	4605      	mov	r5, r0
 80010be:	9001      	str	r0, [sp, #4]
 80010c0:	e583      	b.n	8000bca <d_type+0x14a>
 80010c2:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 80010c6:	4293      	cmp	r3, r2
 80010c8:	f280 810e 	bge.w	80012e8 <d_type+0x868>
 80010cc:	6922      	ldr	r2, [r4, #16]
 80010ce:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 80010d2:	eb02 0581 	add.w	r5, r2, r1, lsl #2
 80010d6:	3301      	adds	r3, #1
 80010d8:	2000      	movs	r0, #0
 80010da:	e9c5 0001 	strd	r0, r0, [r5, #4]
 80010de:	6163      	str	r3, [r4, #20]
 80010e0:	2327      	movs	r3, #39	; 0x27
 80010e2:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
 80010e6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80010e8:	4a79      	ldr	r2, [pc, #484]	; (80012d0 <d_type+0x850>)
 80010ea:	60ea      	str	r2, [r5, #12]
 80010ec:	3307      	adds	r3, #7
 80010ee:	62e3      	str	r3, [r4, #44]	; 0x2c
 80010f0:	e533      	b.n	8000b5a <d_type+0xda>
 80010f2:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 80010f6:	4293      	cmp	r3, r2
 80010f8:	f280 80f6 	bge.w	80012e8 <d_type+0x868>
 80010fc:	6922      	ldr	r2, [r4, #16]
 80010fe:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 8001102:	eb02 0581 	add.w	r5, r2, r1, lsl #2
 8001106:	3301      	adds	r3, #1
 8001108:	2000      	movs	r0, #0
 800110a:	e9c5 0001 	strd	r0, r0, [r5, #4]
 800110e:	6163      	str	r3, [r4, #20]
 8001110:	2327      	movs	r3, #39	; 0x27
 8001112:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
 8001116:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8001118:	4a6e      	ldr	r2, [pc, #440]	; (80012d4 <d_type+0x854>)
 800111a:	60ea      	str	r2, [r5, #12]
 800111c:	3308      	adds	r3, #8
 800111e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001120:	e51b      	b.n	8000b5a <d_type+0xda>
 8001122:	4620      	mov	r0, r4
 8001124:	f7ff fcac 	bl	8000a80 <d_type>
 8001128:	2300      	movs	r3, #0
 800112a:	4602      	mov	r2, r0
 800112c:	214c      	movs	r1, #76	; 0x4c
 800112e:	4620      	mov	r0, r4
 8001130:	f7ff f856 	bl	80001e0 <d_make_comp>
 8001134:	4605      	mov	r5, r0
 8001136:	9001      	str	r0, [sp, #4]
 8001138:	e547      	b.n	8000bca <d_type+0x14a>
 800113a:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 800113e:	4293      	cmp	r3, r2
 8001140:	f280 80d2 	bge.w	80012e8 <d_type+0x868>
 8001144:	6922      	ldr	r2, [r4, #16]
 8001146:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 800114a:	eb02 0581 	add.w	r5, r2, r1, lsl #2
 800114e:	3301      	adds	r3, #1
 8001150:	2000      	movs	r0, #0
 8001152:	e9c5 0001 	strd	r0, r0, [r5, #4]
 8001156:	6163      	str	r3, [r4, #20]
 8001158:	2327      	movs	r3, #39	; 0x27
 800115a:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
 800115e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8001160:	4a5d      	ldr	r2, [pc, #372]	; (80012d8 <d_type+0x858>)
 8001162:	60ea      	str	r2, [r5, #12]
 8001164:	3311      	adds	r3, #17
 8001166:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001168:	e4f7      	b.n	8000b5a <d_type+0xda>
 800116a:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 800116e:	4293      	cmp	r3, r2
 8001170:	f280 80ba 	bge.w	80012e8 <d_type+0x868>
 8001174:	6922      	ldr	r2, [r4, #16]
 8001176:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 800117a:	eb02 0581 	add.w	r5, r2, r1, lsl #2
 800117e:	3301      	adds	r3, #1
 8001180:	2000      	movs	r0, #0
 8001182:	e9c5 0001 	strd	r0, r0, [r5, #4]
 8001186:	6163      	str	r3, [r4, #20]
 8001188:	2327      	movs	r3, #39	; 0x27
 800118a:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
 800118e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8001190:	4a52      	ldr	r2, [pc, #328]	; (80012dc <d_type+0x85c>)
 8001192:	60ea      	str	r2, [r5, #12]
 8001194:	3308      	adds	r3, #8
 8001196:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001198:	e4df      	b.n	8000b5a <d_type+0xda>
 800119a:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 800119e:	4293      	cmp	r3, r2
 80011a0:	f280 80a2 	bge.w	80012e8 <d_type+0x868>
 80011a4:	6922      	ldr	r2, [r4, #16]
 80011a6:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 80011aa:	eb02 0581 	add.w	r5, r2, r1, lsl #2
 80011ae:	3301      	adds	r3, #1
 80011b0:	2000      	movs	r0, #0
 80011b2:	e9c5 0001 	strd	r0, r0, [r5, #4]
 80011b6:	6163      	str	r3, [r4, #20]
 80011b8:	2327      	movs	r3, #39	; 0x27
 80011ba:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
 80011be:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80011c0:	4a47      	ldr	r2, [pc, #284]	; (80012e0 <d_type+0x860>)
 80011c2:	60ea      	str	r2, [r5, #12]
 80011c4:	330a      	adds	r3, #10
 80011c6:	62e3      	str	r3, [r4, #44]	; 0x2c
 80011c8:	e4c7      	b.n	8000b5a <d_type+0xda>
 80011ca:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 80011ce:	4293      	cmp	r3, r2
 80011d0:	f280 808a 	bge.w	80012e8 <d_type+0x868>
 80011d4:	6922      	ldr	r2, [r4, #16]
 80011d6:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 80011da:	eb02 0581 	add.w	r5, r2, r1, lsl #2
 80011de:	3301      	adds	r3, #1
 80011e0:	2000      	movs	r0, #0
 80011e2:	e9c5 0001 	strd	r0, r0, [r5, #4]
 80011e6:	6163      	str	r3, [r4, #20]
 80011e8:	2327      	movs	r3, #39	; 0x27
 80011ea:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
 80011ee:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80011f0:	4a3c      	ldr	r2, [pc, #240]	; (80012e4 <d_type+0x864>)
 80011f2:	60ea      	str	r2, [r5, #12]
 80011f4:	3309      	adds	r3, #9
 80011f6:	62e3      	str	r3, [r4, #44]	; 0x2c
 80011f8:	e4af      	b.n	8000b5a <d_type+0xda>
 80011fa:	2600      	movs	r6, #0
 80011fc:	e65e      	b.n	8000ebc <d_type+0x43c>
 80011fe:	3301      	adds	r3, #1
 8001200:	60e3      	str	r3, [r4, #12]
 8001202:	4620      	mov	r0, r4
 8001204:	f000 fbec 	bl	80019e0 <d_template_args_1>
 8001208:	462a      	mov	r2, r5
 800120a:	4603      	mov	r3, r0
 800120c:	2104      	movs	r1, #4
 800120e:	4620      	mov	r0, r4
 8001210:	f7fe ffe6 	bl	80001e0 <d_make_comp>
 8001214:	4605      	mov	r5, r0
 8001216:	e611      	b.n	8000e3c <d_type+0x3bc>
 8001218:	2301      	movs	r3, #1
 800121a:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800121c:	6323      	str	r3, [r4, #48]	; 0x30
 800121e:	4620      	mov	r0, r4
 8001220:	f000 fca6 	bl	8001b70 <d_expression_1>
 8001224:	6325      	str	r5, [r4, #48]	; 0x30
 8001226:	4606      	mov	r6, r0
 8001228:	2800      	cmp	r0, #0
 800122a:	f43f ac95 	beq.w	8000b58 <d_type+0xd8>
 800122e:	68e5      	ldr	r5, [r4, #12]
 8001230:	782a      	ldrb	r2, [r5, #0]
 8001232:	e640      	b.n	8000eb6 <d_type+0x436>
 8001234:	4620      	mov	r0, r4
 8001236:	f001 fa31 	bl	800269c <d_name>
 800123a:	4605      	mov	r5, r0
 800123c:	9001      	str	r0, [sp, #4]
 800123e:	2800      	cmp	r0, #0
 8001240:	f43f ac8a 	beq.w	8000b58 <d_type+0xd8>
 8001244:	7803      	ldrb	r3, [r0, #0]
 8001246:	2b18      	cmp	r3, #24
 8001248:	f47f acc1 	bne.w	8000bce <d_type+0x14e>
 800124c:	e485      	b.n	8000b5a <d_type+0xda>
 800124e:	1c73      	adds	r3, r6, #1
 8001250:	60e3      	str	r3, [r4, #12]
 8001252:	4620      	mov	r0, r4
 8001254:	f8d4 9014 	ldr.w	r9, [r4, #20]
 8001258:	f8d4 8020 	ldr.w	r8, [r4, #32]
 800125c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800125e:	f000 fbbf 	bl	80019e0 <d_template_args_1>
 8001262:	68e3      	ldr	r3, [r4, #12]
 8001264:	781b      	ldrb	r3, [r3, #0]
 8001266:	2b49      	cmp	r3, #73	; 0x49
 8001268:	d006      	beq.n	8001278 <d_type+0x7f8>
 800126a:	60e6      	str	r6, [r4, #12]
 800126c:	f8c4 9014 	str.w	r9, [r4, #20]
 8001270:	f8c4 8020 	str.w	r8, [r4, #32]
 8001274:	62e7      	str	r7, [r4, #44]	; 0x2c
 8001276:	e4a8      	b.n	8000bca <d_type+0x14a>
 8001278:	2d00      	cmp	r5, #0
 800127a:	f43f ac6d 	beq.w	8000b58 <d_type+0xd8>
 800127e:	e9d4 1308 	ldrd	r1, r3, [r4, #32]
 8001282:	4299      	cmp	r1, r3
 8001284:	f6bf ac68 	bge.w	8000b58 <d_type+0xd8>
 8001288:	69e2      	ldr	r2, [r4, #28]
 800128a:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
 800128e:	3101      	adds	r1, #1
 8001290:	4603      	mov	r3, r0
 8001292:	462a      	mov	r2, r5
 8001294:	6221      	str	r1, [r4, #32]
 8001296:	e5b9      	b.n	8000e0c <d_type+0x38c>
 8001298:	3203      	adds	r2, #3
 800129a:	2301      	movs	r3, #1
 800129c:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800129e:	60e2      	str	r2, [r4, #12]
 80012a0:	6323      	str	r3, [r4, #48]	; 0x30
 80012a2:	4620      	mov	r0, r4
 80012a4:	f000 fc64 	bl	8001b70 <d_expression_1>
 80012a8:	6325      	str	r5, [r4, #48]	; 0x30
 80012aa:	4605      	mov	r5, r0
 80012ac:	2800      	cmp	r0, #0
 80012ae:	f47f aef5 	bne.w	800109c <d_type+0x61c>
 80012b2:	e451      	b.n	8000b58 <d_type+0xd8>
 80012b4:	68c3      	ldr	r3, [r0, #12]
 80012b6:	deff      	udf	#255	; 0xff
 80012b8:	2300      	movs	r3, #0
 80012ba:	701b      	strb	r3, [r3, #0]
 80012bc:	deff      	udf	#255	; 0xff
 80012be:	bf00      	nop
 80012c0:	0800d470 	.word	0x0800d470
 80012c4:	0800d468 	.word	0x0800d468
 80012c8:	0800cb98 	.word	0x0800cb98
 80012cc:	0800cb5c 	.word	0x0800cb5c
 80012d0:	0800cbac 	.word	0x0800cbac
 80012d4:	0800cbc0 	.word	0x0800cbc0
 80012d8:	0800cbe8 	.word	0x0800cbe8
 80012dc:	0800cbd4 	.word	0x0800cbd4
 80012e0:	0800cb84 	.word	0x0800cb84
 80012e4:	0800cb70 	.word	0x0800cb70
 80012e8:	2300      	movs	r3, #0
 80012ea:	68db      	ldr	r3, [r3, #12]
 80012ec:	deff      	udf	#255	; 0xff
 80012ee:	bf00      	nop

080012f0 <d_parmlist>:
 80012f0:	b530      	push	{r4, r5, lr}
 80012f2:	68c2      	ldr	r2, [r0, #12]
 80012f4:	b083      	sub	sp, #12
 80012f6:	2300      	movs	r3, #0
 80012f8:	9301      	str	r3, [sp, #4]
 80012fa:	7813      	ldrb	r3, [r2, #0]
 80012fc:	2b00      	cmp	r3, #0
 80012fe:	d034      	beq.n	800136a <d_parmlist+0x7a>
 8001300:	4604      	mov	r4, r0
 8001302:	ad01      	add	r5, sp, #4
 8001304:	2b4f      	cmp	r3, #79	; 0x4f
 8001306:	d00c      	beq.n	8001322 <d_parmlist+0x32>
 8001308:	d809      	bhi.n	800131e <d_parmlist+0x2e>
 800130a:	2b2e      	cmp	r3, #46	; 0x2e
 800130c:	d001      	beq.n	8001312 <d_parmlist+0x22>
 800130e:	2b45      	cmp	r3, #69	; 0x45
 8001310:	d10a      	bne.n	8001328 <d_parmlist+0x38>
 8001312:	9801      	ldr	r0, [sp, #4]
 8001314:	b348      	cbz	r0, 800136a <d_parmlist+0x7a>
 8001316:	6903      	ldr	r3, [r0, #16]
 8001318:	b1cb      	cbz	r3, 800134e <d_parmlist+0x5e>
 800131a:	b003      	add	sp, #12
 800131c:	bd30      	pop	{r4, r5, pc}
 800131e:	2b52      	cmp	r3, #82	; 0x52
 8001320:	d102      	bne.n	8001328 <d_parmlist+0x38>
 8001322:	7853      	ldrb	r3, [r2, #1]
 8001324:	2b45      	cmp	r3, #69	; 0x45
 8001326:	d0f4      	beq.n	8001312 <d_parmlist+0x22>
 8001328:	4620      	mov	r0, r4
 800132a:	f7ff fba9 	bl	8000a80 <d_type>
 800132e:	4602      	mov	r2, r0
 8001330:	2300      	movs	r3, #0
 8001332:	212e      	movs	r1, #46	; 0x2e
 8001334:	4620      	mov	r0, r4
 8001336:	b1c2      	cbz	r2, 800136a <d_parmlist+0x7a>
 8001338:	f7fe ff52 	bl	80001e0 <d_make_comp>
 800133c:	6028      	str	r0, [r5, #0]
 800133e:	b1a0      	cbz	r0, 800136a <d_parmlist+0x7a>
 8001340:	68e2      	ldr	r2, [r4, #12]
 8001342:	7813      	ldrb	r3, [r2, #0]
 8001344:	f100 0510 	add.w	r5, r0, #16
 8001348:	2b00      	cmp	r3, #0
 800134a:	d1db      	bne.n	8001304 <d_parmlist+0x14>
 800134c:	e7e1      	b.n	8001312 <d_parmlist+0x22>
 800134e:	68c2      	ldr	r2, [r0, #12]
 8001350:	7811      	ldrb	r1, [r2, #0]
 8001352:	2927      	cmp	r1, #39	; 0x27
 8001354:	d1e1      	bne.n	800131a <d_parmlist+0x2a>
 8001356:	68d2      	ldr	r2, [r2, #12]
 8001358:	7c11      	ldrb	r1, [r2, #16]
 800135a:	2909      	cmp	r1, #9
 800135c:	d1dd      	bne.n	800131a <d_parmlist+0x2a>
 800135e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8001360:	6852      	ldr	r2, [r2, #4]
 8001362:	1a89      	subs	r1, r1, r2
 8001364:	62e1      	str	r1, [r4, #44]	; 0x2c
 8001366:	60c3      	str	r3, [r0, #12]
 8001368:	e7d7      	b.n	800131a <d_parmlist+0x2a>
 800136a:	2000      	movs	r0, #0
 800136c:	b003      	add	sp, #12
 800136e:	bd30      	pop	{r4, r5, pc}

08001370 <d_bare_function_type>:
 8001370:	b570      	push	{r4, r5, r6, lr}
 8001372:	68c3      	ldr	r3, [r0, #12]
 8001374:	781a      	ldrb	r2, [r3, #0]
 8001376:	2a4a      	cmp	r2, #74	; 0x4a
 8001378:	4605      	mov	r5, r0
 800137a:	d01a      	beq.n	80013b2 <d_bare_function_type+0x42>
 800137c:	b181      	cbz	r1, 80013a0 <d_bare_function_type+0x30>
 800137e:	4628      	mov	r0, r5
 8001380:	f7ff fb7e 	bl	8000a80 <d_type>
 8001384:	4604      	mov	r4, r0
 8001386:	b190      	cbz	r0, 80013ae <d_bare_function_type+0x3e>
 8001388:	4628      	mov	r0, r5
 800138a:	f7ff ffb1 	bl	80012f0 <d_parmlist>
 800138e:	4603      	mov	r3, r0
 8001390:	b168      	cbz	r0, 80013ae <d_bare_function_type+0x3e>
 8001392:	4622      	mov	r2, r4
 8001394:	4628      	mov	r0, r5
 8001396:	2129      	movs	r1, #41	; 0x29
 8001398:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800139c:	f7fe bf20 	b.w	80001e0 <d_make_comp>
 80013a0:	4628      	mov	r0, r5
 80013a2:	460c      	mov	r4, r1
 80013a4:	f7ff ffa4 	bl	80012f0 <d_parmlist>
 80013a8:	4603      	mov	r3, r0
 80013aa:	2800      	cmp	r0, #0
 80013ac:	d1f1      	bne.n	8001392 <d_bare_function_type+0x22>
 80013ae:	2000      	movs	r0, #0
 80013b0:	bd70      	pop	{r4, r5, r6, pc}
 80013b2:	3301      	adds	r3, #1
 80013b4:	60c3      	str	r3, [r0, #12]
 80013b6:	e7e2      	b.n	800137e <d_bare_function_type+0xe>

080013b8 <d_function_type>:
 80013b8:	b510      	push	{r4, lr}
 80013ba:	4604      	mov	r4, r0
 80013bc:	6880      	ldr	r0, [r0, #8]
 80013be:	f410 2080 	ands.w	r0, r0, #262144	; 0x40000
 80013c2:	d10b      	bne.n	80013dc <d_function_type+0x24>
 80013c4:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80013c6:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 80013ca:	d806      	bhi.n	80013da <d_function_type+0x22>
 80013cc:	1c51      	adds	r1, r2, #1
 80013ce:	68e3      	ldr	r3, [r4, #12]
 80013d0:	63e1      	str	r1, [r4, #60]	; 0x3c
 80013d2:	7819      	ldrb	r1, [r3, #0]
 80013d4:	2946      	cmp	r1, #70	; 0x46
 80013d6:	d007      	beq.n	80013e8 <d_function_type+0x30>
 80013d8:	63e2      	str	r2, [r4, #60]	; 0x3c
 80013da:	bd10      	pop	{r4, pc}
 80013dc:	68e3      	ldr	r3, [r4, #12]
 80013de:	781a      	ldrb	r2, [r3, #0]
 80013e0:	2a46      	cmp	r2, #70	; 0x46
 80013e2:	d001      	beq.n	80013e8 <d_function_type+0x30>
 80013e4:	2000      	movs	r0, #0
 80013e6:	bd10      	pop	{r4, pc}
 80013e8:	1c5a      	adds	r2, r3, #1
 80013ea:	60e2      	str	r2, [r4, #12]
 80013ec:	785a      	ldrb	r2, [r3, #1]
 80013ee:	2a59      	cmp	r2, #89	; 0x59
 80013f0:	bf04      	itt	eq
 80013f2:	3302      	addeq	r3, #2
 80013f4:	60e3      	streq	r3, [r4, #12]
 80013f6:	2101      	movs	r1, #1
 80013f8:	4620      	mov	r0, r4
 80013fa:	f7ff ffb9 	bl	8001370 <d_bare_function_type>
 80013fe:	4601      	mov	r1, r0
 8001400:	4620      	mov	r0, r4
 8001402:	f7fe ffc3 	bl	800038c <d_ref_qualifier>
 8001406:	68e3      	ldr	r3, [r4, #12]
 8001408:	781a      	ldrb	r2, [r3, #0]
 800140a:	2a45      	cmp	r2, #69	; 0x45
 800140c:	bf04      	itt	eq
 800140e:	3301      	addeq	r3, #1
 8001410:	60e3      	streq	r3, [r4, #12]
 8001412:	68a3      	ldr	r3, [r4, #8]
 8001414:	bf18      	it	ne
 8001416:	2000      	movne	r0, #0
 8001418:	035b      	lsls	r3, r3, #13
 800141a:	d4de      	bmi.n	80013da <d_function_type+0x22>
 800141c:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800141e:	3a01      	subs	r2, #1
 8001420:	e7da      	b.n	80013d8 <d_function_type+0x20>
 8001422:	bf00      	nop

08001424 <d_operator_name>:
 8001424:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001426:	68c3      	ldr	r3, [r0, #12]
 8001428:	781f      	ldrb	r7, [r3, #0]
 800142a:	4606      	mov	r6, r0
 800142c:	bb77      	cbnz	r7, 800148c <d_operator_name+0x68>
 800142e:	f04f 0e00 	mov.w	lr, #0
 8001432:	4d3d      	ldr	r5, [pc, #244]	; (8001528 <d_operator_name+0x104>)
 8001434:	2148      	movs	r1, #72	; 0x48
 8001436:	2200      	movs	r2, #0
 8001438:	1a8b      	subs	r3, r1, r2
 800143a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 800143e:	eb02 0363 	add.w	r3, r2, r3, asr #1
 8001442:	0118      	lsls	r0, r3, #4
 8001444:	eb05 1c03 	add.w	ip, r5, r3, lsl #4
 8001448:	582c      	ldr	r4, [r5, r0]
 800144a:	7820      	ldrb	r0, [r4, #0]
 800144c:	42b8      	cmp	r0, r7
 800144e:	d006      	beq.n	800145e <d_operator_name+0x3a>
 8001450:	bf94      	ite	ls
 8001452:	1c5a      	addls	r2, r3, #1
 8001454:	4619      	movhi	r1, r3
 8001456:	428a      	cmp	r2, r1
 8001458:	d1ee      	bne.n	8001438 <d_operator_name+0x14>
 800145a:	2000      	movs	r0, #0
 800145c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800145e:	7860      	ldrb	r0, [r4, #1]
 8001460:	4570      	cmp	r0, lr
 8001462:	d1f5      	bne.n	8001450 <d_operator_name+0x2c>
 8001464:	e9d6 3205 	ldrd	r3, r2, [r6, #20]
 8001468:	4293      	cmp	r3, r2
 800146a:	daf6      	bge.n	800145a <d_operator_name+0x36>
 800146c:	6932      	ldr	r2, [r6, #16]
 800146e:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 8001472:	eb02 0081 	add.w	r0, r2, r1, lsl #2
 8001476:	3301      	adds	r3, #1
 8001478:	2400      	movs	r4, #0
 800147a:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800147e:	6173      	str	r3, [r6, #20]
 8001480:	2332      	movs	r3, #50	; 0x32
 8001482:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
 8001486:	f8c0 c00c 	str.w	ip, [r0, #12]
 800148a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800148c:	1c5a      	adds	r2, r3, #1
 800148e:	60c2      	str	r2, [r0, #12]
 8001490:	f893 e001 	ldrb.w	lr, [r3, #1]
 8001494:	781f      	ldrb	r7, [r3, #0]
 8001496:	f1be 0f00 	cmp.w	lr, #0
 800149a:	d102      	bne.n	80014a2 <d_operator_name+0x7e>
 800149c:	2f76      	cmp	r7, #118	; 0x76
 800149e:	d0c8      	beq.n	8001432 <d_operator_name+0xe>
 80014a0:	e7c5      	b.n	800142e <d_operator_name+0xa>
 80014a2:	1c9a      	adds	r2, r3, #2
 80014a4:	60c2      	str	r2, [r0, #12]
 80014a6:	2f76      	cmp	r7, #118	; 0x76
 80014a8:	f893 e001 	ldrb.w	lr, [r3, #1]
 80014ac:	d11f      	bne.n	80014ee <d_operator_name+0xca>
 80014ae:	f1ae 0430 	sub.w	r4, lr, #48	; 0x30
 80014b2:	b2e3      	uxtb	r3, r4
 80014b4:	2b09      	cmp	r3, #9
 80014b6:	d8bc      	bhi.n	8001432 <d_operator_name+0xe>
 80014b8:	f7ff f9a8 	bl	800080c <d_source_name>
 80014bc:	e9d6 3105 	ldrd	r3, r1, [r6, #20]
 80014c0:	428b      	cmp	r3, r1
 80014c2:	4602      	mov	r2, r0
 80014c4:	dac9      	bge.n	800145a <d_operator_name+0x36>
 80014c6:	6937      	ldr	r7, [r6, #16]
 80014c8:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 80014cc:	eb07 0081 	add.w	r0, r7, r1, lsl #2
 80014d0:	3301      	adds	r3, #1
 80014d2:	2500      	movs	r5, #0
 80014d4:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80014d8:	0089      	lsls	r1, r1, #2
 80014da:	6173      	str	r3, [r6, #20]
 80014dc:	2a00      	cmp	r2, #0
 80014de:	d0bc      	beq.n	800145a <d_operator_name+0x36>
 80014e0:	2333      	movs	r3, #51	; 0x33
 80014e2:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80014e6:	547b      	strb	r3, [r7, r1]
 80014e8:	e9c0 4203 	strd	r4, r2, [r0, #12]
 80014ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80014ee:	2f63      	cmp	r7, #99	; 0x63
 80014f0:	d19f      	bne.n	8001432 <d_operator_name+0xe>
 80014f2:	f1be 0f76 	cmp.w	lr, #118	; 0x76
 80014f6:	d19c      	bne.n	8001432 <d_operator_name+0xe>
 80014f8:	e9d0 340c 	ldrd	r3, r4, [r0, #48]	; 0x30
 80014fc:	fab3 f383 	clz	r3, r3
 8001500:	095b      	lsrs	r3, r3, #5
 8001502:	6343      	str	r3, [r0, #52]	; 0x34
 8001504:	f7ff fabc 	bl	8000a80 <d_type>
 8001508:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800150a:	4602      	mov	r2, r0
 800150c:	b133      	cbz	r3, 800151c <d_operator_name+0xf8>
 800150e:	2300      	movs	r3, #0
 8001510:	2135      	movs	r1, #53	; 0x35
 8001512:	4630      	mov	r0, r6
 8001514:	f7fe fe64 	bl	80001e0 <d_make_comp>
 8001518:	6374      	str	r4, [r6, #52]	; 0x34
 800151a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800151c:	2134      	movs	r1, #52	; 0x34
 800151e:	4630      	mov	r0, r6
 8001520:	f7fe fe5e 	bl	80001e0 <d_make_comp>
 8001524:	e7f8      	b.n	8001518 <d_operator_name+0xf4>
 8001526:	bf00      	nop
 8001528:	0800cbfc 	.word	0x0800cbfc

0800152c <d_unqualified_name>:
 800152c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800152e:	68c3      	ldr	r3, [r0, #12]
 8001530:	781a      	ldrb	r2, [r3, #0]
 8001532:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8001536:	2909      	cmp	r1, #9
 8001538:	4604      	mov	r4, r0
 800153a:	d965      	bls.n	8001608 <d_unqualified_name+0xdc>
 800153c:	2a55      	cmp	r2, #85	; 0x55
 800153e:	d06c      	beq.n	800161a <d_unqualified_name+0xee>
 8001540:	d838      	bhi.n	80015b4 <d_unqualified_name+0x88>
 8001542:	2a44      	cmp	r2, #68	; 0x44
 8001544:	d90f      	bls.n	8001566 <d_unqualified_name+0x3a>
 8001546:	2a4c      	cmp	r2, #76	; 0x4c
 8001548:	d10a      	bne.n	8001560 <d_unqualified_name+0x34>
 800154a:	3301      	adds	r3, #1
 800154c:	60c3      	str	r3, [r0, #12]
 800154e:	f7ff f95d 	bl	800080c <d_source_name>
 8001552:	4605      	mov	r5, r0
 8001554:	b120      	cbz	r0, 8001560 <d_unqualified_name+0x34>
 8001556:	4620      	mov	r0, r4
 8001558:	f7fe ffaa 	bl	80004b0 <d_discriminator>
 800155c:	2800      	cmp	r0, #0
 800155e:	d13b      	bne.n	80015d8 <d_unqualified_name+0xac>
 8001560:	2500      	movs	r5, #0
 8001562:	4628      	mov	r0, r5
 8001564:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001566:	2a42      	cmp	r2, #66	; 0x42
 8001568:	d9fa      	bls.n	8001560 <d_unqualified_name+0x34>
 800156a:	6a81      	ldr	r1, [r0, #40]	; 0x28
 800156c:	b141      	cbz	r1, 8001580 <d_unqualified_name+0x54>
 800156e:	7808      	ldrb	r0, [r1, #0]
 8001570:	2800      	cmp	r0, #0
 8001572:	f040 8091 	bne.w	8001698 <d_unqualified_name+0x16c>
 8001576:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8001578:	6908      	ldr	r0, [r1, #16]
 800157a:	4402      	add	r2, r0
 800157c:	62e2      	str	r2, [r4, #44]	; 0x2c
 800157e:	781a      	ldrb	r2, [r3, #0]
 8001580:	2a43      	cmp	r2, #67	; 0x43
 8001582:	f000 80c8 	beq.w	8001716 <d_unqualified_name+0x1ea>
 8001586:	2a44      	cmp	r2, #68	; 0x44
 8001588:	f040 8084 	bne.w	8001694 <d_unqualified_name+0x168>
 800158c:	785a      	ldrb	r2, [r3, #1]
 800158e:	3a30      	subs	r2, #48	; 0x30
 8001590:	2a05      	cmp	r2, #5
 8001592:	d8e5      	bhi.n	8001560 <d_unqualified_name+0x34>
 8001594:	a001      	add	r0, pc, #4	; (adr r0, 800159c <d_unqualified_name+0x70>)
 8001596:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 800159a:	bf00      	nop
 800159c:	080016a7 	.word	0x080016a7
 80015a0:	080016ff 	.word	0x080016ff
 80015a4:	080016ed 	.word	0x080016ed
 80015a8:	08001561 	.word	0x08001561
 80015ac:	080016f9 	.word	0x080016f9
 80015b0:	080016f3 	.word	0x080016f3
 80015b4:	f1a2 0161 	sub.w	r1, r2, #97	; 0x61
 80015b8:	2919      	cmp	r1, #25
 80015ba:	d8d1      	bhi.n	8001560 <d_unqualified_name+0x34>
 80015bc:	2a6f      	cmp	r2, #111	; 0x6f
 80015be:	6b05      	ldr	r5, [r0, #48]	; 0x30
 80015c0:	f000 80a0 	beq.w	8001704 <d_unqualified_name+0x1d8>
 80015c4:	4620      	mov	r0, r4
 80015c6:	f7ff ff2d 	bl	8001424 <d_operator_name>
 80015ca:	6325      	str	r5, [r4, #48]	; 0x30
 80015cc:	4605      	mov	r5, r0
 80015ce:	b118      	cbz	r0, 80015d8 <d_unqualified_name+0xac>
 80015d0:	7803      	ldrb	r3, [r0, #0]
 80015d2:	2b32      	cmp	r3, #50	; 0x32
 80015d4:	f000 80c6 	beq.w	8001764 <d_unqualified_name+0x238>
 80015d8:	68e3      	ldr	r3, [r4, #12]
 80015da:	781a      	ldrb	r2, [r3, #0]
 80015dc:	2a42      	cmp	r2, #66	; 0x42
 80015de:	d1c0      	bne.n	8001562 <d_unqualified_name+0x36>
 80015e0:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80015e2:	3301      	adds	r3, #1
 80015e4:	60e3      	str	r3, [r4, #12]
 80015e6:	4620      	mov	r0, r4
 80015e8:	f7ff f910 	bl	800080c <d_source_name>
 80015ec:	462a      	mov	r2, r5
 80015ee:	4603      	mov	r3, r0
 80015f0:	214d      	movs	r1, #77	; 0x4d
 80015f2:	4620      	mov	r0, r4
 80015f4:	f7fe fdf4 	bl	80001e0 <d_make_comp>
 80015f8:	68e3      	ldr	r3, [r4, #12]
 80015fa:	781a      	ldrb	r2, [r3, #0]
 80015fc:	2a42      	cmp	r2, #66	; 0x42
 80015fe:	4605      	mov	r5, r0
 8001600:	d0ef      	beq.n	80015e2 <d_unqualified_name+0xb6>
 8001602:	62a6      	str	r6, [r4, #40]	; 0x28
 8001604:	4628      	mov	r0, r5
 8001606:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001608:	f7ff f900 	bl	800080c <d_source_name>
 800160c:	68e3      	ldr	r3, [r4, #12]
 800160e:	781a      	ldrb	r2, [r3, #0]
 8001610:	4605      	mov	r5, r0
 8001612:	2a42      	cmp	r2, #66	; 0x42
 8001614:	d0e4      	beq.n	80015e0 <d_unqualified_name+0xb4>
 8001616:	4628      	mov	r0, r5
 8001618:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800161a:	785a      	ldrb	r2, [r3, #1]
 800161c:	2a6c      	cmp	r2, #108	; 0x6c
 800161e:	f000 80c1 	beq.w	80017a4 <d_unqualified_name+0x278>
 8001622:	2a74      	cmp	r2, #116	; 0x74
 8001624:	d19c      	bne.n	8001560 <d_unqualified_name+0x34>
 8001626:	1c59      	adds	r1, r3, #1
 8001628:	60c1      	str	r1, [r0, #12]
 800162a:	785a      	ldrb	r2, [r3, #1]
 800162c:	2a74      	cmp	r2, #116	; 0x74
 800162e:	d137      	bne.n	80016a0 <d_unqualified_name+0x174>
 8001630:	1c9a      	adds	r2, r3, #2
 8001632:	60c2      	str	r2, [r0, #12]
 8001634:	789a      	ldrb	r2, [r3, #2]
 8001636:	2a5f      	cmp	r2, #95	; 0x5f
 8001638:	f000 8108 	beq.w	800184c <d_unqualified_name+0x320>
 800163c:	2a6e      	cmp	r2, #110	; 0x6e
 800163e:	d08f      	beq.n	8001560 <d_unqualified_name+0x34>
 8001640:	f7fe fe46 	bl	80002d0 <d_number>
 8001644:	3001      	adds	r0, #1
 8001646:	68e3      	ldr	r3, [r4, #12]
 8001648:	f100 80fd 	bmi.w	8001846 <d_unqualified_name+0x31a>
 800164c:	781a      	ldrb	r2, [r3, #0]
 800164e:	2a5f      	cmp	r2, #95	; 0x5f
 8001650:	d120      	bne.n	8001694 <d_unqualified_name+0x168>
 8001652:	3301      	adds	r3, #1
 8001654:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
 8001658:	428a      	cmp	r2, r1
 800165a:	60e3      	str	r3, [r4, #12]
 800165c:	f280 8100 	bge.w	8001860 <d_unqualified_name+0x334>
 8001660:	6926      	ldr	r6, [r4, #16]
 8001662:	eb02 0782 	add.w	r7, r2, r2, lsl #2
 8001666:	eb06 0587 	add.w	r5, r6, r7, lsl #2
 800166a:	3201      	adds	r2, #1
 800166c:	2100      	movs	r1, #0
 800166e:	e9c5 1101 	strd	r1, r1, [r5, #4]
 8001672:	6162      	str	r2, [r4, #20]
 8001674:	2249      	movs	r2, #73	; 0x49
 8001676:	f806 2027 	strb.w	r2, [r6, r7, lsl #2]
 800167a:	60e8      	str	r0, [r5, #12]
 800167c:	e9d4 2008 	ldrd	r2, r0, [r4, #32]
 8001680:	4282      	cmp	r2, r0
 8001682:	f280 80ea 	bge.w	800185a <d_unqualified_name+0x32e>
 8001686:	69e1      	ldr	r1, [r4, #28]
 8001688:	f841 5022 	str.w	r5, [r1, r2, lsl #2]
 800168c:	3201      	adds	r2, #1
 800168e:	6222      	str	r2, [r4, #32]
 8001690:	781a      	ldrb	r2, [r3, #0]
 8001692:	e7be      	b.n	8001612 <d_unqualified_name+0xe6>
 8001694:	2500      	movs	r5, #0
 8001696:	e7bc      	b.n	8001612 <d_unqualified_name+0xe6>
 8001698:	2818      	cmp	r0, #24
 800169a:	f47f af71 	bne.w	8001580 <d_unqualified_name+0x54>
 800169e:	e76a      	b.n	8001576 <d_unqualified_name+0x4a>
 80016a0:	460b      	mov	r3, r1
 80016a2:	2500      	movs	r5, #0
 80016a4:	e7b5      	b.n	8001612 <d_unqualified_name+0xe6>
 80016a6:	f04f 0e01 	mov.w	lr, #1
 80016aa:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
 80016ae:	1c9f      	adds	r7, r3, #2
 80016b0:	4282      	cmp	r2, r0
 80016b2:	60e7      	str	r7, [r4, #12]
 80016b4:	f280 80c2 	bge.w	800183c <d_unqualified_name+0x310>
 80016b8:	f8d4 c010 	ldr.w	ip, [r4, #16]
 80016bc:	eb02 0082 	add.w	r0, r2, r2, lsl #2
 80016c0:	eb0c 0580 	add.w	r5, ip, r0, lsl #2
 80016c4:	3201      	adds	r2, #1
 80016c6:	2600      	movs	r6, #0
 80016c8:	e9c5 6601 	strd	r6, r6, [r5, #4]
 80016cc:	0080      	lsls	r0, r0, #2
 80016ce:	6162      	str	r2, [r4, #20]
 80016d0:	2900      	cmp	r1, #0
 80016d2:	f000 80b3 	beq.w	800183c <d_unqualified_name+0x310>
 80016d6:	e9c5 6601 	strd	r6, r6, [r5, #4]
 80016da:	2208      	movs	r2, #8
 80016dc:	f80c 2000 	strb.w	r2, [ip, r0]
 80016e0:	f885 e00c 	strb.w	lr, [r5, #12]
 80016e4:	6129      	str	r1, [r5, #16]
 80016e6:	789a      	ldrb	r2, [r3, #2]
 80016e8:	463b      	mov	r3, r7
 80016ea:	e792      	b.n	8001612 <d_unqualified_name+0xe6>
 80016ec:	f04f 0e03 	mov.w	lr, #3
 80016f0:	e7db      	b.n	80016aa <d_unqualified_name+0x17e>
 80016f2:	f04f 0e05 	mov.w	lr, #5
 80016f6:	e7d8      	b.n	80016aa <d_unqualified_name+0x17e>
 80016f8:	f04f 0e04 	mov.w	lr, #4
 80016fc:	e7d5      	b.n	80016aa <d_unqualified_name+0x17e>
 80016fe:	f04f 0e02 	mov.w	lr, #2
 8001702:	e7d2      	b.n	80016aa <d_unqualified_name+0x17e>
 8001704:	785a      	ldrb	r2, [r3, #1]
 8001706:	2a6e      	cmp	r2, #110	; 0x6e
 8001708:	f47f af5c 	bne.w	80015c4 <d_unqualified_name+0x98>
 800170c:	3302      	adds	r3, #2
 800170e:	2200      	movs	r2, #0
 8001710:	60c3      	str	r3, [r0, #12]
 8001712:	6302      	str	r2, [r0, #48]	; 0x30
 8001714:	e756      	b.n	80015c4 <d_unqualified_name+0x98>
 8001716:	785a      	ldrb	r2, [r3, #1]
 8001718:	2a49      	cmp	r2, #73	; 0x49
 800171a:	d07f      	beq.n	800181c <d_unqualified_name+0x2f0>
 800171c:	f1a2 0031 	sub.w	r0, r2, #49	; 0x31
 8001720:	2804      	cmp	r0, #4
 8001722:	f63f af1d 	bhi.w	8001560 <d_unqualified_name+0x34>
 8001726:	3a30      	subs	r2, #48	; 0x30
 8001728:	3302      	adds	r3, #2
 800172a:	b2d6      	uxtb	r6, r2
 800172c:	60e3      	str	r3, [r4, #12]
 800172e:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8001732:	4293      	cmp	r3, r2
 8001734:	f280 8086 	bge.w	8001844 <d_unqualified_name+0x318>
 8001738:	6927      	ldr	r7, [r4, #16]
 800173a:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800173e:	eb07 0582 	add.w	r5, r7, r2, lsl #2
 8001742:	3301      	adds	r3, #1
 8001744:	2000      	movs	r0, #0
 8001746:	e9c5 0001 	strd	r0, r0, [r5, #4]
 800174a:	0092      	lsls	r2, r2, #2
 800174c:	6163      	str	r3, [r4, #20]
 800174e:	2900      	cmp	r1, #0
 8001750:	d078      	beq.n	8001844 <d_unqualified_name+0x318>
 8001752:	2307      	movs	r3, #7
 8001754:	e9c5 0001 	strd	r0, r0, [r5, #4]
 8001758:	54bb      	strb	r3, [r7, r2]
 800175a:	68e3      	ldr	r3, [r4, #12]
 800175c:	732e      	strb	r6, [r5, #12]
 800175e:	6129      	str	r1, [r5, #16]
 8001760:	781a      	ldrb	r2, [r3, #0]
 8001762:	e756      	b.n	8001612 <d_unqualified_name+0xe6>
 8001764:	68c2      	ldr	r2, [r0, #12]
 8001766:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8001768:	6891      	ldr	r1, [r2, #8]
 800176a:	6812      	ldr	r2, [r2, #0]
 800176c:	3307      	adds	r3, #7
 800176e:	440b      	add	r3, r1
 8001770:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001772:	7813      	ldrb	r3, [r2, #0]
 8001774:	2b6c      	cmp	r3, #108	; 0x6c
 8001776:	f47f af2f 	bne.w	80015d8 <d_unqualified_name+0xac>
 800177a:	7853      	ldrb	r3, [r2, #1]
 800177c:	2b69      	cmp	r3, #105	; 0x69
 800177e:	f47f af2b 	bne.w	80015d8 <d_unqualified_name+0xac>
 8001782:	7893      	ldrb	r3, [r2, #2]
 8001784:	2b00      	cmp	r3, #0
 8001786:	f47f af27 	bne.w	80015d8 <d_unqualified_name+0xac>
 800178a:	4620      	mov	r0, r4
 800178c:	f7ff f83e 	bl	800080c <d_source_name>
 8001790:	462a      	mov	r2, r5
 8001792:	4603      	mov	r3, r0
 8001794:	2137      	movs	r1, #55	; 0x37
 8001796:	4620      	mov	r0, r4
 8001798:	f7fe fd22 	bl	80001e0 <d_make_comp>
 800179c:	68e3      	ldr	r3, [r4, #12]
 800179e:	4605      	mov	r5, r0
 80017a0:	781a      	ldrb	r2, [r3, #0]
 80017a2:	e736      	b.n	8001612 <d_unqualified_name+0xe6>
 80017a4:	1c59      	adds	r1, r3, #1
 80017a6:	60c1      	str	r1, [r0, #12]
 80017a8:	785a      	ldrb	r2, [r3, #1]
 80017aa:	2a6c      	cmp	r2, #108	; 0x6c
 80017ac:	f47f af78 	bne.w	80016a0 <d_unqualified_name+0x174>
 80017b0:	3302      	adds	r3, #2
 80017b2:	60c3      	str	r3, [r0, #12]
 80017b4:	f7ff fd9c 	bl	80012f0 <d_parmlist>
 80017b8:	68e3      	ldr	r3, [r4, #12]
 80017ba:	4606      	mov	r6, r0
 80017bc:	2800      	cmp	r0, #0
 80017be:	d042      	beq.n	8001846 <d_unqualified_name+0x31a>
 80017c0:	781a      	ldrb	r2, [r3, #0]
 80017c2:	2a45      	cmp	r2, #69	; 0x45
 80017c4:	f47f af66 	bne.w	8001694 <d_unqualified_name+0x168>
 80017c8:	1c5a      	adds	r2, r3, #1
 80017ca:	60e2      	str	r2, [r4, #12]
 80017cc:	785a      	ldrb	r2, [r3, #1]
 80017ce:	2a5f      	cmp	r2, #95	; 0x5f
 80017d0:	d049      	beq.n	8001866 <d_unqualified_name+0x33a>
 80017d2:	2a6e      	cmp	r2, #110	; 0x6e
 80017d4:	f43f aec4 	beq.w	8001560 <d_unqualified_name+0x34>
 80017d8:	4620      	mov	r0, r4
 80017da:	f7fe fd79 	bl	80002d0 <d_number>
 80017de:	3001      	adds	r0, #1
 80017e0:	68e3      	ldr	r3, [r4, #12]
 80017e2:	d430      	bmi.n	8001846 <d_unqualified_name+0x31a>
 80017e4:	781a      	ldrb	r2, [r3, #0]
 80017e6:	2a5f      	cmp	r2, #95	; 0x5f
 80017e8:	f47f af54 	bne.w	8001694 <d_unqualified_name+0x168>
 80017ec:	3301      	adds	r3, #1
 80017ee:	6962      	ldr	r2, [r4, #20]
 80017f0:	69a1      	ldr	r1, [r4, #24]
 80017f2:	60e3      	str	r3, [r4, #12]
 80017f4:	428a      	cmp	r2, r1
 80017f6:	da33      	bge.n	8001860 <d_unqualified_name+0x334>
 80017f8:	6921      	ldr	r1, [r4, #16]
 80017fa:	eb02 0782 	add.w	r7, r2, r2, lsl #2
 80017fe:	eb01 0587 	add.w	r5, r1, r7, lsl #2
 8001802:	3201      	adds	r2, #1
 8001804:	f04f 0c00 	mov.w	ip, #0
 8001808:	e9c5 cc01 	strd	ip, ip, [r5, #4]
 800180c:	6162      	str	r2, [r4, #20]
 800180e:	2247      	movs	r2, #71	; 0x47
 8001810:	f801 2027 	strb.w	r2, [r1, r7, lsl #2]
 8001814:	e9c5 6003 	strd	r6, r0, [r5, #12]
 8001818:	781a      	ldrb	r2, [r3, #0]
 800181a:	e6fa      	b.n	8001612 <d_unqualified_name+0xe6>
 800181c:	1c59      	adds	r1, r3, #1
 800181e:	60e1      	str	r1, [r4, #12]
 8001820:	789a      	ldrb	r2, [r3, #2]
 8001822:	f1a2 0031 	sub.w	r0, r2, #49	; 0x31
 8001826:	2804      	cmp	r0, #4
 8001828:	d813      	bhi.n	8001852 <d_unqualified_name+0x326>
 800182a:	3303      	adds	r3, #3
 800182c:	3a30      	subs	r2, #48	; 0x30
 800182e:	60e3      	str	r3, [r4, #12]
 8001830:	4620      	mov	r0, r4
 8001832:	b2d6      	uxtb	r6, r2
 8001834:	f7ff f924 	bl	8000a80 <d_type>
 8001838:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800183a:	e778      	b.n	800172e <d_unqualified_name+0x202>
 800183c:	789a      	ldrb	r2, [r3, #2]
 800183e:	2500      	movs	r5, #0
 8001840:	463b      	mov	r3, r7
 8001842:	e6e6      	b.n	8001612 <d_unqualified_name+0xe6>
 8001844:	68e3      	ldr	r3, [r4, #12]
 8001846:	781a      	ldrb	r2, [r3, #0]
 8001848:	2500      	movs	r5, #0
 800184a:	e6e2      	b.n	8001612 <d_unqualified_name+0xe6>
 800184c:	3303      	adds	r3, #3
 800184e:	2000      	movs	r0, #0
 8001850:	e700      	b.n	8001654 <d_unqualified_name+0x128>
 8001852:	785a      	ldrb	r2, [r3, #1]
 8001854:	2500      	movs	r5, #0
 8001856:	460b      	mov	r3, r1
 8001858:	e6db      	b.n	8001612 <d_unqualified_name+0xe6>
 800185a:	781a      	ldrb	r2, [r3, #0]
 800185c:	460d      	mov	r5, r1
 800185e:	e6d8      	b.n	8001612 <d_unqualified_name+0xe6>
 8001860:	781a      	ldrb	r2, [r3, #0]
 8001862:	2500      	movs	r5, #0
 8001864:	e6d5      	b.n	8001612 <d_unqualified_name+0xe6>
 8001866:	3302      	adds	r3, #2
 8001868:	2000      	movs	r0, #0
 800186a:	e7c0      	b.n	80017ee <d_unqualified_name+0x2c2>

0800186c <d_expr_primary>:
 800186c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800186e:	68c2      	ldr	r2, [r0, #12]
 8001870:	7813      	ldrb	r3, [r2, #0]
 8001872:	2b4c      	cmp	r3, #76	; 0x4c
 8001874:	d132      	bne.n	80018dc <d_expr_primary+0x70>
 8001876:	1c53      	adds	r3, r2, #1
 8001878:	60c3      	str	r3, [r0, #12]
 800187a:	7851      	ldrb	r1, [r2, #1]
 800187c:	295f      	cmp	r1, #95	; 0x5f
 800187e:	4604      	mov	r4, r0
 8001880:	d051      	beq.n	8001926 <d_expr_primary+0xba>
 8001882:	295a      	cmp	r1, #90	; 0x5a
 8001884:	d113      	bne.n	80018ae <d_expr_primary+0x42>
 8001886:	1c5a      	adds	r2, r3, #1
 8001888:	60e2      	str	r2, [r4, #12]
 800188a:	785b      	ldrb	r3, [r3, #1]
 800188c:	2b47      	cmp	r3, #71	; 0x47
 800188e:	d043      	beq.n	8001918 <d_expr_primary+0xac>
 8001890:	2b54      	cmp	r3, #84	; 0x54
 8001892:	d041      	beq.n	8001918 <d_expr_primary+0xac>
 8001894:	2100      	movs	r1, #0
 8001896:	4620      	mov	r0, r4
 8001898:	f001 f84e 	bl	8002938 <d_encoding.part.0>
 800189c:	68e3      	ldr	r3, [r4, #12]
 800189e:	781a      	ldrb	r2, [r3, #0]
 80018a0:	4606      	mov	r6, r0
 80018a2:	2a45      	cmp	r2, #69	; 0x45
 80018a4:	d11a      	bne.n	80018dc <d_expr_primary+0x70>
 80018a6:	3301      	adds	r3, #1
 80018a8:	60e3      	str	r3, [r4, #12]
 80018aa:	4630      	mov	r0, r6
 80018ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80018ae:	f7ff f8e7 	bl	8000a80 <d_type>
 80018b2:	4606      	mov	r6, r0
 80018b4:	b190      	cbz	r0, 80018dc <d_expr_primary+0x70>
 80018b6:	7803      	ldrb	r3, [r0, #0]
 80018b8:	2b27      	cmp	r3, #39	; 0x27
 80018ba:	d012      	beq.n	80018e2 <d_expr_primary+0x76>
 80018bc:	68e2      	ldr	r2, [r4, #12]
 80018be:	7815      	ldrb	r5, [r2, #0]
 80018c0:	2d6e      	cmp	r5, #110	; 0x6e
 80018c2:	d023      	beq.n	800190c <d_expr_primary+0xa0>
 80018c4:	213d      	movs	r1, #61	; 0x3d
 80018c6:	2d45      	cmp	r5, #69	; 0x45
 80018c8:	d059      	beq.n	800197e <d_expr_primary+0x112>
 80018ca:	4613      	mov	r3, r2
 80018cc:	e003      	b.n	80018d6 <d_expr_primary+0x6a>
 80018ce:	60e3      	str	r3, [r4, #12]
 80018d0:	781d      	ldrb	r5, [r3, #0]
 80018d2:	2d45      	cmp	r5, #69	; 0x45
 80018d4:	d02f      	beq.n	8001936 <d_expr_primary+0xca>
 80018d6:	3301      	adds	r3, #1
 80018d8:	2d00      	cmp	r5, #0
 80018da:	d1f8      	bne.n	80018ce <d_expr_primary+0x62>
 80018dc:	2600      	movs	r6, #0
 80018de:	4630      	mov	r0, r6
 80018e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80018e2:	68c3      	ldr	r3, [r0, #12]
 80018e4:	7c1a      	ldrb	r2, [r3, #16]
 80018e6:	b11a      	cbz	r2, 80018f0 <d_expr_primary+0x84>
 80018e8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80018ea:	6859      	ldr	r1, [r3, #4]
 80018ec:	1a52      	subs	r2, r2, r1
 80018ee:	62e2      	str	r2, [r4, #44]	; 0x2c
 80018f0:	4925      	ldr	r1, [pc, #148]	; (8001988 <d_expr_primary+0x11c>)
 80018f2:	6818      	ldr	r0, [r3, #0]
 80018f4:	f004 fc4c 	bl	8006190 <strcmp>
 80018f8:	2800      	cmp	r0, #0
 80018fa:	d1df      	bne.n	80018bc <d_expr_primary+0x50>
 80018fc:	68e2      	ldr	r2, [r4, #12]
 80018fe:	7815      	ldrb	r5, [r2, #0]
 8001900:	2d45      	cmp	r5, #69	; 0x45
 8001902:	d03e      	beq.n	8001982 <d_expr_primary+0x116>
 8001904:	2d6e      	cmp	r5, #110	; 0x6e
 8001906:	d001      	beq.n	800190c <d_expr_primary+0xa0>
 8001908:	213d      	movs	r1, #61	; 0x3d
 800190a:	e7de      	b.n	80018ca <d_expr_primary+0x5e>
 800190c:	1c53      	adds	r3, r2, #1
 800190e:	60e3      	str	r3, [r4, #12]
 8001910:	7855      	ldrb	r5, [r2, #1]
 8001912:	213e      	movs	r1, #62	; 0x3e
 8001914:	461a      	mov	r2, r3
 8001916:	e7d6      	b.n	80018c6 <d_expr_primary+0x5a>
 8001918:	4620      	mov	r0, r4
 800191a:	f000 fc85 	bl	8002228 <d_special_name>
 800191e:	68e3      	ldr	r3, [r4, #12]
 8001920:	4606      	mov	r6, r0
 8001922:	781a      	ldrb	r2, [r3, #0]
 8001924:	e7bd      	b.n	80018a2 <d_expr_primary+0x36>
 8001926:	1c93      	adds	r3, r2, #2
 8001928:	60c3      	str	r3, [r0, #12]
 800192a:	7892      	ldrb	r2, [r2, #2]
 800192c:	2a5a      	cmp	r2, #90	; 0x5a
 800192e:	bf18      	it	ne
 8001930:	2600      	movne	r6, #0
 8001932:	d1b6      	bne.n	80018a2 <d_expr_primary+0x36>
 8001934:	e7a7      	b.n	8001886 <d_expr_primary+0x1a>
 8001936:	1a9d      	subs	r5, r3, r2
 8001938:	e9d4 0305 	ldrd	r0, r3, [r4, #20]
 800193c:	4298      	cmp	r0, r3
 800193e:	da1c      	bge.n	800197a <d_expr_primary+0x10e>
 8001940:	f8d4 e010 	ldr.w	lr, [r4, #16]
 8001944:	eb00 0780 	add.w	r7, r0, r0, lsl #2
 8001948:	eb0e 0387 	add.w	r3, lr, r7, lsl #2
 800194c:	ea4f 0c87 	mov.w	ip, r7, lsl #2
 8001950:	2700      	movs	r7, #0
 8001952:	3001      	adds	r0, #1
 8001954:	42bd      	cmp	r5, r7
 8001956:	e9c3 7701 	strd	r7, r7, [r3, #4]
 800195a:	6160      	str	r0, [r4, #20]
 800195c:	dd0d      	ble.n	800197a <d_expr_primary+0x10e>
 800195e:	e9c3 7701 	strd	r7, r7, [r3, #4]
 8001962:	f80e 700c 	strb.w	r7, [lr, ip]
 8001966:	e9c3 2503 	strd	r2, r5, [r3, #12]
 800196a:	4632      	mov	r2, r6
 800196c:	4620      	mov	r0, r4
 800196e:	f7fe fc37 	bl	80001e0 <d_make_comp>
 8001972:	68e3      	ldr	r3, [r4, #12]
 8001974:	4606      	mov	r6, r0
 8001976:	781a      	ldrb	r2, [r3, #0]
 8001978:	e793      	b.n	80018a2 <d_expr_primary+0x36>
 800197a:	2300      	movs	r3, #0
 800197c:	e7f5      	b.n	800196a <d_expr_primary+0xfe>
 800197e:	2500      	movs	r5, #0
 8001980:	e7da      	b.n	8001938 <d_expr_primary+0xcc>
 8001982:	3201      	adds	r2, #1
 8001984:	60e2      	str	r2, [r4, #12]
 8001986:	e7aa      	b.n	80018de <d_expr_primary+0x72>
 8001988:	0800d480 	.word	0x0800d480

0800198c <d_template_arg>:
 800198c:	b538      	push	{r3, r4, r5, lr}
 800198e:	68c2      	ldr	r2, [r0, #12]
 8001990:	7813      	ldrb	r3, [r2, #0]
 8001992:	2b4c      	cmp	r3, #76	; 0x4c
 8001994:	d01f      	beq.n	80019d6 <d_template_arg+0x4a>
 8001996:	4604      	mov	r4, r0
 8001998:	d807      	bhi.n	80019aa <d_template_arg+0x1e>
 800199a:	3b49      	subs	r3, #73	; 0x49
 800199c:	2b01      	cmp	r3, #1
 800199e:	d815      	bhi.n	80019cc <d_template_arg+0x40>
 80019a0:	3201      	adds	r2, #1
 80019a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80019a6:	60c2      	str	r2, [r0, #12]
 80019a8:	e01a      	b.n	80019e0 <d_template_args_1>
 80019aa:	2b58      	cmp	r3, #88	; 0x58
 80019ac:	d10e      	bne.n	80019cc <d_template_arg+0x40>
 80019ae:	3201      	adds	r2, #1
 80019b0:	2301      	movs	r3, #1
 80019b2:	6b05      	ldr	r5, [r0, #48]	; 0x30
 80019b4:	60c2      	str	r2, [r0, #12]
 80019b6:	6303      	str	r3, [r0, #48]	; 0x30
 80019b8:	f000 f8da 	bl	8001b70 <d_expression_1>
 80019bc:	68e3      	ldr	r3, [r4, #12]
 80019be:	6325      	str	r5, [r4, #48]	; 0x30
 80019c0:	781a      	ldrb	r2, [r3, #0]
 80019c2:	2a45      	cmp	r2, #69	; 0x45
 80019c4:	d10a      	bne.n	80019dc <d_template_arg+0x50>
 80019c6:	3301      	adds	r3, #1
 80019c8:	60e3      	str	r3, [r4, #12]
 80019ca:	bd38      	pop	{r3, r4, r5, pc}
 80019cc:	4620      	mov	r0, r4
 80019ce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80019d2:	f7ff b855 	b.w	8000a80 <d_type>
 80019d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80019da:	e747      	b.n	800186c <d_expr_primary>
 80019dc:	2000      	movs	r0, #0
 80019de:	bd38      	pop	{r3, r4, r5, pc}

080019e0 <d_template_args_1>:
 80019e0:	b570      	push	{r4, r5, r6, lr}
 80019e2:	68c3      	ldr	r3, [r0, #12]
 80019e4:	6a86      	ldr	r6, [r0, #40]	; 0x28
 80019e6:	781a      	ldrb	r2, [r3, #0]
 80019e8:	2a45      	cmp	r2, #69	; 0x45
 80019ea:	b082      	sub	sp, #8
 80019ec:	4604      	mov	r4, r0
 80019ee:	d01f      	beq.n	8001a30 <d_template_args_1+0x50>
 80019f0:	2300      	movs	r3, #0
 80019f2:	9301      	str	r3, [sp, #4]
 80019f4:	ad01      	add	r5, sp, #4
 80019f6:	e009      	b.n	8001a0c <d_template_args_1+0x2c>
 80019f8:	f7fe fbf2 	bl	80001e0 <d_make_comp>
 80019fc:	6028      	str	r0, [r5, #0]
 80019fe:	f100 0510 	add.w	r5, r0, #16
 8001a02:	b160      	cbz	r0, 8001a1e <d_template_args_1+0x3e>
 8001a04:	68e3      	ldr	r3, [r4, #12]
 8001a06:	781a      	ldrb	r2, [r3, #0]
 8001a08:	2a45      	cmp	r2, #69	; 0x45
 8001a0a:	d00b      	beq.n	8001a24 <d_template_args_1+0x44>
 8001a0c:	4620      	mov	r0, r4
 8001a0e:	f7ff ffbd 	bl	800198c <d_template_arg>
 8001a12:	4602      	mov	r2, r0
 8001a14:	2300      	movs	r3, #0
 8001a16:	212f      	movs	r1, #47	; 0x2f
 8001a18:	4620      	mov	r0, r4
 8001a1a:	2a00      	cmp	r2, #0
 8001a1c:	d1ec      	bne.n	80019f8 <d_template_args_1+0x18>
 8001a1e:	2000      	movs	r0, #0
 8001a20:	b002      	add	sp, #8
 8001a22:	bd70      	pop	{r4, r5, r6, pc}
 8001a24:	9801      	ldr	r0, [sp, #4]
 8001a26:	62a6      	str	r6, [r4, #40]	; 0x28
 8001a28:	3301      	adds	r3, #1
 8001a2a:	60e3      	str	r3, [r4, #12]
 8001a2c:	b002      	add	sp, #8
 8001a2e:	bd70      	pop	{r4, r5, r6, pc}
 8001a30:	1c5a      	adds	r2, r3, #1
 8001a32:	2300      	movs	r3, #0
 8001a34:	60c2      	str	r2, [r0, #12]
 8001a36:	212f      	movs	r1, #47	; 0x2f
 8001a38:	461a      	mov	r2, r3
 8001a3a:	b002      	add	sp, #8
 8001a3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001a40:	f7fe bbce 	b.w	80001e0 <d_make_comp>

08001a44 <d_prefix>:
 8001a44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001a46:	68c2      	ldr	r2, [r0, #12]
 8001a48:	7814      	ldrb	r4, [r2, #0]
 8001a4a:	b394      	cbz	r4, 8001ab2 <d_prefix+0x6e>
 8001a4c:	4606      	mov	r6, r0
 8001a4e:	460f      	mov	r7, r1
 8001a50:	2500      	movs	r5, #0
 8001a52:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8001a56:	2b4a      	cmp	r3, #74	; 0x4a
 8001a58:	d82b      	bhi.n	8001ab2 <d_prefix+0x6e>
 8001a5a:	e8df f003 	tbb	[pc, r3]
 8001a5e:	2d2d      	.short	0x2d2d
 8001a60:	2d2d2d2d 	.word	0x2d2d2d2d
 8001a64:	2d2d2d2d 	.word	0x2d2d2d2d
 8001a68:	2a2a2a2a 	.word	0x2a2a2a2a
 8001a6c:	2a2a2a2a 	.word	0x2a2a2a2a
 8001a70:	2b772d2a 	.word	0x2b772d2a
 8001a74:	682a2a2a 	.word	0x682a2a2a
 8001a78:	5f2d2a2a 	.word	0x5f2d2a2a
 8001a7c:	2a2a2a2a 	.word	0x2a2a2a2a
 8001a80:	2d4b532a 	.word	0x2d4b532a
 8001a84:	2a2a2a2a 	.word	0x2a2a2a2a
 8001a88:	2a2a2a2a 	.word	0x2a2a2a2a
 8001a8c:	2d2a2a2a 	.word	0x2d2a2a2a
 8001a90:	2d2d2d2d 	.word	0x2d2d2d2d
 8001a94:	2d2d2d2d 	.word	0x2d2d2d2d
 8001a98:	2d2d2d2d 	.word	0x2d2d2d2d
 8001a9c:	2d2d2d2d 	.word	0x2d2d2d2d
 8001aa0:	2d2d2d2d 	.word	0x2d2d2d2d
 8001aa4:	2d2d2d2d 	.word	0x2d2d2d2d
 8001aa8:	2d          	.byte	0x2d
 8001aa9:	00          	.byte	0x00
 8001aaa:	68f2      	ldr	r2, [r6, #12]
 8001aac:	7814      	ldrb	r4, [r2, #0]
 8001aae:	2c00      	cmp	r4, #0
 8001ab0:	d1cf      	bne.n	8001a52 <d_prefix+0xe>
 8001ab2:	2500      	movs	r5, #0
 8001ab4:	4628      	mov	r0, r5
 8001ab6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001ab8:	4630      	mov	r0, r6
 8001aba:	f7ff fd37 	bl	800152c <d_unqualified_name>
 8001abe:	4603      	mov	r3, r0
 8001ac0:	2d00      	cmp	r5, #0
 8001ac2:	d14e      	bne.n	8001b62 <d_prefix+0x11e>
 8001ac4:	4605      	mov	r5, r0
 8001ac6:	2c53      	cmp	r4, #83	; 0x53
 8001ac8:	d0ef      	beq.n	8001aaa <d_prefix+0x66>
 8001aca:	68f2      	ldr	r2, [r6, #12]
 8001acc:	7814      	ldrb	r4, [r2, #0]
 8001ace:	2c45      	cmp	r4, #69	; 0x45
 8001ad0:	d0f0      	beq.n	8001ab4 <d_prefix+0x70>
 8001ad2:	2f00      	cmp	r7, #0
 8001ad4:	d0eb      	beq.n	8001aae <d_prefix+0x6a>
 8001ad6:	2d00      	cmp	r5, #0
 8001ad8:	d0eb      	beq.n	8001ab2 <d_prefix+0x6e>
 8001ada:	e9d6 3108 	ldrd	r3, r1, [r6, #32]
 8001ade:	428b      	cmp	r3, r1
 8001ae0:	dae7      	bge.n	8001ab2 <d_prefix+0x6e>
 8001ae2:	69f1      	ldr	r1, [r6, #28]
 8001ae4:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
 8001ae8:	3301      	adds	r3, #1
 8001aea:	6233      	str	r3, [r6, #32]
 8001aec:	7814      	ldrb	r4, [r2, #0]
 8001aee:	2c00      	cmp	r4, #0
 8001af0:	d1af      	bne.n	8001a52 <d_prefix+0xe>
 8001af2:	e7de      	b.n	8001ab2 <d_prefix+0x6e>
 8001af4:	4630      	mov	r0, r6
 8001af6:	f7fe fe1d 	bl	8000734 <d_template_param>
 8001afa:	4603      	mov	r3, r0
 8001afc:	2d00      	cmp	r5, #0
 8001afe:	d130      	bne.n	8001b62 <d_prefix+0x11e>
 8001b00:	461d      	mov	r5, r3
 8001b02:	e7e2      	b.n	8001aca <d_prefix+0x86>
 8001b04:	2101      	movs	r1, #1
 8001b06:	4630      	mov	r0, r6
 8001b08:	f7fe fef0 	bl	80008ec <d_substitution>
 8001b0c:	4603      	mov	r3, r0
 8001b0e:	bb45      	cbnz	r5, 8001b62 <d_prefix+0x11e>
 8001b10:	68f2      	ldr	r2, [r6, #12]
 8001b12:	7814      	ldrb	r4, [r2, #0]
 8001b14:	461d      	mov	r5, r3
 8001b16:	2c00      	cmp	r4, #0
 8001b18:	d19b      	bne.n	8001a52 <d_prefix+0xe>
 8001b1a:	e7ca      	b.n	8001ab2 <d_prefix+0x6e>
 8001b1c:	2d00      	cmp	r5, #0
 8001b1e:	d0c8      	beq.n	8001ab2 <d_prefix+0x6e>
 8001b20:	1c53      	adds	r3, r2, #1
 8001b22:	60f3      	str	r3, [r6, #12]
 8001b24:	7854      	ldrb	r4, [r2, #1]
 8001b26:	461a      	mov	r2, r3
 8001b28:	2c00      	cmp	r4, #0
 8001b2a:	d192      	bne.n	8001a52 <d_prefix+0xe>
 8001b2c:	e7c1      	b.n	8001ab2 <d_prefix+0x6e>
 8001b2e:	2d00      	cmp	r5, #0
 8001b30:	d0bf      	beq.n	8001ab2 <d_prefix+0x6e>
 8001b32:	3201      	adds	r2, #1
 8001b34:	60f2      	str	r2, [r6, #12]
 8001b36:	4630      	mov	r0, r6
 8001b38:	f7ff ff52 	bl	80019e0 <d_template_args_1>
 8001b3c:	2104      	movs	r1, #4
 8001b3e:	4603      	mov	r3, r0
 8001b40:	462a      	mov	r2, r5
 8001b42:	4630      	mov	r0, r6
 8001b44:	f7fe fb4c 	bl	80001e0 <d_make_comp>
 8001b48:	4605      	mov	r5, r0
 8001b4a:	e7bc      	b.n	8001ac6 <d_prefix+0x82>
 8001b4c:	7853      	ldrb	r3, [r2, #1]
 8001b4e:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8001b52:	2b54      	cmp	r3, #84	; 0x54
 8001b54:	4630      	mov	r0, r6
 8001b56:	d006      	beq.n	8001b66 <d_prefix+0x122>
 8001b58:	f7ff fce8 	bl	800152c <d_unqualified_name>
 8001b5c:	4603      	mov	r3, r0
 8001b5e:	2d00      	cmp	r5, #0
 8001b60:	d0ce      	beq.n	8001b00 <d_prefix+0xbc>
 8001b62:	2101      	movs	r1, #1
 8001b64:	e7ec      	b.n	8001b40 <d_prefix+0xfc>
 8001b66:	f7fe ff8b 	bl	8000a80 <d_type>
 8001b6a:	4603      	mov	r3, r0
 8001b6c:	e7c6      	b.n	8001afc <d_prefix+0xb8>
 8001b6e:	bf00      	nop

08001b70 <d_expression_1>:
 8001b70:	68c2      	ldr	r2, [r0, #12]
 8001b72:	7813      	ldrb	r3, [r2, #0]
 8001b74:	2b4c      	cmp	r3, #76	; 0x4c
 8001b76:	f000 8089 	beq.w	8001c8c <d_expression_1+0x11c>
 8001b7a:	2b54      	cmp	r3, #84	; 0x54
 8001b7c:	f000 8087 	beq.w	8001c8e <d_expression_1+0x11e>
 8001b80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001b82:	2b73      	cmp	r3, #115	; 0x73
 8001b84:	b083      	sub	sp, #12
 8001b86:	4604      	mov	r4, r0
 8001b88:	d05a      	beq.n	8001c40 <d_expression_1+0xd0>
 8001b8a:	2b66      	cmp	r3, #102	; 0x66
 8001b8c:	d028      	beq.n	8001be0 <d_expression_1+0x70>
 8001b8e:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8001b92:	2909      	cmp	r1, #9
 8001b94:	d80c      	bhi.n	8001bb0 <d_expression_1+0x40>
 8001b96:	4620      	mov	r0, r4
 8001b98:	f7ff fcc8 	bl	800152c <d_unqualified_name>
 8001b9c:	4605      	mov	r5, r0
 8001b9e:	2800      	cmp	r0, #0
 8001ba0:	d070      	beq.n	8001c84 <d_expression_1+0x114>
 8001ba2:	68e3      	ldr	r3, [r4, #12]
 8001ba4:	781a      	ldrb	r2, [r3, #0]
 8001ba6:	2a49      	cmp	r2, #73	; 0x49
 8001ba8:	d073      	beq.n	8001c92 <d_expression_1+0x122>
 8001baa:	4628      	mov	r0, r5
 8001bac:	b003      	add	sp, #12
 8001bae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001bb0:	2b6f      	cmp	r3, #111	; 0x6f
 8001bb2:	d061      	beq.n	8001c78 <d_expression_1+0x108>
 8001bb4:	2b69      	cmp	r3, #105	; 0x69
 8001bb6:	d17a      	bne.n	8001cae <d_expression_1+0x13e>
 8001bb8:	7853      	ldrb	r3, [r2, #1]
 8001bba:	2b6c      	cmp	r3, #108	; 0x6c
 8001bbc:	d147      	bne.n	8001c4e <d_expression_1+0xde>
 8001bbe:	3202      	adds	r2, #2
 8001bc0:	60e2      	str	r2, [r4, #12]
 8001bc2:	2500      	movs	r5, #0
 8001bc4:	7811      	ldrb	r1, [r2, #0]
 8001bc6:	2900      	cmp	r1, #0
 8001bc8:	d05c      	beq.n	8001c84 <d_expression_1+0x114>
 8001bca:	7853      	ldrb	r3, [r2, #1]
 8001bcc:	2b00      	cmp	r3, #0
 8001bce:	d059      	beq.n	8001c84 <d_expression_1+0x114>
 8001bd0:	2145      	movs	r1, #69	; 0x45
 8001bd2:	4620      	mov	r0, r4
 8001bd4:	f000 fa44 	bl	8002060 <d_exprlist>
 8001bd8:	462a      	mov	r2, r5
 8001bda:	4603      	mov	r3, r0
 8001bdc:	2131      	movs	r1, #49	; 0x31
 8001bde:	e060      	b.n	8001ca2 <d_expression_1+0x132>
 8001be0:	7853      	ldrb	r3, [r2, #1]
 8001be2:	2b70      	cmp	r3, #112	; 0x70
 8001be4:	d133      	bne.n	8001c4e <d_expression_1+0xde>
 8001be6:	1c93      	adds	r3, r2, #2
 8001be8:	60c3      	str	r3, [r0, #12]
 8001bea:	7893      	ldrb	r3, [r2, #2]
 8001bec:	2b54      	cmp	r3, #84	; 0x54
 8001bee:	f000 8147 	beq.w	8001e80 <d_expression_1+0x310>
 8001bf2:	2b5f      	cmp	r3, #95	; 0x5f
 8001bf4:	f000 8085 	beq.w	8001d02 <d_expression_1+0x192>
 8001bf8:	2b6e      	cmp	r3, #110	; 0x6e
 8001bfa:	d043      	beq.n	8001c84 <d_expression_1+0x114>
 8001bfc:	f7fe fb68 	bl	80002d0 <d_number>
 8001c00:	1c41      	adds	r1, r0, #1
 8001c02:	d43f      	bmi.n	8001c84 <d_expression_1+0x114>
 8001c04:	68e3      	ldr	r3, [r4, #12]
 8001c06:	781a      	ldrb	r2, [r3, #0]
 8001c08:	2a5f      	cmp	r2, #95	; 0x5f
 8001c0a:	d13b      	bne.n	8001c84 <d_expression_1+0x114>
 8001c0c:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 8001c10:	3301      	adds	r3, #1
 8001c12:	4291      	cmp	r1, r2
 8001c14:	60e3      	str	r3, [r4, #12]
 8001c16:	d035      	beq.n	8001c84 <d_expression_1+0x114>
 8001c18:	3002      	adds	r0, #2
 8001c1a:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8001c1e:	4293      	cmp	r3, r2
 8001c20:	da30      	bge.n	8001c84 <d_expression_1+0x114>
 8001c22:	6922      	ldr	r2, [r4, #16]
 8001c24:	eb03 0183 	add.w	r1, r3, r3, lsl #2
 8001c28:	eb02 0581 	add.w	r5, r2, r1, lsl #2
 8001c2c:	3301      	adds	r3, #1
 8001c2e:	2600      	movs	r6, #0
 8001c30:	e9c5 6601 	strd	r6, r6, [r5, #4]
 8001c34:	6163      	str	r3, [r4, #20]
 8001c36:	2306      	movs	r3, #6
 8001c38:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
 8001c3c:	60e8      	str	r0, [r5, #12]
 8001c3e:	e7b4      	b.n	8001baa <d_expression_1+0x3a>
 8001c40:	7853      	ldrb	r3, [r2, #1]
 8001c42:	2b72      	cmp	r3, #114	; 0x72
 8001c44:	f000 80f7 	beq.w	8001e36 <d_expression_1+0x2c6>
 8001c48:	2b70      	cmp	r3, #112	; 0x70
 8001c4a:	f000 8111 	beq.w	8001e70 <d_expression_1+0x300>
 8001c4e:	4620      	mov	r0, r4
 8001c50:	f7ff fbe8 	bl	8001424 <d_operator_name>
 8001c54:	4605      	mov	r5, r0
 8001c56:	b1a8      	cbz	r0, 8001c84 <d_expression_1+0x114>
 8001c58:	7803      	ldrb	r3, [r0, #0]
 8001c5a:	2b32      	cmp	r3, #50	; 0x32
 8001c5c:	d034      	beq.n	8001cc8 <d_expression_1+0x158>
 8001c5e:	2b34      	cmp	r3, #52	; 0x34
 8001c60:	f000 819a 	beq.w	8001f98 <d_expression_1+0x428>
 8001c64:	d80e      	bhi.n	8001c84 <d_expression_1+0x114>
 8001c66:	2b33      	cmp	r3, #51	; 0x33
 8001c68:	d10c      	bne.n	8001c84 <d_expression_1+0x114>
 8001c6a:	68c3      	ldr	r3, [r0, #12]
 8001c6c:	2b03      	cmp	r3, #3
 8001c6e:	d809      	bhi.n	8001c84 <d_expression_1+0x114>
 8001c70:	e8df f003 	tbb	[pc, r3]
 8001c74:	0808cd6c 	.word	0x0808cd6c
 8001c78:	7853      	ldrb	r3, [r2, #1]
 8001c7a:	2b6e      	cmp	r3, #110	; 0x6e
 8001c7c:	d1e7      	bne.n	8001c4e <d_expression_1+0xde>
 8001c7e:	3202      	adds	r2, #2
 8001c80:	60c2      	str	r2, [r0, #12]
 8001c82:	e788      	b.n	8001b96 <d_expression_1+0x26>
 8001c84:	2500      	movs	r5, #0
 8001c86:	4628      	mov	r0, r5
 8001c88:	b003      	add	sp, #12
 8001c8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001c8c:	e5ee      	b.n	800186c <d_expr_primary>
 8001c8e:	f7fe bd51 	b.w	8000734 <d_template_param>
 8001c92:	3301      	adds	r3, #1
 8001c94:	60e3      	str	r3, [r4, #12]
 8001c96:	4620      	mov	r0, r4
 8001c98:	f7ff fea2 	bl	80019e0 <d_template_args_1>
 8001c9c:	462a      	mov	r2, r5
 8001c9e:	4603      	mov	r3, r0
 8001ca0:	2104      	movs	r1, #4
 8001ca2:	4620      	mov	r0, r4
 8001ca4:	b003      	add	sp, #12
 8001ca6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8001caa:	f7fe ba99 	b.w	80001e0 <d_make_comp>
 8001cae:	2b74      	cmp	r3, #116	; 0x74
 8001cb0:	f040 80b2 	bne.w	8001e18 <d_expression_1+0x2a8>
 8001cb4:	7853      	ldrb	r3, [r2, #1]
 8001cb6:	2b6c      	cmp	r3, #108	; 0x6c
 8001cb8:	d1c9      	bne.n	8001c4e <d_expression_1+0xde>
 8001cba:	3202      	adds	r2, #2
 8001cbc:	60e2      	str	r2, [r4, #12]
 8001cbe:	f7fe fedf 	bl	8000a80 <d_type>
 8001cc2:	68e2      	ldr	r2, [r4, #12]
 8001cc4:	4605      	mov	r5, r0
 8001cc6:	e77d      	b.n	8001bc4 <d_expression_1+0x54>
 8001cc8:	68c1      	ldr	r1, [r0, #12]
 8001cca:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8001ccc:	688a      	ldr	r2, [r1, #8]
 8001cce:	680e      	ldr	r6, [r1, #0]
 8001cd0:	3a02      	subs	r2, #2
 8001cd2:	4413      	add	r3, r2
 8001cd4:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001cd6:	7833      	ldrb	r3, [r6, #0]
 8001cd8:	2b73      	cmp	r3, #115	; 0x73
 8001cda:	d10b      	bne.n	8001cf4 <d_expression_1+0x184>
 8001cdc:	7872      	ldrb	r2, [r6, #1]
 8001cde:	2a74      	cmp	r2, #116	; 0x74
 8001ce0:	d108      	bne.n	8001cf4 <d_expression_1+0x184>
 8001ce2:	78b2      	ldrb	r2, [r6, #2]
 8001ce4:	b932      	cbnz	r2, 8001cf4 <d_expression_1+0x184>
 8001ce6:	4620      	mov	r0, r4
 8001ce8:	f7fe feca 	bl	8000a80 <d_type>
 8001cec:	462a      	mov	r2, r5
 8001cee:	4603      	mov	r3, r0
 8001cf0:	2137      	movs	r1, #55	; 0x37
 8001cf2:	e7d6      	b.n	8001ca2 <d_expression_1+0x132>
 8001cf4:	68cf      	ldr	r7, [r1, #12]
 8001cf6:	2f03      	cmp	r7, #3
 8001cf8:	d8c4      	bhi.n	8001c84 <d_expression_1+0x114>
 8001cfa:	e8df f007 	tbb	[pc, r7]
 8001cfe:	0627      	.short	0x0627
 8001d00:	2b54      	.short	0x2b54
 8001d02:	3203      	adds	r2, #3
 8001d04:	60c2      	str	r2, [r0, #12]
 8001d06:	2001      	movs	r0, #1
 8001d08:	e787      	b.n	8001c1a <d_expression_1+0xaa>
 8001d0a:	7832      	ldrb	r2, [r6, #0]
 8001d0c:	2a70      	cmp	r2, #112	; 0x70
 8001d0e:	f000 80c0 	beq.w	8001e92 <d_expression_1+0x322>
 8001d12:	2a6d      	cmp	r2, #109	; 0x6d
 8001d14:	f000 80bd 	beq.w	8001e92 <d_expression_1+0x322>
 8001d18:	2700      	movs	r7, #0
 8001d1a:	2b73      	cmp	r3, #115	; 0x73
 8001d1c:	f040 80b4 	bne.w	8001e88 <d_expression_1+0x318>
 8001d20:	7873      	ldrb	r3, [r6, #1]
 8001d22:	2b50      	cmp	r3, #80	; 0x50
 8001d24:	f040 80b0 	bne.w	8001e88 <d_expression_1+0x318>
 8001d28:	78b3      	ldrb	r3, [r6, #2]
 8001d2a:	2b00      	cmp	r3, #0
 8001d2c:	f040 80ac 	bne.w	8001e88 <d_expression_1+0x318>
 8001d30:	4620      	mov	r0, r4
 8001d32:	f7ff fe55 	bl	80019e0 <d_template_args_1>
 8001d36:	4603      	mov	r3, r0
 8001d38:	b12f      	cbz	r7, 8001d46 <d_expression_1+0x1d6>
 8001d3a:	461a      	mov	r2, r3
 8001d3c:	2139      	movs	r1, #57	; 0x39
 8001d3e:	4620      	mov	r0, r4
 8001d40:	f7fe fa4e 	bl	80001e0 <d_make_comp>
 8001d44:	4603      	mov	r3, r0
 8001d46:	462a      	mov	r2, r5
 8001d48:	2137      	movs	r1, #55	; 0x37
 8001d4a:	e7aa      	b.n	8001ca2 <d_expression_1+0x132>
 8001d4c:	2300      	movs	r3, #0
 8001d4e:	462a      	mov	r2, r5
 8001d50:	2136      	movs	r1, #54	; 0x36
 8001d52:	e7a6      	b.n	8001ca2 <d_expression_1+0x132>
 8001d54:	2b71      	cmp	r3, #113	; 0x71
 8001d56:	f040 80c4 	bne.w	8001ee2 <d_expression_1+0x372>
 8001d5a:	7872      	ldrb	r2, [r6, #1]
 8001d5c:	2a75      	cmp	r2, #117	; 0x75
 8001d5e:	f040 80c0 	bne.w	8001ee2 <d_expression_1+0x372>
 8001d62:	78b2      	ldrb	r2, [r6, #2]
 8001d64:	2a00      	cmp	r2, #0
 8001d66:	f040 80bc 	bne.w	8001ee2 <d_expression_1+0x372>
 8001d6a:	4620      	mov	r0, r4
 8001d6c:	f7ff ff00 	bl	8001b70 <d_expression_1>
 8001d70:	4606      	mov	r6, r0
 8001d72:	4620      	mov	r0, r4
 8001d74:	f7ff fefc 	bl	8001b70 <d_expression_1>
 8001d78:	4607      	mov	r7, r0
 8001d7a:	4620      	mov	r0, r4
 8001d7c:	f7ff fef8 	bl	8001b70 <d_expression_1>
 8001d80:	4603      	mov	r3, r0
 8001d82:	2800      	cmp	r0, #0
 8001d84:	f43f af7e 	beq.w	8001c84 <d_expression_1+0x114>
 8001d88:	463a      	mov	r2, r7
 8001d8a:	213c      	movs	r1, #60	; 0x3c
 8001d8c:	4620      	mov	r0, r4
 8001d8e:	f7fe fa27 	bl	80001e0 <d_make_comp>
 8001d92:	4632      	mov	r2, r6
 8001d94:	4603      	mov	r3, r0
 8001d96:	213b      	movs	r1, #59	; 0x3b
 8001d98:	4620      	mov	r0, r4
 8001d9a:	f7fe fa21 	bl	80001e0 <d_make_comp>
 8001d9e:	462a      	mov	r2, r5
 8001da0:	4603      	mov	r3, r0
 8001da2:	213a      	movs	r1, #58	; 0x3a
 8001da4:	e77d      	b.n	8001ca2 <d_expression_1+0x132>
 8001da6:	68eb      	ldr	r3, [r5, #12]
 8001da8:	681b      	ldr	r3, [r3, #0]
 8001daa:	785a      	ldrb	r2, [r3, #1]
 8001dac:	2a63      	cmp	r2, #99	; 0x63
 8001dae:	f000 810e 	beq.w	8001fce <d_expression_1+0x45e>
 8001db2:	7833      	ldrb	r3, [r6, #0]
 8001db4:	2b66      	cmp	r3, #102	; 0x66
 8001db6:	f000 8135 	beq.w	8002024 <d_expression_1+0x4b4>
 8001dba:	2b64      	cmp	r3, #100	; 0x64
 8001dbc:	f040 8129 	bne.w	8002012 <d_expression_1+0x4a2>
 8001dc0:	7873      	ldrb	r3, [r6, #1]
 8001dc2:	2b69      	cmp	r3, #105	; 0x69
 8001dc4:	f040 8125 	bne.w	8002012 <d_expression_1+0x4a2>
 8001dc8:	78b3      	ldrb	r3, [r6, #2]
 8001dca:	2b00      	cmp	r3, #0
 8001dcc:	f040 8121 	bne.w	8002012 <d_expression_1+0x4a2>
 8001dd0:	4620      	mov	r0, r4
 8001dd2:	f7ff fbab 	bl	800152c <d_unqualified_name>
 8001dd6:	4607      	mov	r7, r0
 8001dd8:	7833      	ldrb	r3, [r6, #0]
 8001dda:	2b63      	cmp	r3, #99	; 0x63
 8001ddc:	f040 80b4 	bne.w	8001f48 <d_expression_1+0x3d8>
 8001de0:	7872      	ldrb	r2, [r6, #1]
 8001de2:	2a6c      	cmp	r2, #108	; 0x6c
 8001de4:	f040 80b0 	bne.w	8001f48 <d_expression_1+0x3d8>
 8001de8:	78b2      	ldrb	r2, [r6, #2]
 8001dea:	2a00      	cmp	r2, #0
 8001dec:	f040 80ac 	bne.w	8001f48 <d_expression_1+0x3d8>
 8001df0:	2145      	movs	r1, #69	; 0x45
 8001df2:	4620      	mov	r0, r4
 8001df4:	f000 f934 	bl	8002060 <d_exprlist>
 8001df8:	4602      	mov	r2, r0
 8001dfa:	4613      	mov	r3, r2
 8001dfc:	2139      	movs	r1, #57	; 0x39
 8001dfe:	463a      	mov	r2, r7
 8001e00:	4620      	mov	r0, r4
 8001e02:	f7fe f9ed 	bl	80001e0 <d_make_comp>
 8001e06:	462a      	mov	r2, r5
 8001e08:	4603      	mov	r3, r0
 8001e0a:	2138      	movs	r1, #56	; 0x38
 8001e0c:	e749      	b.n	8001ca2 <d_expression_1+0x132>
 8001e0e:	4620      	mov	r0, r4
 8001e10:	f7ff feae 	bl	8001b70 <d_expression_1>
 8001e14:	4603      	mov	r3, r0
 8001e16:	e796      	b.n	8001d46 <d_expression_1+0x1d6>
 8001e18:	2b75      	cmp	r3, #117	; 0x75
 8001e1a:	f47f af18 	bne.w	8001c4e <d_expression_1+0xde>
 8001e1e:	3201      	adds	r2, #1
 8001e20:	60c2      	str	r2, [r0, #12]
 8001e22:	f7fe fcf3 	bl	800080c <d_source_name>
 8001e26:	9001      	str	r0, [sp, #4]
 8001e28:	4620      	mov	r0, r4
 8001e2a:	f7ff fdd9 	bl	80019e0 <d_template_args_1>
 8001e2e:	9a01      	ldr	r2, [sp, #4]
 8001e30:	4603      	mov	r3, r0
 8001e32:	213f      	movs	r1, #63	; 0x3f
 8001e34:	e735      	b.n	8001ca2 <d_expression_1+0x132>
 8001e36:	1c93      	adds	r3, r2, #2
 8001e38:	6b81      	ldr	r1, [r0, #56]	; 0x38
 8001e3a:	60c3      	str	r3, [r0, #12]
 8001e3c:	7893      	ldrb	r3, [r2, #2]
 8001e3e:	b131      	cbz	r1, 8001e4e <d_expression_1+0x2de>
 8001e40:	2b55      	cmp	r3, #85	; 0x55
 8001e42:	d84a      	bhi.n	8001eda <d_expression_1+0x36a>
 8001e44:	2b42      	cmp	r3, #66	; 0x42
 8001e46:	d832      	bhi.n	8001eae <d_expression_1+0x33e>
 8001e48:	3b30      	subs	r3, #48	; 0x30
 8001e4a:	2b09      	cmp	r3, #9
 8001e4c:	d936      	bls.n	8001ebc <d_expression_1+0x34c>
 8001e4e:	4620      	mov	r0, r4
 8001e50:	f7fe fe16 	bl	8000a80 <d_type>
 8001e54:	4605      	mov	r5, r0
 8001e56:	4620      	mov	r0, r4
 8001e58:	f7ff fb68 	bl	800152c <d_unqualified_name>
 8001e5c:	68e3      	ldr	r3, [r4, #12]
 8001e5e:	7819      	ldrb	r1, [r3, #0]
 8001e60:	2949      	cmp	r1, #73	; 0x49
 8001e62:	4602      	mov	r2, r0
 8001e64:	f000 80a5 	beq.w	8001fb2 <d_expression_1+0x442>
 8001e68:	4613      	mov	r3, r2
 8001e6a:	2101      	movs	r1, #1
 8001e6c:	462a      	mov	r2, r5
 8001e6e:	e718      	b.n	8001ca2 <d_expression_1+0x132>
 8001e70:	3202      	adds	r2, #2
 8001e72:	60c2      	str	r2, [r0, #12]
 8001e74:	f7ff fe7c 	bl	8001b70 <d_expression_1>
 8001e78:	2300      	movs	r3, #0
 8001e7a:	4602      	mov	r2, r0
 8001e7c:	214c      	movs	r1, #76	; 0x4c
 8001e7e:	e710      	b.n	8001ca2 <d_expression_1+0x132>
 8001e80:	3203      	adds	r2, #3
 8001e82:	60c2      	str	r2, [r0, #12]
 8001e84:	2000      	movs	r0, #0
 8001e86:	e6c8      	b.n	8001c1a <d_expression_1+0xaa>
 8001e88:	4620      	mov	r0, r4
 8001e8a:	f7ff fe71 	bl	8001b70 <d_expression_1>
 8001e8e:	4603      	mov	r3, r0
 8001e90:	e752      	b.n	8001d38 <d_expression_1+0x1c8>
 8001e92:	7871      	ldrb	r1, [r6, #1]
 8001e94:	4291      	cmp	r1, r2
 8001e96:	f47f af3f 	bne.w	8001d18 <d_expression_1+0x1a8>
 8001e9a:	68e2      	ldr	r2, [r4, #12]
 8001e9c:	7811      	ldrb	r1, [r2, #0]
 8001e9e:	295f      	cmp	r1, #95	; 0x5f
 8001ea0:	f47f af3b 	bne.w	8001d1a <d_expression_1+0x1aa>
 8001ea4:	3201      	adds	r2, #1
 8001ea6:	60e2      	str	r2, [r4, #12]
 8001ea8:	7833      	ldrb	r3, [r6, #0]
 8001eaa:	2700      	movs	r7, #0
 8001eac:	e735      	b.n	8001d1a <d_expression_1+0x1aa>
 8001eae:	4a6a      	ldr	r2, [pc, #424]	; (8002058 <d_expression_1+0x4e8>)
 8001eb0:	3b43      	subs	r3, #67	; 0x43
 8001eb2:	b2db      	uxtb	r3, r3
 8001eb4:	fa22 f303 	lsr.w	r3, r2, r3
 8001eb8:	07db      	lsls	r3, r3, #31
 8001eba:	d5c8      	bpl.n	8001e4e <d_expression_1+0x2de>
 8001ebc:	f04f 33ff 	mov.w	r3, #4294967295
 8001ec0:	63a3      	str	r3, [r4, #56]	; 0x38
 8001ec2:	2100      	movs	r1, #0
 8001ec4:	4620      	mov	r0, r4
 8001ec6:	f7ff fdbd 	bl	8001a44 <d_prefix>
 8001eca:	68e3      	ldr	r3, [r4, #12]
 8001ecc:	781a      	ldrb	r2, [r3, #0]
 8001ece:	2a45      	cmp	r2, #69	; 0x45
 8001ed0:	4605      	mov	r5, r0
 8001ed2:	d1c0      	bne.n	8001e56 <d_expression_1+0x2e6>
 8001ed4:	3301      	adds	r3, #1
 8001ed6:	60e3      	str	r3, [r4, #12]
 8001ed8:	e7bd      	b.n	8001e56 <d_expression_1+0x2e6>
 8001eda:	3b61      	subs	r3, #97	; 0x61
 8001edc:	2b19      	cmp	r3, #25
 8001ede:	d8b6      	bhi.n	8001e4e <d_expression_1+0x2de>
 8001ee0:	e7ec      	b.n	8001ebc <d_expression_1+0x34c>
 8001ee2:	2b64      	cmp	r3, #100	; 0x64
 8001ee4:	d106      	bne.n	8001ef4 <d_expression_1+0x384>
 8001ee6:	7873      	ldrb	r3, [r6, #1]
 8001ee8:	2b58      	cmp	r3, #88	; 0x58
 8001eea:	d103      	bne.n	8001ef4 <d_expression_1+0x384>
 8001eec:	78b3      	ldrb	r3, [r6, #2]
 8001eee:	2b00      	cmp	r3, #0
 8001ef0:	f43f af3b 	beq.w	8001d6a <d_expression_1+0x1fa>
 8001ef4:	7833      	ldrb	r3, [r6, #0]
 8001ef6:	2b66      	cmp	r3, #102	; 0x66
 8001ef8:	f000 8099 	beq.w	800202e <d_expression_1+0x4be>
 8001efc:	2b6e      	cmp	r3, #110	; 0x6e
 8001efe:	f47f aec1 	bne.w	8001c84 <d_expression_1+0x114>
 8001f02:	7873      	ldrb	r3, [r6, #1]
 8001f04:	2b77      	cmp	r3, #119	; 0x77
 8001f06:	d002      	beq.n	8001f0e <d_expression_1+0x39e>
 8001f08:	2b61      	cmp	r3, #97	; 0x61
 8001f0a:	f47f aebb 	bne.w	8001c84 <d_expression_1+0x114>
 8001f0e:	215f      	movs	r1, #95	; 0x5f
 8001f10:	4620      	mov	r0, r4
 8001f12:	f000 f8a5 	bl	8002060 <d_exprlist>
 8001f16:	4606      	mov	r6, r0
 8001f18:	4620      	mov	r0, r4
 8001f1a:	f7fe fdb1 	bl	8000a80 <d_type>
 8001f1e:	68e3      	ldr	r3, [r4, #12]
 8001f20:	781a      	ldrb	r2, [r3, #0]
 8001f22:	2a45      	cmp	r2, #69	; 0x45
 8001f24:	4607      	mov	r7, r0
 8001f26:	f000 8092 	beq.w	800204e <d_expression_1+0x4de>
 8001f2a:	2a70      	cmp	r2, #112	; 0x70
 8001f2c:	f000 8083 	beq.w	8002036 <d_expression_1+0x4c6>
 8001f30:	2a69      	cmp	r2, #105	; 0x69
 8001f32:	f47f aea7 	bne.w	8001c84 <d_expression_1+0x114>
 8001f36:	785b      	ldrb	r3, [r3, #1]
 8001f38:	2b6c      	cmp	r3, #108	; 0x6c
 8001f3a:	f47f aea3 	bne.w	8001c84 <d_expression_1+0x114>
 8001f3e:	4620      	mov	r0, r4
 8001f40:	f7ff fe16 	bl	8001b70 <d_expression_1>
 8001f44:	4603      	mov	r3, r0
 8001f46:	e71f      	b.n	8001d88 <d_expression_1+0x218>
 8001f48:	2b64      	cmp	r3, #100	; 0x64
 8001f4a:	d155      	bne.n	8001ff8 <d_expression_1+0x488>
 8001f4c:	7872      	ldrb	r2, [r6, #1]
 8001f4e:	2a74      	cmp	r2, #116	; 0x74
 8001f50:	d152      	bne.n	8001ff8 <d_expression_1+0x488>
 8001f52:	78b2      	ldrb	r2, [r6, #2]
 8001f54:	2a00      	cmp	r2, #0
 8001f56:	d14f      	bne.n	8001ff8 <d_expression_1+0x488>
 8001f58:	68e3      	ldr	r3, [r4, #12]
 8001f5a:	781a      	ldrb	r2, [r3, #0]
 8001f5c:	2a67      	cmp	r2, #103	; 0x67
 8001f5e:	d05d      	beq.n	800201c <d_expression_1+0x4ac>
 8001f60:	2a73      	cmp	r2, #115	; 0x73
 8001f62:	d102      	bne.n	8001f6a <d_expression_1+0x3fa>
 8001f64:	785b      	ldrb	r3, [r3, #1]
 8001f66:	2b72      	cmp	r3, #114	; 0x72
 8001f68:	d04e      	beq.n	8002008 <d_expression_1+0x498>
 8001f6a:	4620      	mov	r0, r4
 8001f6c:	f7ff fade 	bl	800152c <d_unqualified_name>
 8001f70:	68e3      	ldr	r3, [r4, #12]
 8001f72:	7819      	ldrb	r1, [r3, #0]
 8001f74:	2949      	cmp	r1, #73	; 0x49
 8001f76:	4602      	mov	r2, r0
 8001f78:	f47f af3f 	bne.w	8001dfa <d_expression_1+0x28a>
 8001f7c:	3301      	adds	r3, #1
 8001f7e:	60e3      	str	r3, [r4, #12]
 8001f80:	4620      	mov	r0, r4
 8001f82:	9201      	str	r2, [sp, #4]
 8001f84:	f7ff fd2c 	bl	80019e0 <d_template_args_1>
 8001f88:	9a01      	ldr	r2, [sp, #4]
 8001f8a:	4603      	mov	r3, r0
 8001f8c:	2104      	movs	r1, #4
 8001f8e:	4620      	mov	r0, r4
 8001f90:	f7fe f926 	bl	80001e0 <d_make_comp>
 8001f94:	4602      	mov	r2, r0
 8001f96:	e730      	b.n	8001dfa <d_expression_1+0x28a>
 8001f98:	68e3      	ldr	r3, [r4, #12]
 8001f9a:	781a      	ldrb	r2, [r3, #0]
 8001f9c:	2a5f      	cmp	r2, #95	; 0x5f
 8001f9e:	f47f af36 	bne.w	8001e0e <d_expression_1+0x29e>
 8001fa2:	3301      	adds	r3, #1
 8001fa4:	60e3      	str	r3, [r4, #12]
 8001fa6:	2145      	movs	r1, #69	; 0x45
 8001fa8:	4620      	mov	r0, r4
 8001faa:	f000 f859 	bl	8002060 <d_exprlist>
 8001fae:	4603      	mov	r3, r0
 8001fb0:	e6c9      	b.n	8001d46 <d_expression_1+0x1d6>
 8001fb2:	3301      	adds	r3, #1
 8001fb4:	60e3      	str	r3, [r4, #12]
 8001fb6:	4620      	mov	r0, r4
 8001fb8:	9201      	str	r2, [sp, #4]
 8001fba:	f7ff fd11 	bl	80019e0 <d_template_args_1>
 8001fbe:	9a01      	ldr	r2, [sp, #4]
 8001fc0:	4603      	mov	r3, r0
 8001fc2:	2104      	movs	r1, #4
 8001fc4:	4620      	mov	r0, r4
 8001fc6:	f7fe f90b 	bl	80001e0 <d_make_comp>
 8001fca:	4602      	mov	r2, r0
 8001fcc:	e74c      	b.n	8001e68 <d_expression_1+0x2f8>
 8001fce:	781b      	ldrb	r3, [r3, #0]
 8001fd0:	2b73      	cmp	r3, #115	; 0x73
 8001fd2:	d00c      	beq.n	8001fee <d_expression_1+0x47e>
 8001fd4:	3b63      	subs	r3, #99	; 0x63
 8001fd6:	b2db      	uxtb	r3, r3
 8001fd8:	2b0f      	cmp	r3, #15
 8001fda:	f63f aeea 	bhi.w	8001db2 <d_expression_1+0x242>
 8001fde:	4a1f      	ldr	r2, [pc, #124]	; (800205c <d_expression_1+0x4ec>)
 8001fe0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8001fe4:	f8d3 37fc 	ldr.w	r3, [r3, #2044]	; 0x7fc
 8001fe8:	2b00      	cmp	r3, #0
 8001fea:	f43f aee2 	beq.w	8001db2 <d_expression_1+0x242>
 8001fee:	4620      	mov	r0, r4
 8001ff0:	f7fe fd46 	bl	8000a80 <d_type>
 8001ff4:	4607      	mov	r7, r0
 8001ff6:	e6ef      	b.n	8001dd8 <d_expression_1+0x268>
 8001ff8:	2b70      	cmp	r3, #112	; 0x70
 8001ffa:	d105      	bne.n	8002008 <d_expression_1+0x498>
 8001ffc:	7873      	ldrb	r3, [r6, #1]
 8001ffe:	2b74      	cmp	r3, #116	; 0x74
 8002000:	d102      	bne.n	8002008 <d_expression_1+0x498>
 8002002:	78b3      	ldrb	r3, [r6, #2]
 8002004:	2b00      	cmp	r3, #0
 8002006:	d0a7      	beq.n	8001f58 <d_expression_1+0x3e8>
 8002008:	4620      	mov	r0, r4
 800200a:	f7ff fdb1 	bl	8001b70 <d_expression_1>
 800200e:	4602      	mov	r2, r0
 8002010:	e6f3      	b.n	8001dfa <d_expression_1+0x28a>
 8002012:	4620      	mov	r0, r4
 8002014:	f7ff fdac 	bl	8001b70 <d_expression_1>
 8002018:	4607      	mov	r7, r0
 800201a:	e6dd      	b.n	8001dd8 <d_expression_1+0x268>
 800201c:	785b      	ldrb	r3, [r3, #1]
 800201e:	2b73      	cmp	r3, #115	; 0x73
 8002020:	d1a3      	bne.n	8001f6a <d_expression_1+0x3fa>
 8002022:	e7f1      	b.n	8002008 <d_expression_1+0x498>
 8002024:	4620      	mov	r0, r4
 8002026:	f7ff f9fd 	bl	8001424 <d_operator_name>
 800202a:	4607      	mov	r7, r0
 800202c:	e6d4      	b.n	8001dd8 <d_expression_1+0x268>
 800202e:	4620      	mov	r0, r4
 8002030:	f7ff f9f8 	bl	8001424 <d_operator_name>
 8002034:	e69c      	b.n	8001d70 <d_expression_1+0x200>
 8002036:	785a      	ldrb	r2, [r3, #1]
 8002038:	2a69      	cmp	r2, #105	; 0x69
 800203a:	f47f ae23 	bne.w	8001c84 <d_expression_1+0x114>
 800203e:	3302      	adds	r3, #2
 8002040:	60e3      	str	r3, [r4, #12]
 8002042:	2145      	movs	r1, #69	; 0x45
 8002044:	4620      	mov	r0, r4
 8002046:	f000 f80b 	bl	8002060 <d_exprlist>
 800204a:	4603      	mov	r3, r0
 800204c:	e69c      	b.n	8001d88 <d_expression_1+0x218>
 800204e:	3301      	adds	r3, #1
 8002050:	60e3      	str	r3, [r4, #12]
 8002052:	2300      	movs	r3, #0
 8002054:	e698      	b.n	8001d88 <d_expression_1+0x218>
 8002056:	bf00      	nop
 8002058:	00040201 	.word	0x00040201
 800205c:	0800c890 	.word	0x0800c890

08002060 <d_exprlist>:
 8002060:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002064:	68c2      	ldr	r2, [r0, #12]
 8002066:	460e      	mov	r6, r1
 8002068:	7811      	ldrb	r1, [r2, #0]
 800206a:	b082      	sub	sp, #8
 800206c:	2300      	movs	r3, #0
 800206e:	42b1      	cmp	r1, r6
 8002070:	4604      	mov	r4, r0
 8002072:	9301      	str	r3, [sp, #4]
 8002074:	d024      	beq.n	80020c0 <d_exprlist+0x60>
 8002076:	f8d0 8030 	ldr.w	r8, [r0, #48]	; 0x30
 800207a:	ad01      	add	r5, sp, #4
 800207c:	2701      	movs	r7, #1
 800207e:	e009      	b.n	8002094 <d_exprlist+0x34>
 8002080:	f7fe f8ae 	bl	80001e0 <d_make_comp>
 8002084:	6028      	str	r0, [r5, #0]
 8002086:	f100 0510 	add.w	r5, r0, #16
 800208a:	b178      	cbz	r0, 80020ac <d_exprlist+0x4c>
 800208c:	68e3      	ldr	r3, [r4, #12]
 800208e:	781a      	ldrb	r2, [r3, #0]
 8002090:	42b2      	cmp	r2, r6
 8002092:	d00f      	beq.n	80020b4 <d_exprlist+0x54>
 8002094:	6327      	str	r7, [r4, #48]	; 0x30
 8002096:	4620      	mov	r0, r4
 8002098:	f7ff fd6a 	bl	8001b70 <d_expression_1>
 800209c:	4602      	mov	r2, r0
 800209e:	2300      	movs	r3, #0
 80020a0:	212e      	movs	r1, #46	; 0x2e
 80020a2:	4620      	mov	r0, r4
 80020a4:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
 80020a8:	2a00      	cmp	r2, #0
 80020aa:	d1e9      	bne.n	8002080 <d_exprlist+0x20>
 80020ac:	2000      	movs	r0, #0
 80020ae:	b002      	add	sp, #8
 80020b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80020b4:	9801      	ldr	r0, [sp, #4]
 80020b6:	3301      	adds	r3, #1
 80020b8:	60e3      	str	r3, [r4, #12]
 80020ba:	b002      	add	sp, #8
 80020bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80020c0:	3201      	adds	r2, #1
 80020c2:	60c2      	str	r2, [r0, #12]
 80020c4:	212e      	movs	r1, #46	; 0x2e
 80020c6:	461a      	mov	r2, r3
 80020c8:	b002      	add	sp, #8
 80020ca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80020ce:	f7fe b887 	b.w	80001e0 <d_make_comp>
 80020d2:	bf00      	nop

080020d4 <d_cv_qualifiers>:
 80020d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80020d8:	460f      	mov	r7, r1
 80020da:	68c1      	ldr	r1, [r0, #12]
 80020dc:	f1b2 0900 	subs.w	r9, r2, #0
 80020e0:	b083      	sub	sp, #12
 80020e2:	780a      	ldrb	r2, [r1, #0]
 80020e4:	4604      	mov	r4, r0
 80020e6:	bf15      	itete	ne
 80020e8:	f04f 0a1e 	movne.w	sl, #30
 80020ec:	f04f 0a1b 	moveq.w	sl, #27
 80020f0:	f04f 081d 	movne.w	r8, #29
 80020f4:	f04f 081a 	moveq.w	r8, #26
 80020f8:	bf14      	ite	ne
 80020fa:	261c      	movne	r6, #28
 80020fc:	2619      	moveq	r6, #25
 80020fe:	463d      	mov	r5, r7
 8002100:	f04f 0b01 	mov.w	fp, #1
 8002104:	e01b      	b.n	800213e <d_cv_qualifiers+0x6a>
 8002106:	2a56      	cmp	r2, #86	; 0x56
 8002108:	d033      	beq.n	8002172 <d_cv_qualifiers+0x9e>
 800210a:	2a4b      	cmp	r2, #75	; 0x4b
 800210c:	d037      	beq.n	800217e <d_cv_qualifiers+0xaa>
 800210e:	784b      	ldrb	r3, [r1, #1]
 8002110:	b353      	cbz	r3, 8002168 <d_cv_qualifiers+0x94>
 8002112:	1c8b      	adds	r3, r1, #2
 8002114:	60e3      	str	r3, [r4, #12]
 8002116:	784b      	ldrb	r3, [r1, #1]
 8002118:	2b78      	cmp	r3, #120	; 0x78
 800211a:	d04f      	beq.n	80021bc <d_cv_qualifiers+0xe8>
 800211c:	2b6f      	cmp	r3, #111	; 0x6f
 800211e:	d134      	bne.n	800218a <d_cv_qualifiers+0xb6>
 8002120:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002122:	3309      	adds	r3, #9
 8002124:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002126:	2150      	movs	r1, #80	; 0x50
 8002128:	2300      	movs	r3, #0
 800212a:	2200      	movs	r2, #0
 800212c:	4620      	mov	r0, r4
 800212e:	f7fe f857 	bl	80001e0 <d_make_comp>
 8002132:	6028      	str	r0, [r5, #0]
 8002134:	b1c0      	cbz	r0, 8002168 <d_cv_qualifiers+0x94>
 8002136:	68e1      	ldr	r1, [r4, #12]
 8002138:	780a      	ldrb	r2, [r1, #0]
 800213a:	f100 050c 	add.w	r5, r0, #12
 800213e:	4608      	mov	r0, r1
 8002140:	f7fe fa24 	bl	800058c <next_is_type_qual.isra.0>
 8002144:	2800      	cmp	r0, #0
 8002146:	d03f      	beq.n	80021c8 <d_cv_qualifiers+0xf4>
 8002148:	1c4b      	adds	r3, r1, #1
 800214a:	2a72      	cmp	r2, #114	; 0x72
 800214c:	60e3      	str	r3, [r4, #12]
 800214e:	d1da      	bne.n	8002106 <d_cv_qualifiers+0x32>
 8002150:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002152:	3309      	adds	r3, #9
 8002154:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002156:	4631      	mov	r1, r6
 8002158:	2300      	movs	r3, #0
 800215a:	2200      	movs	r2, #0
 800215c:	4620      	mov	r0, r4
 800215e:	f7fe f83f 	bl	80001e0 <d_make_comp>
 8002162:	6028      	str	r0, [r5, #0]
 8002164:	2800      	cmp	r0, #0
 8002166:	d1e6      	bne.n	8002136 <d_cv_qualifiers+0x62>
 8002168:	2500      	movs	r5, #0
 800216a:	4628      	mov	r0, r5
 800216c:	b003      	add	sp, #12
 800216e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002172:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002174:	3309      	adds	r3, #9
 8002176:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002178:	4641      	mov	r1, r8
 800217a:	2300      	movs	r3, #0
 800217c:	e7d5      	b.n	800212a <d_cv_qualifiers+0x56>
 800217e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002180:	3306      	adds	r3, #6
 8002182:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002184:	4651      	mov	r1, sl
 8002186:	2300      	movs	r3, #0
 8002188:	e7cf      	b.n	800212a <d_cv_qualifiers+0x56>
 800218a:	2b4f      	cmp	r3, #79	; 0x4f
 800218c:	d138      	bne.n	8002200 <d_cv_qualifiers+0x12c>
 800218e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002190:	3309      	adds	r3, #9
 8002192:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002194:	4620      	mov	r0, r4
 8002196:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002198:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
 800219c:	9301      	str	r3, [sp, #4]
 800219e:	f7ff fce7 	bl	8001b70 <d_expression_1>
 80021a2:	9b01      	ldr	r3, [sp, #4]
 80021a4:	6323      	str	r3, [r4, #48]	; 0x30
 80021a6:	4603      	mov	r3, r0
 80021a8:	2800      	cmp	r0, #0
 80021aa:	d0dd      	beq.n	8002168 <d_cv_qualifiers+0x94>
 80021ac:	68e2      	ldr	r2, [r4, #12]
 80021ae:	7811      	ldrb	r1, [r2, #0]
 80021b0:	2945      	cmp	r1, #69	; 0x45
 80021b2:	d1d9      	bne.n	8002168 <d_cv_qualifiers+0x94>
 80021b4:	3201      	adds	r2, #1
 80021b6:	60e2      	str	r2, [r4, #12]
 80021b8:	2150      	movs	r1, #80	; 0x50
 80021ba:	e7b6      	b.n	800212a <d_cv_qualifiers+0x56>
 80021bc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80021be:	3311      	adds	r3, #17
 80021c0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80021c2:	214e      	movs	r1, #78	; 0x4e
 80021c4:	2300      	movs	r3, #0
 80021c6:	e7b0      	b.n	800212a <d_cv_qualifiers+0x56>
 80021c8:	f1b9 0f00 	cmp.w	r9, #0
 80021cc:	d1cd      	bne.n	800216a <d_cv_qualifiers+0x96>
 80021ce:	2a46      	cmp	r2, #70	; 0x46
 80021d0:	d1cb      	bne.n	800216a <d_cv_qualifiers+0x96>
 80021d2:	42bd      	cmp	r5, r7
 80021d4:	d0c9      	beq.n	800216a <d_cv_qualifiers+0x96>
 80021d6:	201d      	movs	r0, #29
 80021d8:	211e      	movs	r1, #30
 80021da:	221c      	movs	r2, #28
 80021dc:	e004      	b.n	80021e8 <d_cv_qualifiers+0x114>
 80021de:	2b19      	cmp	r3, #25
 80021e0:	d00c      	beq.n	80021fc <d_cv_qualifiers+0x128>
 80021e2:	370c      	adds	r7, #12
 80021e4:	42bd      	cmp	r5, r7
 80021e6:	d0c0      	beq.n	800216a <d_cv_qualifiers+0x96>
 80021e8:	683f      	ldr	r7, [r7, #0]
 80021ea:	783b      	ldrb	r3, [r7, #0]
 80021ec:	2b1a      	cmp	r3, #26
 80021ee:	d003      	beq.n	80021f8 <d_cv_qualifiers+0x124>
 80021f0:	2b1b      	cmp	r3, #27
 80021f2:	d1f4      	bne.n	80021de <d_cv_qualifiers+0x10a>
 80021f4:	7039      	strb	r1, [r7, #0]
 80021f6:	e7f4      	b.n	80021e2 <d_cv_qualifiers+0x10e>
 80021f8:	7038      	strb	r0, [r7, #0]
 80021fa:	e7f2      	b.n	80021e2 <d_cv_qualifiers+0x10e>
 80021fc:	703a      	strb	r2, [r7, #0]
 80021fe:	e7f0      	b.n	80021e2 <d_cv_qualifiers+0x10e>
 8002200:	2b77      	cmp	r3, #119	; 0x77
 8002202:	d1b1      	bne.n	8002168 <d_cv_qualifiers+0x94>
 8002204:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002206:	3306      	adds	r3, #6
 8002208:	62e3      	str	r3, [r4, #44]	; 0x2c
 800220a:	4620      	mov	r0, r4
 800220c:	f7ff f870 	bl	80012f0 <d_parmlist>
 8002210:	4603      	mov	r3, r0
 8002212:	2800      	cmp	r0, #0
 8002214:	d0a8      	beq.n	8002168 <d_cv_qualifiers+0x94>
 8002216:	68e2      	ldr	r2, [r4, #12]
 8002218:	7811      	ldrb	r1, [r2, #0]
 800221a:	2945      	cmp	r1, #69	; 0x45
 800221c:	d1a4      	bne.n	8002168 <d_cv_qualifiers+0x94>
 800221e:	3201      	adds	r2, #1
 8002220:	60e2      	str	r2, [r4, #12]
 8002222:	2151      	movs	r1, #81	; 0x51
 8002224:	e781      	b.n	800212a <d_cv_qualifiers+0x56>
 8002226:	bf00      	nop

08002228 <d_special_name>:
 8002228:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800222c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800222e:	68c3      	ldr	r3, [r0, #12]
 8002230:	f101 0214 	add.w	r2, r1, #20
 8002234:	62c2      	str	r2, [r0, #44]	; 0x2c
 8002236:	781a      	ldrb	r2, [r3, #0]
 8002238:	2a54      	cmp	r2, #84	; 0x54
 800223a:	b082      	sub	sp, #8
 800223c:	4604      	mov	r4, r0
 800223e:	d075      	beq.n	800232c <d_special_name+0x104>
 8002240:	2a47      	cmp	r2, #71	; 0x47
 8002242:	d128      	bne.n	8002296 <d_special_name+0x6e>
 8002244:	1c5a      	adds	r2, r3, #1
 8002246:	60c2      	str	r2, [r0, #12]
 8002248:	785a      	ldrb	r2, [r3, #1]
 800224a:	b322      	cbz	r2, 8002296 <d_special_name+0x6e>
 800224c:	1c9a      	adds	r2, r3, #2
 800224e:	60c2      	str	r2, [r0, #12]
 8002250:	785a      	ldrb	r2, [r3, #1]
 8002252:	2a56      	cmp	r2, #86	; 0x56
 8002254:	d823      	bhi.n	800229e <d_special_name+0x76>
 8002256:	2a40      	cmp	r2, #64	; 0x40
 8002258:	d91d      	bls.n	8002296 <d_special_name+0x6e>
 800225a:	3a41      	subs	r2, #65	; 0x41
 800225c:	2a15      	cmp	r2, #21
 800225e:	d81a      	bhi.n	8002296 <d_special_name+0x6e>
 8002260:	e8df f012 	tbh	[pc, r2, lsl #1]
 8002264:	0019011d 	.word	0x0019011d
 8002268:	00190019 	.word	0x00190019
 800226c:	00190019 	.word	0x00190019
 8002270:	00190019 	.word	0x00190019
 8002274:	00190019 	.word	0x00190019
 8002278:	00190019 	.word	0x00190019
 800227c:	00190019 	.word	0x00190019
 8002280:	00190019 	.word	0x00190019
 8002284:	00ff0019 	.word	0x00ff0019
 8002288:	00e90019 	.word	0x00e90019
 800228c:	00de0019 	.word	0x00de0019
 8002290:	68e3      	ldr	r3, [r4, #12]
 8002292:	3302      	adds	r3, #2
 8002294:	60e3      	str	r3, [r4, #12]
 8002296:	2000      	movs	r0, #0
 8002298:	b002      	add	sp, #8
 800229a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800229e:	2a72      	cmp	r2, #114	; 0x72
 80022a0:	d1f9      	bne.n	8002296 <d_special_name+0x6e>
 80022a2:	f7fe f815 	bl	80002d0 <d_number>
 80022a6:	2801      	cmp	r0, #1
 80022a8:	ddf5      	ble.n	8002296 <d_special_name+0x6e>
 80022aa:	68e3      	ldr	r3, [r4, #12]
 80022ac:	781a      	ldrb	r2, [r3, #0]
 80022ae:	2a00      	cmp	r2, #0
 80022b0:	d0f1      	beq.n	8002296 <d_special_name+0x6e>
 80022b2:	1c5e      	adds	r6, r3, #1
 80022b4:	60e6      	str	r6, [r4, #12]
 80022b6:	781b      	ldrb	r3, [r3, #0]
 80022b8:	2b5f      	cmp	r3, #95	; 0x5f
 80022ba:	d1ec      	bne.n	8002296 <d_special_name+0x6e>
 80022bc:	2200      	movs	r2, #0
 80022be:	1e45      	subs	r5, r0, #1
 80022c0:	4617      	mov	r7, r2
 80022c2:	f04f 0842 	mov.w	r8, #66	; 0x42
 80022c6:	7833      	ldrb	r3, [r6, #0]
 80022c8:	2b00      	cmp	r3, #0
 80022ca:	d0e4      	beq.n	8002296 <d_special_name+0x6e>
 80022cc:	2b24      	cmp	r3, #36	; 0x24
 80022ce:	f040 819f 	bne.w	8002610 <d_special_name+0x3e8>
 80022d2:	7873      	ldrb	r3, [r6, #1]
 80022d4:	2b53      	cmp	r3, #83	; 0x53
 80022d6:	f000 81bf 	beq.w	8002658 <d_special_name+0x430>
 80022da:	2b5f      	cmp	r3, #95	; 0x5f
 80022dc:	f000 81ba 	beq.w	8002654 <d_special_name+0x42c>
 80022e0:	2b24      	cmp	r3, #36	; 0x24
 80022e2:	d1d8      	bne.n	8002296 <d_special_name+0x6e>
 80022e4:	4619      	mov	r1, r3
 80022e6:	e9d4 0305 	ldrd	r0, r3, [r4, #20]
 80022ea:	4298      	cmp	r0, r3
 80022ec:	dad0      	bge.n	8002290 <d_special_name+0x68>
 80022ee:	6926      	ldr	r6, [r4, #16]
 80022f0:	eb00 0c80 	add.w	ip, r0, r0, lsl #2
 80022f4:	eb06 038c 	add.w	r3, r6, ip, lsl #2
 80022f8:	3001      	adds	r0, #1
 80022fa:	e9c3 7701 	strd	r7, r7, [r3, #4]
 80022fe:	6160      	str	r0, [r4, #20]
 8002300:	f806 802c 	strb.w	r8, [r6, ip, lsl #2]
 8002304:	68e6      	ldr	r6, [r4, #12]
 8002306:	60d9      	str	r1, [r3, #12]
 8002308:	3d02      	subs	r5, #2
 800230a:	3602      	adds	r6, #2
 800230c:	60e6      	str	r6, [r4, #12]
 800230e:	2a00      	cmp	r2, #0
 8002310:	f000 819e 	beq.w	8002650 <d_special_name+0x428>
 8002314:	2141      	movs	r1, #65	; 0x41
 8002316:	4620      	mov	r0, r4
 8002318:	f7fd ff62 	bl	80001e0 <d_make_comp>
 800231c:	4602      	mov	r2, r0
 800231e:	2800      	cmp	r0, #0
 8002320:	d0b9      	beq.n	8002296 <d_special_name+0x6e>
 8002322:	2d00      	cmp	r5, #0
 8002324:	dccf      	bgt.n	80022c6 <d_special_name+0x9e>
 8002326:	2300      	movs	r3, #0
 8002328:	2140      	movs	r1, #64	; 0x40
 800232a:	e07e      	b.n	800242a <d_special_name+0x202>
 800232c:	1c5a      	adds	r2, r3, #1
 800232e:	60c2      	str	r2, [r0, #12]
 8002330:	785a      	ldrb	r2, [r3, #1]
 8002332:	2a00      	cmp	r2, #0
 8002334:	d0af      	beq.n	8002296 <d_special_name+0x6e>
 8002336:	1c9a      	adds	r2, r3, #2
 8002338:	60c2      	str	r2, [r0, #12]
 800233a:	785b      	ldrb	r3, [r3, #1]
 800233c:	3b41      	subs	r3, #65	; 0x41
 800233e:	2b35      	cmp	r3, #53	; 0x35
 8002340:	d8a9      	bhi.n	8002296 <d_special_name+0x6e>
 8002342:	a201      	add	r2, pc, #4	; (adr r2, 8002348 <d_special_name+0x120>)
 8002344:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002348:	0800250f 	.word	0x0800250f
 800234c:	08002297 	.word	0x08002297
 8002350:	080024db 	.word	0x080024db
 8002354:	08002297 	.word	0x08002297
 8002358:	08002297 	.word	0x08002297
 800235c:	0800251b 	.word	0x0800251b
 8002360:	08002297 	.word	0x08002297
 8002364:	0800257f 	.word	0x0800257f
 8002368:	080025f9 	.word	0x080025f9
 800236c:	080025ed 	.word	0x080025ed
 8002370:	08002297 	.word	0x08002297
 8002374:	08002297 	.word	0x08002297
 8002378:	08002297 	.word	0x08002297
 800237c:	08002297 	.word	0x08002297
 8002380:	08002297 	.word	0x08002297
 8002384:	08002297 	.word	0x08002297
 8002388:	08002297 	.word	0x08002297
 800238c:	08002297 	.word	0x08002297
 8002390:	08002605 	.word	0x08002605
 8002394:	0800258b 	.word	0x0800258b
 8002398:	08002297 	.word	0x08002297
 800239c:	0800259b 	.word	0x0800259b
 80023a0:	080025ab 	.word	0x080025ab
 80023a4:	08002297 	.word	0x08002297
 80023a8:	08002297 	.word	0x08002297
 80023ac:	08002297 	.word	0x08002297
 80023b0:	08002297 	.word	0x08002297
 80023b4:	08002297 	.word	0x08002297
 80023b8:	08002297 	.word	0x08002297
 80023bc:	08002297 	.word	0x08002297
 80023c0:	08002297 	.word	0x08002297
 80023c4:	08002297 	.word	0x08002297
 80023c8:	08002297 	.word	0x08002297
 80023cc:	08002297 	.word	0x08002297
 80023d0:	080025b7 	.word	0x080025b7
 80023d4:	08002297 	.word	0x08002297
 80023d8:	08002297 	.word	0x08002297
 80023dc:	08002297 	.word	0x08002297
 80023e0:	08002297 	.word	0x08002297
 80023e4:	08002527 	.word	0x08002527
 80023e8:	08002297 	.word	0x08002297
 80023ec:	08002297 	.word	0x08002297
 80023f0:	08002297 	.word	0x08002297
 80023f4:	08002297 	.word	0x08002297
 80023f8:	08002297 	.word	0x08002297
 80023fc:	08002297 	.word	0x08002297
 8002400:	08002297 	.word	0x08002297
 8002404:	08002297 	.word	0x08002297
 8002408:	08002297 	.word	0x08002297
 800240c:	08002297 	.word	0x08002297
 8002410:	08002297 	.word	0x08002297
 8002414:	08002297 	.word	0x08002297
 8002418:	08002297 	.word	0x08002297
 800241c:	08002553 	.word	0x08002553
 8002420:	f000 f93c 	bl	800269c <d_name>
 8002424:	2300      	movs	r3, #0
 8002426:	4602      	mov	r2, r0
 8002428:	2113      	movs	r1, #19
 800242a:	4620      	mov	r0, r4
 800242c:	b002      	add	sp, #8
 800242e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002432:	f7fd bed5 	b.w	80001e0 <d_make_comp>
 8002436:	789a      	ldrb	r2, [r3, #2]
 8002438:	2a00      	cmp	r2, #0
 800243a:	f000 810f 	beq.w	800265c <d_special_name+0x434>
 800243e:	1cda      	adds	r2, r3, #3
 8002440:	60c2      	str	r2, [r0, #12]
 8002442:	789a      	ldrb	r2, [r3, #2]
 8002444:	78db      	ldrb	r3, [r3, #3]
 8002446:	2a6e      	cmp	r2, #110	; 0x6e
 8002448:	d03a      	beq.n	80024c0 <d_special_name+0x298>
 800244a:	2b47      	cmp	r3, #71	; 0x47
 800244c:	d002      	beq.n	8002454 <d_special_name+0x22c>
 800244e:	2b54      	cmp	r3, #84	; 0x54
 8002450:	f040 8104 	bne.w	800265c <d_special_name+0x434>
 8002454:	4620      	mov	r0, r4
 8002456:	f7ff fee7 	bl	8002228 <d_special_name>
 800245a:	4602      	mov	r2, r0
 800245c:	2300      	movs	r3, #0
 800245e:	214a      	movs	r1, #74	; 0x4a
 8002460:	e7e3      	b.n	800242a <d_special_name+0x202>
 8002462:	f000 f91b 	bl	800269c <d_name>
 8002466:	e9d4 1305 	ldrd	r1, r3, [r4, #20]
 800246a:	4299      	cmp	r1, r3
 800246c:	4602      	mov	r2, r0
 800246e:	f280 80ff 	bge.w	8002670 <d_special_name+0x448>
 8002472:	9001      	str	r0, [sp, #4]
 8002474:	6920      	ldr	r0, [r4, #16]
 8002476:	eb01 0681 	add.w	r6, r1, r1, lsl #2
 800247a:	eb00 0586 	add.w	r5, r0, r6, lsl #2
 800247e:	2300      	movs	r3, #0
 8002480:	e9c5 3301 	strd	r3, r3, [r5, #4]
 8002484:	3101      	adds	r1, #1
 8002486:	2343      	movs	r3, #67	; 0x43
 8002488:	6161      	str	r1, [r4, #20]
 800248a:	f800 3026 	strb.w	r3, [r0, r6, lsl #2]
 800248e:	4620      	mov	r0, r4
 8002490:	f7fd ff1e 	bl	80002d0 <d_number>
 8002494:	9a01      	ldr	r2, [sp, #4]
 8002496:	60e8      	str	r0, [r5, #12]
 8002498:	462b      	mov	r3, r5
 800249a:	2116      	movs	r1, #22
 800249c:	e7c5      	b.n	800242a <d_special_name+0x202>
 800249e:	789b      	ldrb	r3, [r3, #2]
 80024a0:	2b47      	cmp	r3, #71	; 0x47
 80024a2:	d001      	beq.n	80024a8 <d_special_name+0x280>
 80024a4:	2b54      	cmp	r3, #84	; 0x54
 80024a6:	d106      	bne.n	80024b6 <d_special_name+0x28e>
 80024a8:	4620      	mov	r0, r4
 80024aa:	f7ff febd 	bl	8002228 <d_special_name>
 80024ae:	4602      	mov	r2, r0
 80024b0:	2300      	movs	r3, #0
 80024b2:	2117      	movs	r1, #23
 80024b4:	e7b9      	b.n	800242a <d_special_name+0x202>
 80024b6:	2100      	movs	r1, #0
 80024b8:	f000 fa3e 	bl	8002938 <d_encoding.part.0>
 80024bc:	4602      	mov	r2, r0
 80024be:	e7f7      	b.n	80024b0 <d_special_name+0x288>
 80024c0:	2b47      	cmp	r3, #71	; 0x47
 80024c2:	f000 80e1 	beq.w	8002688 <d_special_name+0x460>
 80024c6:	2b54      	cmp	r3, #84	; 0x54
 80024c8:	f000 80de 	beq.w	8002688 <d_special_name+0x460>
 80024cc:	2100      	movs	r1, #0
 80024ce:	f000 fa33 	bl	8002938 <d_encoding.part.0>
 80024d2:	4602      	mov	r2, r0
 80024d4:	2300      	movs	r3, #0
 80024d6:	214b      	movs	r1, #75	; 0x4b
 80024d8:	e7a7      	b.n	800242a <d_special_name+0x202>
 80024da:	f7fe fad1 	bl	8000a80 <d_type>
 80024de:	4605      	mov	r5, r0
 80024e0:	4620      	mov	r0, r4
 80024e2:	f7fd fef5 	bl	80002d0 <d_number>
 80024e6:	2800      	cmp	r0, #0
 80024e8:	f6ff aed5 	blt.w	8002296 <d_special_name+0x6e>
 80024ec:	68e3      	ldr	r3, [r4, #12]
 80024ee:	781a      	ldrb	r2, [r3, #0]
 80024f0:	2a5f      	cmp	r2, #95	; 0x5f
 80024f2:	f47f aed0 	bne.w	8002296 <d_special_name+0x6e>
 80024f6:	3301      	adds	r3, #1
 80024f8:	60e3      	str	r3, [r4, #12]
 80024fa:	4620      	mov	r0, r4
 80024fc:	f7fe fac0 	bl	8000a80 <d_type>
 8002500:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8002502:	3105      	adds	r1, #5
 8002504:	62e1      	str	r1, [r4, #44]	; 0x2c
 8002506:	4602      	mov	r2, r0
 8002508:	462b      	mov	r3, r5
 800250a:	210b      	movs	r1, #11
 800250c:	e78d      	b.n	800242a <d_special_name+0x202>
 800250e:	f7ff fa3d 	bl	800198c <d_template_arg>
 8002512:	2300      	movs	r3, #0
 8002514:	4602      	mov	r2, r0
 8002516:	2130      	movs	r1, #48	; 0x30
 8002518:	e787      	b.n	800242a <d_special_name+0x202>
 800251a:	f7fe fab1 	bl	8000a80 <d_type>
 800251e:	2300      	movs	r3, #0
 8002520:	4602      	mov	r2, r0
 8002522:	210e      	movs	r1, #14
 8002524:	e781      	b.n	800242a <d_special_name+0x202>
 8002526:	2168      	movs	r1, #104	; 0x68
 8002528:	f7fd ff0c 	bl	8000344 <d_call_offset>
 800252c:	2800      	cmp	r0, #0
 800252e:	f43f aeb2 	beq.w	8002296 <d_special_name+0x6e>
 8002532:	68e3      	ldr	r3, [r4, #12]
 8002534:	781b      	ldrb	r3, [r3, #0]
 8002536:	2b47      	cmp	r3, #71	; 0x47
 8002538:	f000 80a1 	beq.w	800267e <d_special_name+0x456>
 800253c:	2b54      	cmp	r3, #84	; 0x54
 800253e:	f000 809e 	beq.w	800267e <d_special_name+0x456>
 8002542:	2100      	movs	r1, #0
 8002544:	4620      	mov	r0, r4
 8002546:	f000 f9f7 	bl	8002938 <d_encoding.part.0>
 800254a:	4602      	mov	r2, r0
 800254c:	2300      	movs	r3, #0
 800254e:	210f      	movs	r1, #15
 8002550:	e76b      	b.n	800242a <d_special_name+0x202>
 8002552:	2176      	movs	r1, #118	; 0x76
 8002554:	f7fd fef6 	bl	8000344 <d_call_offset>
 8002558:	2800      	cmp	r0, #0
 800255a:	f43f ae9c 	beq.w	8002296 <d_special_name+0x6e>
 800255e:	68e3      	ldr	r3, [r4, #12]
 8002560:	781b      	ldrb	r3, [r3, #0]
 8002562:	2b47      	cmp	r3, #71	; 0x47
 8002564:	f000 8086 	beq.w	8002674 <d_special_name+0x44c>
 8002568:	2b54      	cmp	r3, #84	; 0x54
 800256a:	f000 8083 	beq.w	8002674 <d_special_name+0x44c>
 800256e:	2100      	movs	r1, #0
 8002570:	4620      	mov	r0, r4
 8002572:	f000 f9e1 	bl	8002938 <d_encoding.part.0>
 8002576:	4602      	mov	r2, r0
 8002578:	2300      	movs	r3, #0
 800257a:	2110      	movs	r1, #16
 800257c:	e755      	b.n	800242a <d_special_name+0x202>
 800257e:	f000 f88d 	bl	800269c <d_name>
 8002582:	2300      	movs	r3, #0
 8002584:	4602      	mov	r2, r0
 8002586:	2114      	movs	r1, #20
 8002588:	e74f      	b.n	800242a <d_special_name+0x202>
 800258a:	310a      	adds	r1, #10
 800258c:	62c1      	str	r1, [r0, #44]	; 0x2c
 800258e:	f7fe fa77 	bl	8000a80 <d_type>
 8002592:	2300      	movs	r3, #0
 8002594:	4602      	mov	r2, r0
 8002596:	210a      	movs	r1, #10
 8002598:	e747      	b.n	800242a <d_special_name+0x202>
 800259a:	310f      	adds	r1, #15
 800259c:	62c1      	str	r1, [r0, #44]	; 0x2c
 800259e:	f7fe fa6f 	bl	8000a80 <d_type>
 80025a2:	2300      	movs	r3, #0
 80025a4:	4602      	mov	r2, r0
 80025a6:	2109      	movs	r1, #9
 80025a8:	e73f      	b.n	800242a <d_special_name+0x202>
 80025aa:	f000 f877 	bl	800269c <d_name>
 80025ae:	2300      	movs	r3, #0
 80025b0:	4602      	mov	r2, r0
 80025b2:	2115      	movs	r1, #21
 80025b4:	e739      	b.n	800242a <d_special_name+0x202>
 80025b6:	2100      	movs	r1, #0
 80025b8:	f7fd fec4 	bl	8000344 <d_call_offset>
 80025bc:	2800      	cmp	r0, #0
 80025be:	f43f ae6a 	beq.w	8002296 <d_special_name+0x6e>
 80025c2:	2100      	movs	r1, #0
 80025c4:	4620      	mov	r0, r4
 80025c6:	f7fd febd 	bl	8000344 <d_call_offset>
 80025ca:	2800      	cmp	r0, #0
 80025cc:	f43f ae63 	beq.w	8002296 <d_special_name+0x6e>
 80025d0:	68e3      	ldr	r3, [r4, #12]
 80025d2:	781b      	ldrb	r3, [r3, #0]
 80025d4:	2b47      	cmp	r3, #71	; 0x47
 80025d6:	d05c      	beq.n	8002692 <d_special_name+0x46a>
 80025d8:	2b54      	cmp	r3, #84	; 0x54
 80025da:	d05a      	beq.n	8002692 <d_special_name+0x46a>
 80025dc:	2100      	movs	r1, #0
 80025de:	4620      	mov	r0, r4
 80025e0:	f000 f9aa 	bl	8002938 <d_encoding.part.0>
 80025e4:	4602      	mov	r2, r0
 80025e6:	2300      	movs	r3, #0
 80025e8:	2111      	movs	r1, #17
 80025ea:	e71e      	b.n	800242a <d_special_name+0x202>
 80025ec:	f7fe fa48 	bl	8000a80 <d_type>
 80025f0:	2300      	movs	r3, #0
 80025f2:	4602      	mov	r2, r0
 80025f4:	2112      	movs	r1, #18
 80025f6:	e718      	b.n	800242a <d_special_name+0x202>
 80025f8:	f7fe fa42 	bl	8000a80 <d_type>
 80025fc:	2300      	movs	r3, #0
 80025fe:	4602      	mov	r2, r0
 8002600:	210c      	movs	r1, #12
 8002602:	e712      	b.n	800242a <d_special_name+0x202>
 8002604:	f7fe fa3c 	bl	8000a80 <d_type>
 8002608:	2300      	movs	r3, #0
 800260a:	4602      	mov	r2, r0
 800260c:	210d      	movs	r1, #13
 800260e:	e70c      	b.n	800242a <d_special_name+0x202>
 8002610:	46b4      	mov	ip, r6
 8002612:	2100      	movs	r1, #0
 8002614:	e004      	b.n	8002620 <d_special_name+0x3f8>
 8002616:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
 800261a:	b123      	cbz	r3, 8002626 <d_special_name+0x3fe>
 800261c:	2b24      	cmp	r3, #36	; 0x24
 800261e:	d002      	beq.n	8002626 <d_special_name+0x3fe>
 8002620:	3101      	adds	r1, #1
 8002622:	42a9      	cmp	r1, r5
 8002624:	dbf7      	blt.n	8002616 <d_special_name+0x3ee>
 8002626:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800262a:	4283      	cmp	r3, r0
 800262c:	da1c      	bge.n	8002668 <d_special_name+0x440>
 800262e:	6920      	ldr	r0, [r4, #16]
 8002630:	eb03 0c83 	add.w	ip, r3, r3, lsl #2
 8002634:	3301      	adds	r3, #1
 8002636:	6163      	str	r3, [r4, #20]
 8002638:	eb00 038c 	add.w	r3, r0, ip, lsl #2
 800263c:	e9c3 7701 	strd	r7, r7, [r3, #4]
 8002640:	f800 702c 	strb.w	r7, [r0, ip, lsl #2]
 8002644:	e9c3 6103 	strd	r6, r1, [r3, #12]
 8002648:	68e6      	ldr	r6, [r4, #12]
 800264a:	1a6d      	subs	r5, r5, r1
 800264c:	440e      	add	r6, r1
 800264e:	e65d      	b.n	800230c <d_special_name+0xe4>
 8002650:	461a      	mov	r2, r3
 8002652:	e666      	b.n	8002322 <d_special_name+0xfa>
 8002654:	212e      	movs	r1, #46	; 0x2e
 8002656:	e646      	b.n	80022e6 <d_special_name+0xbe>
 8002658:	212f      	movs	r1, #47	; 0x2f
 800265a:	e644      	b.n	80022e6 <d_special_name+0xbe>
 800265c:	2100      	movs	r1, #0
 800265e:	4620      	mov	r0, r4
 8002660:	f000 f96a 	bl	8002938 <d_encoding.part.0>
 8002664:	4602      	mov	r2, r0
 8002666:	e6f9      	b.n	800245c <d_special_name+0x234>
 8002668:	68e3      	ldr	r3, [r4, #12]
 800266a:	440b      	add	r3, r1
 800266c:	60e3      	str	r3, [r4, #12]
 800266e:	e612      	b.n	8002296 <d_special_name+0x6e>
 8002670:	2500      	movs	r5, #0
 8002672:	e711      	b.n	8002498 <d_special_name+0x270>
 8002674:	4620      	mov	r0, r4
 8002676:	f7ff fdd7 	bl	8002228 <d_special_name>
 800267a:	4602      	mov	r2, r0
 800267c:	e77c      	b.n	8002578 <d_special_name+0x350>
 800267e:	4620      	mov	r0, r4
 8002680:	f7ff fdd2 	bl	8002228 <d_special_name>
 8002684:	4602      	mov	r2, r0
 8002686:	e761      	b.n	800254c <d_special_name+0x324>
 8002688:	4620      	mov	r0, r4
 800268a:	f7ff fdcd 	bl	8002228 <d_special_name>
 800268e:	4602      	mov	r2, r0
 8002690:	e720      	b.n	80024d4 <d_special_name+0x2ac>
 8002692:	4620      	mov	r0, r4
 8002694:	f7ff fdc8 	bl	8002228 <d_special_name>
 8002698:	4602      	mov	r2, r0
 800269a:	e7a4      	b.n	80025e6 <d_special_name+0x3be>

0800269c <d_name>:
 800269c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800269e:	68c2      	ldr	r2, [r0, #12]
 80026a0:	7813      	ldrb	r3, [r2, #0]
 80026a2:	3b4e      	subs	r3, #78	; 0x4e
 80026a4:	b083      	sub	sp, #12
 80026a6:	4604      	mov	r4, r0
 80026a8:	2b0c      	cmp	r3, #12
 80026aa:	d808      	bhi.n	80026be <d_name+0x22>
 80026ac:	e8df f003 	tbb	[pc, r3]
 80026b0:	07070731 	.word	0x07070731
 80026b4:	12071707 	.word	0x12071707
 80026b8:	07070707 	.word	0x07070707
 80026bc:	55          	.byte	0x55
 80026bd:	00          	.byte	0x00
 80026be:	f7fe ff35 	bl	800152c <d_unqualified_name>
 80026c2:	68e3      	ldr	r3, [r4, #12]
 80026c4:	781a      	ldrb	r2, [r3, #0]
 80026c6:	2a49      	cmp	r2, #73	; 0x49
 80026c8:	4605      	mov	r5, r0
 80026ca:	f000 80d2 	beq.w	8002872 <d_name+0x1d6>
 80026ce:	4628      	mov	r0, r5
 80026d0:	b003      	add	sp, #12
 80026d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80026d4:	b003      	add	sp, #12
 80026d6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80026da:	f7fe bf27 	b.w	800152c <d_unqualified_name>
 80026de:	7853      	ldrb	r3, [r2, #1]
 80026e0:	2b74      	cmp	r3, #116	; 0x74
 80026e2:	f000 808e 	beq.w	8002802 <d_name+0x166>
 80026e6:	2100      	movs	r1, #0
 80026e8:	f7fe f900 	bl	80008ec <d_substitution>
 80026ec:	68e3      	ldr	r3, [r4, #12]
 80026ee:	781a      	ldrb	r2, [r3, #0]
 80026f0:	2a49      	cmp	r2, #73	; 0x49
 80026f2:	4605      	mov	r5, r0
 80026f4:	d1eb      	bne.n	80026ce <d_name+0x32>
 80026f6:	3301      	adds	r3, #1
 80026f8:	60e3      	str	r3, [r4, #12]
 80026fa:	4620      	mov	r0, r4
 80026fc:	f7ff f970 	bl	80019e0 <d_template_args_1>
 8002700:	4603      	mov	r3, r0
 8002702:	462a      	mov	r2, r5
 8002704:	2104      	movs	r1, #4
 8002706:	4620      	mov	r0, r4
 8002708:	b003      	add	sp, #12
 800270a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800270e:	f7fd bd67 	b.w	80001e0 <d_make_comp>
 8002712:	3201      	adds	r2, #1
 8002714:	60c2      	str	r2, [r0, #12]
 8002716:	a901      	add	r1, sp, #4
 8002718:	2201      	movs	r2, #1
 800271a:	f7ff fcdb 	bl	80020d4 <d_cv_qualifiers>
 800271e:	4605      	mov	r5, r0
 8002720:	2800      	cmp	r0, #0
 8002722:	f000 80b7 	beq.w	8002894 <d_name+0x1f8>
 8002726:	2100      	movs	r1, #0
 8002728:	4620      	mov	r0, r4
 800272a:	f7fd fe2f 	bl	800038c <d_ref_qualifier>
 800272e:	2101      	movs	r1, #1
 8002730:	4606      	mov	r6, r0
 8002732:	4620      	mov	r0, r4
 8002734:	f7ff f986 	bl	8001a44 <d_prefix>
 8002738:	6028      	str	r0, [r5, #0]
 800273a:	2800      	cmp	r0, #0
 800273c:	f000 80aa 	beq.w	8002894 <d_name+0x1f8>
 8002740:	b116      	cbz	r6, 8002748 <d_name+0xac>
 8002742:	9b01      	ldr	r3, [sp, #4]
 8002744:	60f3      	str	r3, [r6, #12]
 8002746:	9601      	str	r6, [sp, #4]
 8002748:	68e3      	ldr	r3, [r4, #12]
 800274a:	781a      	ldrb	r2, [r3, #0]
 800274c:	2a45      	cmp	r2, #69	; 0x45
 800274e:	f040 80a1 	bne.w	8002894 <d_name+0x1f8>
 8002752:	3301      	adds	r3, #1
 8002754:	9d01      	ldr	r5, [sp, #4]
 8002756:	60e3      	str	r3, [r4, #12]
 8002758:	e7b9      	b.n	80026ce <d_name+0x32>
 800275a:	1c53      	adds	r3, r2, #1
 800275c:	60c3      	str	r3, [r0, #12]
 800275e:	7853      	ldrb	r3, [r2, #1]
 8002760:	2b47      	cmp	r3, #71	; 0x47
 8002762:	d002      	beq.n	800276a <d_name+0xce>
 8002764:	2b54      	cmp	r3, #84	; 0x54
 8002766:	f040 8099 	bne.w	800289c <d_name+0x200>
 800276a:	4620      	mov	r0, r4
 800276c:	f7ff fd5c 	bl	8002228 <d_special_name>
 8002770:	4605      	mov	r5, r0
 8002772:	2d00      	cmp	r5, #0
 8002774:	f000 808e 	beq.w	8002894 <d_name+0x1f8>
 8002778:	68e3      	ldr	r3, [r4, #12]
 800277a:	781a      	ldrb	r2, [r3, #0]
 800277c:	2a45      	cmp	r2, #69	; 0x45
 800277e:	f040 8089 	bne.w	8002894 <d_name+0x1f8>
 8002782:	1c5a      	adds	r2, r3, #1
 8002784:	60e2      	str	r2, [r4, #12]
 8002786:	785a      	ldrb	r2, [r3, #1]
 8002788:	2a73      	cmp	r2, #115	; 0x73
 800278a:	f000 80ad 	beq.w	80028e8 <d_name+0x24c>
 800278e:	2a64      	cmp	r2, #100	; 0x64
 8002790:	f000 8089 	beq.w	80028a6 <d_name+0x20a>
 8002794:	4620      	mov	r0, r4
 8002796:	f7ff ff81 	bl	800269c <d_name>
 800279a:	4603      	mov	r3, r0
 800279c:	b328      	cbz	r0, 80027ea <d_name+0x14e>
 800279e:	7802      	ldrb	r2, [r0, #0]
 80027a0:	2a47      	cmp	r2, #71	; 0x47
 80027a2:	d022      	beq.n	80027ea <d_name+0x14e>
 80027a4:	2a49      	cmp	r2, #73	; 0x49
 80027a6:	d020      	beq.n	80027ea <d_name+0x14e>
 80027a8:	461f      	mov	r7, r3
 80027aa:	f04f 36ff 	mov.w	r6, #4294967295
 80027ae:	4620      	mov	r0, r4
 80027b0:	f7fd fe7e 	bl	80004b0 <d_discriminator>
 80027b4:	2800      	cmp	r0, #0
 80027b6:	d06d      	beq.n	8002894 <d_name+0x1f8>
 80027b8:	1c73      	adds	r3, r6, #1
 80027ba:	bf08      	it	eq
 80027bc:	463b      	moveq	r3, r7
 80027be:	d014      	beq.n	80027ea <d_name+0x14e>
 80027c0:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 80027c4:	429a      	cmp	r2, r3
 80027c6:	f280 80b0 	bge.w	800292a <d_name+0x28e>
 80027ca:	6921      	ldr	r1, [r4, #16]
 80027cc:	eb02 0082 	add.w	r0, r2, r2, lsl #2
 80027d0:	eb01 0380 	add.w	r3, r1, r0, lsl #2
 80027d4:	3201      	adds	r2, #1
 80027d6:	f04f 0c00 	mov.w	ip, #0
 80027da:	e9c3 cc01 	strd	ip, ip, [r3, #4]
 80027de:	6162      	str	r2, [r4, #20]
 80027e0:	2248      	movs	r2, #72	; 0x48
 80027e2:	f801 2020 	strb.w	r2, [r1, r0, lsl #2]
 80027e6:	e9c3 7603 	strd	r7, r6, [r3, #12]
 80027ea:	782a      	ldrb	r2, [r5, #0]
 80027ec:	2a03      	cmp	r2, #3
 80027ee:	d105      	bne.n	80027fc <d_name+0x160>
 80027f0:	692a      	ldr	r2, [r5, #16]
 80027f2:	7811      	ldrb	r1, [r2, #0]
 80027f4:	2929      	cmp	r1, #41	; 0x29
 80027f6:	bf04      	itt	eq
 80027f8:	2100      	moveq	r1, #0
 80027fa:	60d1      	streq	r1, [r2, #12]
 80027fc:	462a      	mov	r2, r5
 80027fe:	2102      	movs	r1, #2
 8002800:	e781      	b.n	8002706 <d_name+0x6a>
 8002802:	e9d0 3105 	ldrd	r3, r1, [r0, #20]
 8002806:	3202      	adds	r2, #2
 8002808:	428b      	cmp	r3, r1
 800280a:	60c2      	str	r2, [r0, #12]
 800280c:	f280 8088 	bge.w	8002920 <d_name+0x284>
 8002810:	6902      	ldr	r2, [r0, #16]
 8002812:	eb03 0583 	add.w	r5, r3, r3, lsl #2
 8002816:	00a9      	lsls	r1, r5, #2
 8002818:	3301      	adds	r3, #1
 800281a:	6143      	str	r3, [r0, #20]
 800281c:	eb02 0585 	add.w	r5, r2, r5, lsl #2
 8002820:	2300      	movs	r3, #0
 8002822:	e9c5 3301 	strd	r3, r3, [r5, #4]
 8002826:	5453      	strb	r3, [r2, r1]
 8002828:	4a41      	ldr	r2, [pc, #260]	; (8002930 <d_name+0x294>)
 800282a:	2303      	movs	r3, #3
 800282c:	e9c5 2303 	strd	r2, r3, [r5, #12]
 8002830:	4620      	mov	r0, r4
 8002832:	f7fe fe7b 	bl	800152c <d_unqualified_name>
 8002836:	462a      	mov	r2, r5
 8002838:	4603      	mov	r3, r0
 800283a:	2101      	movs	r1, #1
 800283c:	4620      	mov	r0, r4
 800283e:	f7fd fccf 	bl	80001e0 <d_make_comp>
 8002842:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8002844:	68e3      	ldr	r3, [r4, #12]
 8002846:	3203      	adds	r2, #3
 8002848:	62e2      	str	r2, [r4, #44]	; 0x2c
 800284a:	781a      	ldrb	r2, [r3, #0]
 800284c:	2a49      	cmp	r2, #73	; 0x49
 800284e:	4605      	mov	r5, r0
 8002850:	f47f af3d 	bne.w	80026ce <d_name+0x32>
 8002854:	b1f0      	cbz	r0, 8002894 <d_name+0x1f8>
 8002856:	e9d4 2108 	ldrd	r2, r1, [r4, #32]
 800285a:	428a      	cmp	r2, r1
 800285c:	da1a      	bge.n	8002894 <d_name+0x1f8>
 800285e:	69e1      	ldr	r1, [r4, #28]
 8002860:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 8002864:	3201      	adds	r2, #1
 8002866:	6222      	str	r2, [r4, #32]
 8002868:	781a      	ldrb	r2, [r3, #0]
 800286a:	3a49      	subs	r2, #73	; 0x49
 800286c:	2a01      	cmp	r2, #1
 800286e:	d80f      	bhi.n	8002890 <d_name+0x1f4>
 8002870:	e741      	b.n	80026f6 <d_name+0x5a>
 8002872:	b178      	cbz	r0, 8002894 <d_name+0x1f8>
 8002874:	e9d4 2108 	ldrd	r2, r1, [r4, #32]
 8002878:	428a      	cmp	r2, r1
 800287a:	da0b      	bge.n	8002894 <d_name+0x1f8>
 800287c:	69e1      	ldr	r1, [r4, #28]
 800287e:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 8002882:	3201      	adds	r2, #1
 8002884:	6222      	str	r2, [r4, #32]
 8002886:	781a      	ldrb	r2, [r3, #0]
 8002888:	3a49      	subs	r2, #73	; 0x49
 800288a:	2a01      	cmp	r2, #1
 800288c:	f67f af33 	bls.w	80026f6 <d_name+0x5a>
 8002890:	2300      	movs	r3, #0
 8002892:	e736      	b.n	8002702 <d_name+0x66>
 8002894:	2500      	movs	r5, #0
 8002896:	4628      	mov	r0, r5
 8002898:	b003      	add	sp, #12
 800289a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800289c:	2100      	movs	r1, #0
 800289e:	f000 f84b 	bl	8002938 <d_encoding.part.0>
 80028a2:	4605      	mov	r5, r0
 80028a4:	e765      	b.n	8002772 <d_name+0xd6>
 80028a6:	1c9a      	adds	r2, r3, #2
 80028a8:	60e2      	str	r2, [r4, #12]
 80028aa:	789a      	ldrb	r2, [r3, #2]
 80028ac:	2a5f      	cmp	r2, #95	; 0x5f
 80028ae:	d039      	beq.n	8002924 <d_name+0x288>
 80028b0:	2a6e      	cmp	r2, #110	; 0x6e
 80028b2:	d0ef      	beq.n	8002894 <d_name+0x1f8>
 80028b4:	4620      	mov	r0, r4
 80028b6:	f7fd fd0b 	bl	80002d0 <d_number>
 80028ba:	1c46      	adds	r6, r0, #1
 80028bc:	d4ea      	bmi.n	8002894 <d_name+0x1f8>
 80028be:	68e3      	ldr	r3, [r4, #12]
 80028c0:	781a      	ldrb	r2, [r3, #0]
 80028c2:	2a5f      	cmp	r2, #95	; 0x5f
 80028c4:	d1e6      	bne.n	8002894 <d_name+0x1f8>
 80028c6:	3301      	adds	r3, #1
 80028c8:	60e3      	str	r3, [r4, #12]
 80028ca:	4620      	mov	r0, r4
 80028cc:	f7ff fee6 	bl	800269c <d_name>
 80028d0:	4607      	mov	r7, r0
 80028d2:	2800      	cmp	r0, #0
 80028d4:	f43f af74 	beq.w	80027c0 <d_name+0x124>
 80028d8:	783b      	ldrb	r3, [r7, #0]
 80028da:	2b47      	cmp	r3, #71	; 0x47
 80028dc:	f43f af70 	beq.w	80027c0 <d_name+0x124>
 80028e0:	2b49      	cmp	r3, #73	; 0x49
 80028e2:	f43f af6d 	beq.w	80027c0 <d_name+0x124>
 80028e6:	e762      	b.n	80027ae <d_name+0x112>
 80028e8:	3302      	adds	r3, #2
 80028ea:	60e3      	str	r3, [r4, #12]
 80028ec:	4620      	mov	r0, r4
 80028ee:	f7fd fddf 	bl	80004b0 <d_discriminator>
 80028f2:	2800      	cmp	r0, #0
 80028f4:	d0ce      	beq.n	8002894 <d_name+0x1f8>
 80028f6:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 80028fa:	429a      	cmp	r2, r3
 80028fc:	da15      	bge.n	800292a <d_name+0x28e>
 80028fe:	6921      	ldr	r1, [r4, #16]
 8002900:	eb02 0382 	add.w	r3, r2, r2, lsl #2
 8002904:	0098      	lsls	r0, r3, #2
 8002906:	3201      	adds	r2, #1
 8002908:	6162      	str	r2, [r4, #20]
 800290a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800290e:	2200      	movs	r2, #0
 8002910:	e9c3 2201 	strd	r2, r2, [r3, #4]
 8002914:	540a      	strb	r2, [r1, r0]
 8002916:	4907      	ldr	r1, [pc, #28]	; (8002934 <d_name+0x298>)
 8002918:	220e      	movs	r2, #14
 800291a:	e9c3 1203 	strd	r1, r2, [r3, #12]
 800291e:	e764      	b.n	80027ea <d_name+0x14e>
 8002920:	2500      	movs	r5, #0
 8002922:	e785      	b.n	8002830 <d_name+0x194>
 8002924:	3303      	adds	r3, #3
 8002926:	2600      	movs	r6, #0
 8002928:	e7ce      	b.n	80028c8 <d_name+0x22c>
 800292a:	2300      	movs	r3, #0
 800292c:	e75d      	b.n	80027ea <d_name+0x14e>
 800292e:	bf00      	nop
 8002930:	0800d4a4 	.word	0x0800d4a4
 8002934:	0800d494 	.word	0x0800d494

08002938 <d_encoding.part.0>:
 8002938:	b570      	push	{r4, r5, r6, lr}
 800293a:	4605      	mov	r5, r0
 800293c:	460e      	mov	r6, r1
 800293e:	f7ff fead 	bl	800269c <d_name>
 8002942:	b300      	cbz	r0, 8002986 <d_encoding.part.0+0x4e>
 8002944:	4604      	mov	r4, r0
 8002946:	b30e      	cbz	r6, 800298c <d_encoding.part.0+0x54>
 8002948:	68ab      	ldr	r3, [r5, #8]
 800294a:	07db      	lsls	r3, r3, #31
 800294c:	d41e      	bmi.n	800298c <d_encoding.part.0+0x54>
 800294e:	7823      	ldrb	r3, [r4, #0]
 8002950:	2b4e      	cmp	r3, #78	; 0x4e
 8002952:	f1a3 011c 	sub.w	r1, r3, #28
 8002956:	f1a3 0250 	sub.w	r2, r3, #80	; 0x50
 800295a:	d03a      	beq.n	80029d2 <d_encoding.part.0+0x9a>
 800295c:	d837      	bhi.n	80029ce <d_encoding.part.0+0x96>
 800295e:	2904      	cmp	r1, #4
 8002960:	d937      	bls.n	80029d2 <d_encoding.part.0+0x9a>
 8002962:	2b02      	cmp	r3, #2
 8002964:	d110      	bne.n	8002988 <d_encoding.part.0+0x50>
 8002966:	6923      	ldr	r3, [r4, #16]
 8002968:	b16b      	cbz	r3, 8002986 <d_encoding.part.0+0x4e>
 800296a:	781a      	ldrb	r2, [r3, #0]
 800296c:	2a4e      	cmp	r2, #78	; 0x4e
 800296e:	f1a2 001c 	sub.w	r0, r2, #28
 8002972:	f1a2 0150 	sub.w	r1, r2, #80	; 0x50
 8002976:	d002      	beq.n	800297e <d_encoding.part.0+0x46>
 8002978:	d83d      	bhi.n	80029f6 <d_encoding.part.0+0xbe>
 800297a:	2804      	cmp	r0, #4
 800297c:	d804      	bhi.n	8002988 <d_encoding.part.0+0x50>
 800297e:	68db      	ldr	r3, [r3, #12]
 8002980:	6123      	str	r3, [r4, #16]
 8002982:	2b00      	cmp	r3, #0
 8002984:	d1f1      	bne.n	800296a <d_encoding.part.0+0x32>
 8002986:	2400      	movs	r4, #0
 8002988:	4620      	mov	r0, r4
 800298a:	bd70      	pop	{r4, r5, r6, pc}
 800298c:	68eb      	ldr	r3, [r5, #12]
 800298e:	781b      	ldrb	r3, [r3, #0]
 8002990:	2b00      	cmp	r3, #0
 8002992:	d0f9      	beq.n	8002988 <d_encoding.part.0+0x50>
 8002994:	2b45      	cmp	r3, #69	; 0x45
 8002996:	d0f7      	beq.n	8002988 <d_encoding.part.0+0x50>
 8002998:	4621      	mov	r1, r4
 800299a:	780b      	ldrb	r3, [r1, #0]
 800299c:	2b04      	cmp	r3, #4
 800299e:	d02d      	beq.n	80029fc <d_encoding.part.0+0xc4>
 80029a0:	d81e      	bhi.n	80029e0 <d_encoding.part.0+0xa8>
 80029a2:	2b02      	cmp	r3, #2
 80029a4:	d11a      	bne.n	80029dc <d_encoding.part.0+0xa4>
 80029a6:	6909      	ldr	r1, [r1, #16]
 80029a8:	2900      	cmp	r1, #0
 80029aa:	d1f6      	bne.n	800299a <d_encoding.part.0+0x62>
 80029ac:	4628      	mov	r0, r5
 80029ae:	f7fe fcdf 	bl	8001370 <d_bare_function_type>
 80029b2:	2800      	cmp	r0, #0
 80029b4:	d0e7      	beq.n	8002986 <d_encoding.part.0+0x4e>
 80029b6:	b916      	cbnz	r6, 80029be <d_encoding.part.0+0x86>
 80029b8:	7823      	ldrb	r3, [r4, #0]
 80029ba:	2b02      	cmp	r3, #2
 80029bc:	d032      	beq.n	8002a24 <d_encoding.part.0+0xec>
 80029be:	4603      	mov	r3, r0
 80029c0:	4622      	mov	r2, r4
 80029c2:	4628      	mov	r0, r5
 80029c4:	2103      	movs	r1, #3
 80029c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80029ca:	f7fd bc09 	b.w	80001e0 <d_make_comp>
 80029ce:	2a01      	cmp	r2, #1
 80029d0:	d8da      	bhi.n	8002988 <d_encoding.part.0+0x50>
 80029d2:	68e4      	ldr	r4, [r4, #12]
 80029d4:	e7bb      	b.n	800294e <d_encoding.part.0+0x16>
 80029d6:	3b1c      	subs	r3, #28
 80029d8:	2b04      	cmp	r3, #4
 80029da:	d908      	bls.n	80029ee <d_encoding.part.0+0xb6>
 80029dc:	2100      	movs	r1, #0
 80029de:	e7e5      	b.n	80029ac <d_encoding.part.0+0x74>
 80029e0:	2b4e      	cmp	r3, #78	; 0x4e
 80029e2:	f1a3 0250 	sub.w	r2, r3, #80	; 0x50
 80029e6:	d002      	beq.n	80029ee <d_encoding.part.0+0xb6>
 80029e8:	d9f5      	bls.n	80029d6 <d_encoding.part.0+0x9e>
 80029ea:	2a01      	cmp	r2, #1
 80029ec:	d8f6      	bhi.n	80029dc <d_encoding.part.0+0xa4>
 80029ee:	68c9      	ldr	r1, [r1, #12]
 80029f0:	2900      	cmp	r1, #0
 80029f2:	d1d2      	bne.n	800299a <d_encoding.part.0+0x62>
 80029f4:	e7da      	b.n	80029ac <d_encoding.part.0+0x74>
 80029f6:	2901      	cmp	r1, #1
 80029f8:	d8c6      	bhi.n	8002988 <d_encoding.part.0+0x50>
 80029fa:	e7c0      	b.n	800297e <d_encoding.part.0+0x46>
 80029fc:	68cb      	ldr	r3, [r1, #12]
 80029fe:	b15b      	cbz	r3, 8002a18 <d_encoding.part.0+0xe0>
 8002a00:	7819      	ldrb	r1, [r3, #0]
 8002a02:	2908      	cmp	r1, #8
 8002a04:	f101 32ff 	add.w	r2, r1, #4294967295
 8002a08:	d808      	bhi.n	8002a1c <d_encoding.part.0+0xe4>
 8002a0a:	2906      	cmp	r1, #6
 8002a0c:	d8e6      	bhi.n	80029dc <d_encoding.part.0+0xa4>
 8002a0e:	2a01      	cmp	r2, #1
 8002a10:	d802      	bhi.n	8002a18 <d_encoding.part.0+0xe0>
 8002a12:	691b      	ldr	r3, [r3, #16]
 8002a14:	2b00      	cmp	r3, #0
 8002a16:	d1f3      	bne.n	8002a00 <d_encoding.part.0+0xc8>
 8002a18:	2101      	movs	r1, #1
 8002a1a:	e7c7      	b.n	80029ac <d_encoding.part.0+0x74>
 8002a1c:	3935      	subs	r1, #53	; 0x35
 8002a1e:	bf18      	it	ne
 8002a20:	2101      	movne	r1, #1
 8002a22:	e7c3      	b.n	80029ac <d_encoding.part.0+0x74>
 8002a24:	7803      	ldrb	r3, [r0, #0]
 8002a26:	2b29      	cmp	r3, #41	; 0x29
 8002a28:	bf08      	it	eq
 8002a2a:	60c6      	streq	r6, [r0, #12]
 8002a2c:	e7c7      	b.n	80029be <d_encoding.part.0+0x86>
 8002a2e:	bf00      	nop

08002a30 <d_print_comp_inner>:
 8002a30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a34:	4604      	mov	r4, r0
 8002a36:	b095      	sub	sp, #84	; 0x54
 8002a38:	2a00      	cmp	r2, #0
 8002a3a:	d066      	beq.n	8002b0a <d_print_comp_inner+0xda>
 8002a3c:	f8d0 5118 	ldr.w	r5, [r0, #280]	; 0x118
 8002a40:	2d00      	cmp	r5, #0
 8002a42:	d165      	bne.n	8002b10 <d_print_comp_inner+0xe0>
 8002a44:	7817      	ldrb	r7, [r2, #0]
 8002a46:	4616      	mov	r6, r2
 8002a48:	2f51      	cmp	r7, #81	; 0x51
 8002a4a:	d85e      	bhi.n	8002b0a <d_print_comp_inner+0xda>
 8002a4c:	e8df f017 	tbh	[pc, r7, lsl #1]
 8002a50:	011b095c 	.word	0x011b095c
 8002a54:	04ee011b 	.word	0x04ee011b
 8002a58:	02de0898 	.word	0x02de0898
 8002a5c:	0097044a 	.word	0x0097044a
 8002a60:	08f9008b 	.word	0x08f9008b
 8002a64:	03a608d2 	.word	0x03a608d2
 8002a68:	019101b8 	.word	0x019101b8
 8002a6c:	0747016a 	.word	0x0747016a
 8002a70:	06f90720 	.word	0x06f90720
 8002a74:	07bc07e3 	.word	0x07bc07e3
 8002a78:	076e0795 	.word	0x076e0795
 8002a7c:	0423037f 	.word	0x0423037f
 8002a80:	009903f8 	.word	0x009903f8
 8002a84:	00990099 	.word	0x00990099
 8002a88:	00630063 	.word	0x00630063
 8002a8c:	00630063 	.word	0x00630063
 8002a90:	00630063 	.word	0x00630063
 8002a94:	00c50063 	.word	0x00c50063
 8002a98:	006300c5 	.word	0x006300c5
 8002a9c:	09870063 	.word	0x09870063
 8002aa0:	04c80083 	.word	0x04c80083
 8002aa4:	00af068d 	.word	0x00af068d
 8002aa8:	00af066b 	.word	0x00af066b
 8002aac:	00e600e6 	.word	0x00e600e6
 8002ab0:	03340358 	.word	0x03340358
 8002ab4:	0831030a 	.word	0x0831030a
 8002ab8:	080a005d 	.word	0x080a005d
 8002abc:	06460663 	.word	0x06460663
 8002ac0:	005d05eb 	.word	0x005d05eb
 8002ac4:	005d0920 	.word	0x005d0920
 8002ac8:	012a005d 	.word	0x012a005d
 8002acc:	0455012a 	.word	0x0455012a
 8002ad0:	0858085e 	.word	0x0858085e
 8002ad4:	047804ba 	.word	0x047804ba
 8002ad8:	05c4054f 	.word	0x05c4054f
 8002adc:	0576059d 	.word	0x0576059d
 8002ae0:	02a4005d 	.word	0x02a4005d
 8002ae4:	0256027d 	.word	0x0256027d
 8002ae8:	01df020a 	.word	0x01df020a
 8002aec:	03cd0063 	.word	0x03cd0063
 8002af0:	00630063 	.word	0x00630063
 8002af4:	f8d4 1124 	ldr.w	r1, [r4, #292]	; 0x124
 8002af8:	2900      	cmp	r1, #0
 8002afa:	f2c1 8425 	blt.w	8004348 <d_print_comp_inner+0x1918>
 8002afe:	f7fd fcfb 	bl	80004f8 <d_index_template_argument.part.0>
 8002b02:	4602      	mov	r2, r0
 8002b04:	2800      	cmp	r0, #0
 8002b06:	f041 841f 	bne.w	8004348 <d_print_comp_inner+0x1918>
 8002b0a:	2301      	movs	r3, #1
 8002b0c:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8002b10:	b015      	add	sp, #84	; 0x54
 8002b12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002b16:	2200      	movs	r2, #0
 8002b18:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8002b1c:	9304      	str	r3, [sp, #16]
 8002b1e:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 8002b22:	9307      	str	r3, [sp, #28]
 8002b24:	ab04      	add	r3, sp, #16
 8002b26:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8002b2a:	2300      	movs	r3, #0
 8002b2c:	9605      	str	r6, [sp, #20]
 8002b2e:	9306      	str	r3, [sp, #24]
 8002b30:	2a00      	cmp	r2, #0
 8002b32:	f001 87e8 	beq.w	8004b06 <d_print_comp_inner+0x20d6>
 8002b36:	2111      	movs	r1, #17
 8002b38:	4620      	mov	r0, r4
 8002b3a:	f001 fff5 	bl	8004b28 <d_print_comp>
 8002b3e:	9b06      	ldr	r3, [sp, #24]
 8002b40:	2b00      	cmp	r3, #0
 8002b42:	f001 82e9 	beq.w	8004118 <d_print_comp_inner+0x16e8>
 8002b46:	9b04      	ldr	r3, [sp, #16]
 8002b48:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8002b4c:	2d00      	cmp	r5, #0
 8002b4e:	d0df      	beq.n	8002b10 <d_print_comp_inner+0xe0>
 8002b50:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
 8002b54:	e7dc      	b.n	8002b10 <d_print_comp_inner+0xe0>
 8002b56:	68f2      	ldr	r2, [r6, #12]
 8002b58:	2111      	movs	r1, #17
 8002b5a:	4620      	mov	r0, r4
 8002b5c:	b015      	add	sp, #84	; 0x54
 8002b5e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b62:	f001 bfe1 	b.w	8004b28 <d_print_comp>
 8002b66:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002b6a:	29ff      	cmp	r1, #255	; 0xff
 8002b6c:	f001 855f 	beq.w	800462e <d_print_comp_inner+0x1bfe>
 8002b70:	1c4a      	adds	r2, r1, #1
 8002b72:	237e      	movs	r3, #126	; 0x7e
 8002b74:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8002b78:	5463      	strb	r3, [r4, r1]
 8002b7a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002b7e:	6932      	ldr	r2, [r6, #16]
 8002b80:	e7ea      	b.n	8002b58 <d_print_comp_inner+0x128>
 8002b82:	f8d0 c114 	ldr.w	ip, [r0, #276]	; 0x114
 8002b86:	f1bc 0f00 	cmp.w	ip, #0
 8002b8a:	d00e      	beq.n	8002baa <d_print_comp_inner+0x17a>
 8002b8c:	4663      	mov	r3, ip
 8002b8e:	6899      	ldr	r1, [r3, #8]
 8002b90:	b941      	cbnz	r1, 8002ba4 <d_print_comp_inner+0x174>
 8002b92:	685a      	ldr	r2, [r3, #4]
 8002b94:	7812      	ldrb	r2, [r2, #0]
 8002b96:	f1a2 0019 	sub.w	r0, r2, #25
 8002b9a:	2802      	cmp	r0, #2
 8002b9c:	f201 84ef 	bhi.w	800457e <d_print_comp_inner+0x1b4e>
 8002ba0:	4297      	cmp	r7, r2
 8002ba2:	d0d8      	beq.n	8002b56 <d_print_comp_inner+0x126>
 8002ba4:	681b      	ldr	r3, [r3, #0]
 8002ba6:	2b00      	cmp	r3, #0
 8002ba8:	d1f1      	bne.n	8002b8e <d_print_comp_inner+0x15e>
 8002baa:	68f2      	ldr	r2, [r6, #12]
 8002bac:	e02b      	b.n	8002c06 <d_print_comp_inner+0x1d6>
 8002bae:	e9d0 3144 	ldrd	r3, r1, [r0, #272]	; 0x110
 8002bb2:	aa04      	add	r2, sp, #16
 8002bb4:	f8c0 2114 	str.w	r2, [r0, #276]	; 0x114
 8002bb8:	2200      	movs	r2, #0
 8002bba:	e9cd 1604 	strd	r1, r6, [sp, #16]
 8002bbe:	9206      	str	r2, [sp, #24]
 8002bc0:	2111      	movs	r1, #17
 8002bc2:	6932      	ldr	r2, [r6, #16]
 8002bc4:	9307      	str	r3, [sp, #28]
 8002bc6:	f001 ffaf 	bl	8004b28 <d_print_comp>
 8002bca:	9b06      	ldr	r3, [sp, #24]
 8002bcc:	2b00      	cmp	r3, #0
 8002bce:	f001 84c3 	beq.w	8004558 <d_print_comp_inner+0x1b28>
 8002bd2:	9b04      	ldr	r3, [sp, #16]
 8002bd4:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8002bd8:	e79a      	b.n	8002b10 <d_print_comp_inner+0xe0>
 8002bda:	68d2      	ldr	r2, [r2, #12]
 8002bdc:	f8d0 5120 	ldr.w	r5, [r0, #288]	; 0x120
 8002be0:	7813      	ldrb	r3, [r2, #0]
 8002be2:	2d00      	cmp	r5, #0
 8002be4:	f041 8370 	bne.w	80042c8 <d_print_comp_inner+0x1898>
 8002be8:	2b05      	cmp	r3, #5
 8002bea:	f001 85d4 	beq.w	8004796 <d_print_comp_inner+0x1d66>
 8002bee:	4610      	mov	r0, r2
 8002bf0:	2b23      	cmp	r3, #35	; 0x23
 8002bf2:	f001 82d8 	beq.w	80041a6 <d_print_comp_inner+0x1776>
 8002bf6:	429f      	cmp	r7, r3
 8002bf8:	f001 82d5 	beq.w	80041a6 <d_print_comp_inner+0x1776>
 8002bfc:	2b24      	cmp	r3, #36	; 0x24
 8002bfe:	f001 860c 	beq.w	800481a <d_print_comp_inner+0x1dea>
 8002c02:	f8d4 c114 	ldr.w	ip, [r4, #276]	; 0x114
 8002c06:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 8002c0a:	9307      	str	r3, [sp, #28]
 8002c0c:	ab04      	add	r3, sp, #16
 8002c0e:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8002c12:	2300      	movs	r3, #0
 8002c14:	e9cd c604 	strd	ip, r6, [sp, #16]
 8002c18:	9306      	str	r3, [sp, #24]
 8002c1a:	e78c      	b.n	8002b36 <d_print_comp_inner+0x106>
 8002c1c:	68d2      	ldr	r2, [r2, #12]
 8002c1e:	b112      	cbz	r2, 8002c26 <d_print_comp_inner+0x1f6>
 8002c20:	2111      	movs	r1, #17
 8002c22:	f001 ff81 	bl	8004b28 <d_print_comp>
 8002c26:	6933      	ldr	r3, [r6, #16]
 8002c28:	2b00      	cmp	r3, #0
 8002c2a:	f43f af71 	beq.w	8002b10 <d_print_comp_inner+0xe0>
 8002c2e:	f8d4 5100 	ldr.w	r5, [r4, #256]	; 0x100
 8002c32:	2dfd      	cmp	r5, #253	; 0xfd
 8002c34:	f201 84a7 	bhi.w	8004586 <d_print_comp_inner+0x1b56>
 8002c38:	f8df 8384 	ldr.w	r8, [pc, #900]	; 8002fc0 <d_print_comp_inner+0x590>
 8002c3c:	272c      	movs	r7, #44	; 0x2c
 8002c3e:	f108 0a01 	add.w	sl, r8, #1
 8002c42:	f04f 0900 	mov.w	r9, #0
 8002c46:	4629      	mov	r1, r5
 8002c48:	e00b      	b.n	8002c62 <d_print_comp_inner+0x232>
 8002c4a:	460b      	mov	r3, r1
 8002c4c:	3101      	adds	r1, #1
 8002c4e:	45d0      	cmp	r8, sl
 8002c50:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002c54:	54e7      	strb	r7, [r4, r3]
 8002c56:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8002c5a:	f001 8264 	beq.w	8004126 <d_print_comp_inner+0x16f6>
 8002c5e:	f818 7f01 	ldrb.w	r7, [r8, #1]!
 8002c62:	29ff      	cmp	r1, #255	; 0xff
 8002c64:	d1f1      	bne.n	8002c4a <d_print_comp_inner+0x21a>
 8002c66:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002c6a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002c6e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002c72:	4620      	mov	r0, r4
 8002c74:	4798      	blx	r3
 8002c76:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002c7a:	3301      	adds	r3, #1
 8002c7c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002c80:	2101      	movs	r1, #1
 8002c82:	2300      	movs	r3, #0
 8002c84:	e7e3      	b.n	8002c4e <d_print_comp_inner+0x21e>
 8002c86:	68d2      	ldr	r2, [r2, #12]
 8002c88:	2111      	movs	r1, #17
 8002c8a:	f001 ff4d 	bl	8004b28 <d_print_comp>
 8002c8e:	49c7      	ldr	r1, [pc, #796]	; (8002fac <d_print_comp_inner+0x57c>)
 8002c90:	4620      	mov	r0, r4
 8002c92:	f7fd fd1b 	bl	80006cc <d_append_string>
 8002c96:	6937      	ldr	r7, [r6, #16]
 8002c98:	783b      	ldrb	r3, [r7, #0]
 8002c9a:	2b48      	cmp	r3, #72	; 0x48
 8002c9c:	f001 808b 	beq.w	8003db6 <d_print_comp_inner+0x1386>
 8002ca0:	463a      	mov	r2, r7
 8002ca2:	e759      	b.n	8002b58 <d_print_comp_inner+0x128>
 8002ca4:	68d2      	ldr	r2, [r2, #12]
 8002ca6:	7813      	ldrb	r3, [r2, #0]
 8002ca8:	2b27      	cmp	r3, #39	; 0x27
 8002caa:	f041 835a 	bne.w	8004362 <d_print_comp_inner+0x1932>
 8002cae:	68d3      	ldr	r3, [r2, #12]
 8002cb0:	7c1d      	ldrb	r5, [r3, #16]
 8002cb2:	2d06      	cmp	r5, #6
 8002cb4:	f201 827d 	bhi.w	80041b2 <d_print_comp_inner+0x1782>
 8002cb8:	2d00      	cmp	r5, #0
 8002cba:	f041 851c 	bne.w	80046f6 <d_print_comp_inner+0x1cc6>
 8002cbe:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002cc2:	29ff      	cmp	r1, #255	; 0xff
 8002cc4:	f001 84f0 	beq.w	80046a8 <d_print_comp_inner+0x1c78>
 8002cc8:	1c4b      	adds	r3, r1, #1
 8002cca:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8002cce:	2328      	movs	r3, #40	; 0x28
 8002cd0:	5463      	strb	r3, [r4, r1]
 8002cd2:	4620      	mov	r0, r4
 8002cd4:	2111      	movs	r1, #17
 8002cd6:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002cda:	f001 ff25 	bl	8004b28 <d_print_comp>
 8002cde:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002ce2:	29ff      	cmp	r1, #255	; 0xff
 8002ce4:	f001 84f7 	beq.w	80046d6 <d_print_comp_inner+0x1ca6>
 8002ce8:	1c4b      	adds	r3, r1, #1
 8002cea:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8002cee:	2329      	movs	r3, #41	; 0x29
 8002cf0:	5463      	strb	r3, [r4, r1]
 8002cf2:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002cf6:	7833      	ldrb	r3, [r6, #0]
 8002cf8:	2b3e      	cmp	r3, #62	; 0x3e
 8002cfa:	f001 84e6 	beq.w	80046ca <d_print_comp_inner+0x1c9a>
 8002cfe:	2d08      	cmp	r5, #8
 8002d00:	f47f af3d 	bne.w	8002b7e <d_print_comp_inner+0x14e>
 8002d04:	215b      	movs	r1, #91	; 0x5b
 8002d06:	4620      	mov	r0, r4
 8002d08:	f7fd fc58 	bl	80005bc <d_append_char>
 8002d0c:	2111      	movs	r1, #17
 8002d0e:	6932      	ldr	r2, [r6, #16]
 8002d10:	4620      	mov	r0, r4
 8002d12:	f001 ff09 	bl	8004b28 <d_print_comp>
 8002d16:	215d      	movs	r1, #93	; 0x5d
 8002d18:	4620      	mov	r0, r4
 8002d1a:	b015      	add	sp, #84	; 0x54
 8002d1c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002d20:	f7fd bc4c 	b.w	80005bc <d_append_char>
 8002d24:	4fa2      	ldr	r7, [pc, #648]	; (8002fb0 <d_print_comp_inner+0x580>)
 8002d26:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002d2a:	f107 090f 	add.w	r9, r7, #15
 8002d2e:	2574      	movs	r5, #116	; 0x74
 8002d30:	f04f 0800 	mov.w	r8, #0
 8002d34:	e00b      	b.n	8002d4e <d_print_comp_inner+0x31e>
 8002d36:	460b      	mov	r3, r1
 8002d38:	3101      	adds	r1, #1
 8002d3a:	454f      	cmp	r7, r9
 8002d3c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002d40:	54e5      	strb	r5, [r4, r3]
 8002d42:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8002d46:	f43f af06 	beq.w	8002b56 <d_print_comp_inner+0x126>
 8002d4a:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8002d4e:	29ff      	cmp	r1, #255	; 0xff
 8002d50:	d1f1      	bne.n	8002d36 <d_print_comp_inner+0x306>
 8002d52:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002d56:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002d5a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8002d5e:	4620      	mov	r0, r4
 8002d60:	4798      	blx	r3
 8002d62:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002d66:	3301      	adds	r3, #1
 8002d68:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002d6c:	2101      	movs	r1, #1
 8002d6e:	2300      	movs	r3, #0
 8002d70:	e7e3      	b.n	8002d3a <d_print_comp_inner+0x30a>
 8002d72:	4f90      	ldr	r7, [pc, #576]	; (8002fb4 <d_print_comp_inner+0x584>)
 8002d74:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002d78:	f107 0911 	add.w	r9, r7, #17
 8002d7c:	2574      	movs	r5, #116	; 0x74
 8002d7e:	f04f 0800 	mov.w	r8, #0
 8002d82:	e00b      	b.n	8002d9c <d_print_comp_inner+0x36c>
 8002d84:	460b      	mov	r3, r1
 8002d86:	3101      	adds	r1, #1
 8002d88:	45b9      	cmp	r9, r7
 8002d8a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002d8e:	54e5      	strb	r5, [r4, r3]
 8002d90:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8002d94:	f43f aedf 	beq.w	8002b56 <d_print_comp_inner+0x126>
 8002d98:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8002d9c:	29ff      	cmp	r1, #255	; 0xff
 8002d9e:	d1f1      	bne.n	8002d84 <d_print_comp_inner+0x354>
 8002da0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002da4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002da8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8002dac:	4620      	mov	r0, r4
 8002dae:	4798      	blx	r3
 8002db0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002db4:	3301      	adds	r3, #1
 8002db6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002dba:	2101      	movs	r1, #1
 8002dbc:	2300      	movs	r3, #0
 8002dbe:	e7e3      	b.n	8002d88 <d_print_comp_inner+0x358>
 8002dc0:	4f7d      	ldr	r7, [pc, #500]	; (8002fb8 <d_print_comp_inner+0x588>)
 8002dc2:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002dc6:	f107 090c 	add.w	r9, r7, #12
 8002dca:	2574      	movs	r5, #116	; 0x74
 8002dcc:	f04f 0800 	mov.w	r8, #0
 8002dd0:	e00b      	b.n	8002dea <d_print_comp_inner+0x3ba>
 8002dd2:	460b      	mov	r3, r1
 8002dd4:	3101      	adds	r1, #1
 8002dd6:	454f      	cmp	r7, r9
 8002dd8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002ddc:	54e5      	strb	r5, [r4, r3]
 8002dde:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8002de2:	f43f aeb8 	beq.w	8002b56 <d_print_comp_inner+0x126>
 8002de6:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8002dea:	29ff      	cmp	r1, #255	; 0xff
 8002dec:	d1f1      	bne.n	8002dd2 <d_print_comp_inner+0x3a2>
 8002dee:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002df2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002df6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8002dfa:	4620      	mov	r0, r4
 8002dfc:	4798      	blx	r3
 8002dfe:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002e02:	3301      	adds	r3, #1
 8002e04:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002e08:	2101      	movs	r1, #1
 8002e0a:	2300      	movs	r3, #0
 8002e0c:	e7e3      	b.n	8002dd6 <d_print_comp_inner+0x3a6>
 8002e0e:	4f6b      	ldr	r7, [pc, #428]	; (8002fbc <d_print_comp_inner+0x58c>)
 8002e10:	68d2      	ldr	r2, [r2, #12]
 8002e12:	2111      	movs	r1, #17
 8002e14:	f001 fe88 	bl	8004b28 <d_print_comp>
 8002e18:	f107 0904 	add.w	r9, r7, #4
 8002e1c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002e20:	255b      	movs	r5, #91	; 0x5b
 8002e22:	f04f 0800 	mov.w	r8, #0
 8002e26:	e00b      	b.n	8002e40 <d_print_comp_inner+0x410>
 8002e28:	460b      	mov	r3, r1
 8002e2a:	3101      	adds	r1, #1
 8002e2c:	45b9      	cmp	r9, r7
 8002e2e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002e32:	54e5      	strb	r5, [r4, r3]
 8002e34:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8002e38:	f000 87f3 	beq.w	8003e22 <d_print_comp_inner+0x13f2>
 8002e3c:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8002e40:	29ff      	cmp	r1, #255	; 0xff
 8002e42:	d1f1      	bne.n	8002e28 <d_print_comp_inner+0x3f8>
 8002e44:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002e48:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002e4c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8002e50:	4620      	mov	r0, r4
 8002e52:	4798      	blx	r3
 8002e54:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002e58:	3301      	adds	r3, #1
 8002e5a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002e5e:	2101      	movs	r1, #1
 8002e60:	2300      	movs	r3, #0
 8002e62:	e7e3      	b.n	8002e2c <d_print_comp_inner+0x3fc>
 8002e64:	f8d2 a00c 	ldr.w	sl, [r2, #12]
 8002e68:	4651      	mov	r1, sl
 8002e6a:	f7fd fbe5 	bl	8000638 <d_find_pack>
 8002e6e:	f04f 0800 	mov.w	r8, #0
 8002e72:	b910      	cbnz	r0, 8002e7a <d_print_comp_inner+0x44a>
 8002e74:	f001 bd22 	b.w	80048bc <d_print_comp_inner+0x1e8c>
 8002e78:	46c8      	mov	r8, r9
 8002e7a:	7803      	ldrb	r3, [r0, #0]
 8002e7c:	2b2f      	cmp	r3, #47	; 0x2f
 8002e7e:	f108 0901 	add.w	r9, r8, #1
 8002e82:	f041 8187 	bne.w	8004194 <d_print_comp_inner+0x1764>
 8002e86:	68c3      	ldr	r3, [r0, #12]
 8002e88:	2b00      	cmp	r3, #0
 8002e8a:	f001 8183 	beq.w	8004194 <d_print_comp_inner+0x1764>
 8002e8e:	6900      	ldr	r0, [r0, #16]
 8002e90:	2800      	cmp	r0, #0
 8002e92:	d1f1      	bne.n	8002e78 <d_print_comp_inner+0x448>
 8002e94:	e003      	b.n	8002e9e <d_print_comp_inner+0x46e>
 8002e96:	3501      	adds	r5, #1
 8002e98:	454d      	cmp	r5, r9
 8002e9a:	f6bf ae39 	bge.w	8002b10 <d_print_comp_inner+0xe0>
 8002e9e:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 8002ea2:	4652      	mov	r2, sl
 8002ea4:	2111      	movs	r1, #17
 8002ea6:	4620      	mov	r0, r4
 8002ea8:	f001 fe3e 	bl	8004b28 <d_print_comp>
 8002eac:	45a8      	cmp	r8, r5
 8002eae:	ddf2      	ble.n	8002e96 <d_print_comp_inner+0x466>
 8002eb0:	4f43      	ldr	r7, [pc, #268]	; (8002fc0 <d_print_comp_inner+0x590>)
 8002eb2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8002eb6:	f107 0b01 	add.w	fp, r7, #1
 8002eba:	262c      	movs	r6, #44	; 0x2c
 8002ebc:	e00a      	b.n	8002ed4 <d_print_comp_inner+0x4a4>
 8002ebe:	460b      	mov	r3, r1
 8002ec0:	3101      	adds	r1, #1
 8002ec2:	45bb      	cmp	fp, r7
 8002ec4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002ec8:	54e6      	strb	r6, [r4, r3]
 8002eca:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8002ece:	d0e2      	beq.n	8002e96 <d_print_comp_inner+0x466>
 8002ed0:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8002ed4:	29ff      	cmp	r1, #255	; 0xff
 8002ed6:	d1f2      	bne.n	8002ebe <d_print_comp_inner+0x48e>
 8002ed8:	f04f 0200 	mov.w	r2, #0
 8002edc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002ee0:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
 8002ee4:	4620      	mov	r0, r4
 8002ee6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002eea:	4798      	blx	r3
 8002eec:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002ef0:	3301      	adds	r3, #1
 8002ef2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002ef6:	2101      	movs	r1, #1
 8002ef8:	2300      	movs	r3, #0
 8002efa:	e7e2      	b.n	8002ec2 <d_print_comp_inner+0x492>
 8002efc:	4f31      	ldr	r7, [pc, #196]	; (8002fc4 <d_print_comp_inner+0x594>)
 8002efe:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002f02:	f107 0919 	add.w	r9, r7, #25
 8002f06:	256e      	movs	r5, #110	; 0x6e
 8002f08:	f04f 0800 	mov.w	r8, #0
 8002f0c:	e00b      	b.n	8002f26 <d_print_comp_inner+0x4f6>
 8002f0e:	460b      	mov	r3, r1
 8002f10:	3101      	adds	r1, #1
 8002f12:	45b9      	cmp	r9, r7
 8002f14:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002f18:	54e5      	strb	r5, [r4, r3]
 8002f1a:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8002f1e:	f43f ae1a 	beq.w	8002b56 <d_print_comp_inner+0x126>
 8002f22:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8002f26:	29ff      	cmp	r1, #255	; 0xff
 8002f28:	d1f1      	bne.n	8002f0e <d_print_comp_inner+0x4de>
 8002f2a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002f2e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002f32:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8002f36:	4620      	mov	r0, r4
 8002f38:	4798      	blx	r3
 8002f3a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002f3e:	3301      	adds	r3, #1
 8002f40:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002f44:	2101      	movs	r1, #1
 8002f46:	2300      	movs	r3, #0
 8002f48:	e7e3      	b.n	8002f12 <d_print_comp_inner+0x4e2>
 8002f4a:	4f1f      	ldr	r7, [pc, #124]	; (8002fc8 <d_print_comp_inner+0x598>)
 8002f4c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002f50:	f107 0915 	add.w	r9, r7, #21
 8002f54:	2574      	movs	r5, #116	; 0x74
 8002f56:	f04f 0800 	mov.w	r8, #0
 8002f5a:	e00b      	b.n	8002f74 <d_print_comp_inner+0x544>
 8002f5c:	460b      	mov	r3, r1
 8002f5e:	3101      	adds	r1, #1
 8002f60:	45b9      	cmp	r9, r7
 8002f62:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002f66:	54e5      	strb	r5, [r4, r3]
 8002f68:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8002f6c:	f43f adf3 	beq.w	8002b56 <d_print_comp_inner+0x126>
 8002f70:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8002f74:	29ff      	cmp	r1, #255	; 0xff
 8002f76:	d1f1      	bne.n	8002f5c <d_print_comp_inner+0x52c>
 8002f78:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002f7c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002f80:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8002f84:	4620      	mov	r0, r4
 8002f86:	4798      	blx	r3
 8002f88:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8002f8c:	3301      	adds	r3, #1
 8002f8e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8002f92:	2101      	movs	r1, #1
 8002f94:	2300      	movs	r3, #0
 8002f96:	e7e3      	b.n	8002f60 <d_print_comp_inner+0x530>
 8002f98:	4f0c      	ldr	r7, [pc, #48]	; (8002fcc <d_print_comp_inner+0x59c>)
 8002f9a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8002f9e:	f107 090d 	add.w	r9, r7, #13
 8002fa2:	257b      	movs	r5, #123	; 0x7b
 8002fa4:	f04f 0800 	mov.w	r8, #0
 8002fa8:	e01e      	b.n	8002fe8 <d_print_comp_inner+0x5b8>
 8002faa:	bf00      	nop
 8002fac:	0800d4b0 	.word	0x0800d4b0
 8002fb0:	0800d550 	.word	0x0800d550
 8002fb4:	0800d53c 	.word	0x0800d53c
 8002fb8:	0800d52c 	.word	0x0800d52c
 8002fbc:	0800d4a8 	.word	0x0800d4a8
 8002fc0:	0800d650 	.word	0x0800d650
 8002fc4:	0800d61c 	.word	0x0800d61c
 8002fc8:	0800d620 	.word	0x0800d620
 8002fcc:	0800d724 	.word	0x0800d724
 8002fd0:	460b      	mov	r3, r1
 8002fd2:	3101      	adds	r1, #1
 8002fd4:	454f      	cmp	r7, r9
 8002fd6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8002fda:	54e5      	strb	r5, [r4, r3]
 8002fdc:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8002fe0:	f000 8739 	beq.w	8003e56 <d_print_comp_inner+0x1426>
 8002fe4:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8002fe8:	29ff      	cmp	r1, #255	; 0xff
 8002fea:	d1f1      	bne.n	8002fd0 <d_print_comp_inner+0x5a0>
 8002fec:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002ff0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002ff4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8002ff8:	4620      	mov	r0, r4
 8002ffa:	4798      	blx	r3
 8002ffc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003000:	3301      	adds	r3, #1
 8003002:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003006:	2101      	movs	r1, #1
 8003008:	2300      	movs	r3, #0
 800300a:	e7e3      	b.n	8002fd4 <d_print_comp_inner+0x5a4>
 800300c:	f8d0 3120 	ldr.w	r3, [r0, #288]	; 0x120
 8003010:	2b00      	cmp	r3, #0
 8003012:	f001 818e 	beq.w	8004332 <d_print_comp_inner+0x1902>
 8003016:	4fd3      	ldr	r7, [pc, #844]	; (8003364 <d_print_comp_inner+0x934>)
 8003018:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 800301c:	f107 0904 	add.w	r9, r7, #4
 8003020:	2561      	movs	r5, #97	; 0x61
 8003022:	f04f 0800 	mov.w	r8, #0
 8003026:	e00b      	b.n	8003040 <d_print_comp_inner+0x610>
 8003028:	460b      	mov	r3, r1
 800302a:	3101      	adds	r1, #1
 800302c:	45b9      	cmp	r9, r7
 800302e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003032:	54e5      	strb	r5, [r4, r3]
 8003034:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8003038:	f001 814a 	beq.w	80042d0 <d_print_comp_inner+0x18a0>
 800303c:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8003040:	29ff      	cmp	r1, #255	; 0xff
 8003042:	d1f1      	bne.n	8003028 <d_print_comp_inner+0x5f8>
 8003044:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003048:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800304c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003050:	4620      	mov	r0, r4
 8003052:	4798      	blx	r3
 8003054:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003058:	3301      	adds	r3, #1
 800305a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800305e:	2101      	movs	r1, #1
 8003060:	2300      	movs	r3, #0
 8003062:	e7e3      	b.n	800302c <d_print_comp_inner+0x5fc>
 8003064:	68d7      	ldr	r7, [r2, #12]
 8003066:	4ec0      	ldr	r6, [pc, #768]	; (8003368 <d_print_comp_inner+0x938>)
 8003068:	f8d7 8008 	ldr.w	r8, [r7, #8]
 800306c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003070:	f106 0a07 	add.w	sl, r6, #7
 8003074:	256f      	movs	r5, #111	; 0x6f
 8003076:	f04f 0900 	mov.w	r9, #0
 800307a:	e00b      	b.n	8003094 <d_print_comp_inner+0x664>
 800307c:	460b      	mov	r3, r1
 800307e:	3101      	adds	r1, #1
 8003080:	45b2      	cmp	sl, r6
 8003082:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003086:	54e5      	strb	r5, [r4, r3]
 8003088:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 800308c:	f000 8726 	beq.w	8003edc <d_print_comp_inner+0x14ac>
 8003090:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8003094:	29ff      	cmp	r1, #255	; 0xff
 8003096:	d1f1      	bne.n	800307c <d_print_comp_inner+0x64c>
 8003098:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800309c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80030a0:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80030a4:	4620      	mov	r0, r4
 80030a6:	4798      	blx	r3
 80030a8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80030ac:	3301      	adds	r3, #1
 80030ae:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80030b2:	2101      	movs	r1, #1
 80030b4:	2300      	movs	r3, #0
 80030b6:	e7e3      	b.n	8003080 <d_print_comp_inner+0x650>
 80030b8:	e9d2 2503 	ldrd	r2, r5, [r2, #12]
 80030bc:	b112      	cbz	r2, 80030c4 <d_print_comp_inner+0x694>
 80030be:	2111      	movs	r1, #17
 80030c0:	f001 fd32 	bl	8004b28 <d_print_comp>
 80030c4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80030c8:	29ff      	cmp	r1, #255	; 0xff
 80030ca:	f001 826d 	beq.w	80045a8 <d_print_comp_inner+0x1b78>
 80030ce:	1c4a      	adds	r2, r1, #1
 80030d0:	237b      	movs	r3, #123	; 0x7b
 80030d2:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80030d6:	4620      	mov	r0, r4
 80030d8:	5463      	strb	r3, [r4, r1]
 80030da:	462a      	mov	r2, r5
 80030dc:	2111      	movs	r1, #17
 80030de:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80030e2:	f001 fd21 	bl	8004b28 <d_print_comp>
 80030e6:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80030ea:	29ff      	cmp	r1, #255	; 0xff
 80030ec:	f000 86e6 	beq.w	8003ebc <d_print_comp_inner+0x148c>
 80030f0:	1c4a      	adds	r2, r1, #1
 80030f2:	237d      	movs	r3, #125	; 0x7d
 80030f4:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80030f8:	5463      	strb	r3, [r4, r1]
 80030fa:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80030fe:	e507      	b.n	8002b10 <d_print_comp_inner+0xe0>
 8003100:	4f9a      	ldr	r7, [pc, #616]	; (800336c <d_print_comp_inner+0x93c>)
 8003102:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003106:	f107 091d 	add.w	r9, r7, #29
 800310a:	2574      	movs	r5, #116	; 0x74
 800310c:	f04f 0800 	mov.w	r8, #0
 8003110:	e00b      	b.n	800312a <d_print_comp_inner+0x6fa>
 8003112:	460b      	mov	r3, r1
 8003114:	3101      	adds	r1, #1
 8003116:	45b9      	cmp	r9, r7
 8003118:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800311c:	54e5      	strb	r5, [r4, r3]
 800311e:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8003122:	f43f ad18 	beq.w	8002b56 <d_print_comp_inner+0x126>
 8003126:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 800312a:	29ff      	cmp	r1, #255	; 0xff
 800312c:	d1f1      	bne.n	8003112 <d_print_comp_inner+0x6e2>
 800312e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003132:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003136:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800313a:	4620      	mov	r0, r4
 800313c:	4798      	blx	r3
 800313e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003142:	3301      	adds	r3, #1
 8003144:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003148:	2101      	movs	r1, #1
 800314a:	2300      	movs	r3, #0
 800314c:	e7e3      	b.n	8003116 <d_print_comp_inner+0x6e6>
 800314e:	4f88      	ldr	r7, [pc, #544]	; (8003370 <d_print_comp_inner+0x940>)
 8003150:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003154:	f107 0914 	add.w	r9, r7, #20
 8003158:	2572      	movs	r5, #114	; 0x72
 800315a:	f04f 0800 	mov.w	r8, #0
 800315e:	e00b      	b.n	8003178 <d_print_comp_inner+0x748>
 8003160:	460b      	mov	r3, r1
 8003162:	3101      	adds	r1, #1
 8003164:	45b9      	cmp	r9, r7
 8003166:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800316a:	54e5      	strb	r5, [r4, r3]
 800316c:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8003170:	f000 86f4 	beq.w	8003f5c <d_print_comp_inner+0x152c>
 8003174:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8003178:	29ff      	cmp	r1, #255	; 0xff
 800317a:	d1f1      	bne.n	8003160 <d_print_comp_inner+0x730>
 800317c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003180:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003184:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003188:	4620      	mov	r0, r4
 800318a:	4798      	blx	r3
 800318c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003190:	3301      	adds	r3, #1
 8003192:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003196:	2101      	movs	r1, #1
 8003198:	2300      	movs	r3, #0
 800319a:	e7e3      	b.n	8003164 <d_print_comp_inner+0x734>
 800319c:	4f75      	ldr	r7, [pc, #468]	; (8003374 <d_print_comp_inner+0x944>)
 800319e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80031a2:	f107 0917 	add.w	r9, r7, #23
 80031a6:	2563      	movs	r5, #99	; 0x63
 80031a8:	f04f 0800 	mov.w	r8, #0
 80031ac:	e00b      	b.n	80031c6 <d_print_comp_inner+0x796>
 80031ae:	460b      	mov	r3, r1
 80031b0:	3101      	adds	r1, #1
 80031b2:	454f      	cmp	r7, r9
 80031b4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80031b8:	54e5      	strb	r5, [r4, r3]
 80031ba:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 80031be:	f000 877c 	beq.w	80040ba <d_print_comp_inner+0x168a>
 80031c2:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 80031c6:	29ff      	cmp	r1, #255	; 0xff
 80031c8:	d1f1      	bne.n	80031ae <d_print_comp_inner+0x77e>
 80031ca:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80031ce:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80031d2:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80031d6:	4620      	mov	r0, r4
 80031d8:	4798      	blx	r3
 80031da:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80031de:	3301      	adds	r3, #1
 80031e0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80031e4:	2101      	movs	r1, #1
 80031e6:	2300      	movs	r3, #0
 80031e8:	e7e3      	b.n	80031b2 <d_print_comp_inner+0x782>
 80031ea:	4f63      	ldr	r7, [pc, #396]	; (8003378 <d_print_comp_inner+0x948>)
 80031ec:	68d2      	ldr	r2, [r2, #12]
 80031ee:	2111      	movs	r1, #17
 80031f0:	f001 fc9a 	bl	8004b28 <d_print_comp>
 80031f4:	f107 0907 	add.w	r9, r7, #7
 80031f8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80031fc:	2520      	movs	r5, #32
 80031fe:	f04f 0800 	mov.w	r8, #0
 8003202:	e00b      	b.n	800321c <d_print_comp_inner+0x7ec>
 8003204:	460b      	mov	r3, r1
 8003206:	3101      	adds	r1, #1
 8003208:	45b9      	cmp	r9, r7
 800320a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800320e:	54e5      	strb	r5, [r4, r3]
 8003210:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8003214:	f000 8605 	beq.w	8003e22 <d_print_comp_inner+0x13f2>
 8003218:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 800321c:	29ff      	cmp	r1, #255	; 0xff
 800321e:	d1f1      	bne.n	8003204 <d_print_comp_inner+0x7d4>
 8003220:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003224:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003228:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800322c:	4620      	mov	r0, r4
 800322e:	4798      	blx	r3
 8003230:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003234:	3301      	adds	r3, #1
 8003236:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800323a:	2101      	movs	r1, #1
 800323c:	2300      	movs	r3, #0
 800323e:	e7e3      	b.n	8003208 <d_print_comp_inner+0x7d8>
 8003240:	e9d2 5303 	ldrd	r5, r3, [r2, #12]
 8003244:	2b00      	cmp	r3, #0
 8003246:	f43f ac63 	beq.w	8002b10 <d_print_comp_inner+0xe0>
 800324a:	442b      	add	r3, r5
 800324c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003250:	3d01      	subs	r5, #1
 8003252:	1e5f      	subs	r7, r3, #1
 8003254:	f04f 0800 	mov.w	r8, #0
 8003258:	e009      	b.n	800326e <d_print_comp_inner+0x83e>
 800325a:	460b      	mov	r3, r1
 800325c:	3101      	adds	r1, #1
 800325e:	42af      	cmp	r7, r5
 8003260:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003264:	54e6      	strb	r6, [r4, r3]
 8003266:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 800326a:	f43f ac51 	beq.w	8002b10 <d_print_comp_inner+0xe0>
 800326e:	29ff      	cmp	r1, #255	; 0xff
 8003270:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 8003274:	d1f1      	bne.n	800325a <d_print_comp_inner+0x82a>
 8003276:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800327a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800327e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003282:	4620      	mov	r0, r4
 8003284:	4798      	blx	r3
 8003286:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800328a:	3301      	adds	r3, #1
 800328c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003290:	2101      	movs	r1, #1
 8003292:	2300      	movs	r3, #0
 8003294:	e7e3      	b.n	800325e <d_print_comp_inner+0x82e>
 8003296:	4f39      	ldr	r7, [pc, #228]	; (800337c <d_print_comp_inner+0x94c>)
 8003298:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 800329c:	f107 0910 	add.w	r9, r7, #16
 80032a0:	2568      	movs	r5, #104	; 0x68
 80032a2:	f04f 0800 	mov.w	r8, #0
 80032a6:	e00b      	b.n	80032c0 <d_print_comp_inner+0x890>
 80032a8:	460b      	mov	r3, r1
 80032aa:	3101      	adds	r1, #1
 80032ac:	45b9      	cmp	r9, r7
 80032ae:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80032b2:	54e5      	strb	r5, [r4, r3]
 80032b4:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 80032b8:	f43f ac4d 	beq.w	8002b56 <d_print_comp_inner+0x126>
 80032bc:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 80032c0:	29ff      	cmp	r1, #255	; 0xff
 80032c2:	d1f1      	bne.n	80032a8 <d_print_comp_inner+0x878>
 80032c4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80032c8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80032cc:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80032d0:	4620      	mov	r0, r4
 80032d2:	4798      	blx	r3
 80032d4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80032d8:	3301      	adds	r3, #1
 80032da:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80032de:	2101      	movs	r1, #1
 80032e0:	2300      	movs	r3, #0
 80032e2:	e7e3      	b.n	80032ac <d_print_comp_inner+0x87c>
 80032e4:	68d5      	ldr	r5, [r2, #12]
 80032e6:	2d00      	cmp	r5, #0
 80032e8:	f040 87a1 	bne.w	800422e <d_print_comp_inner+0x17fe>
 80032ec:	4924      	ldr	r1, [pc, #144]	; (8003380 <d_print_comp_inner+0x950>)
 80032ee:	4620      	mov	r0, r4
 80032f0:	b015      	add	sp, #84	; 0x54
 80032f2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80032f6:	f7fd b9e9 	b.w	80006cc <d_append_string>
 80032fa:	2111      	movs	r1, #17
 80032fc:	68d2      	ldr	r2, [r2, #12]
 80032fe:	f001 fc13 	bl	8004b28 <d_print_comp>
 8003302:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003306:	29ff      	cmp	r1, #255	; 0xff
 8003308:	f001 816e 	beq.w	80045e8 <d_print_comp_inner+0x1bb8>
 800330c:	1c4a      	adds	r2, r1, #1
 800330e:	2328      	movs	r3, #40	; 0x28
 8003310:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003314:	5463      	strb	r3, [r4, r1]
 8003316:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800331a:	6932      	ldr	r2, [r6, #16]
 800331c:	2111      	movs	r1, #17
 800331e:	4620      	mov	r0, r4
 8003320:	f001 fc02 	bl	8004b28 <d_print_comp>
 8003324:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003328:	29ff      	cmp	r1, #255	; 0xff
 800332a:	f001 802c 	beq.w	8004386 <d_print_comp_inner+0x1956>
 800332e:	1c4a      	adds	r2, r1, #1
 8003330:	2329      	movs	r3, #41	; 0x29
 8003332:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003336:	5463      	strb	r3, [r4, r1]
 8003338:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800333c:	f7ff bbe8 	b.w	8002b10 <d_print_comp_inner+0xe0>
 8003340:	68d2      	ldr	r2, [r2, #12]
 8003342:	4910      	ldr	r1, [pc, #64]	; (8003384 <d_print_comp_inner+0x954>)
 8003344:	a804      	add	r0, sp, #16
 8003346:	f008 fbd9 	bl	800bafc <siprintf>
 800334a:	a804      	add	r0, sp, #16
 800334c:	f002 ff80 	bl	8006250 <strlen>
 8003350:	2800      	cmp	r0, #0
 8003352:	f43f abdd 	beq.w	8002b10 <d_print_comp_inner+0xe0>
 8003356:	ad04      	add	r5, sp, #16
 8003358:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800335c:	182f      	adds	r7, r5, r0
 800335e:	f04f 0800 	mov.w	r8, #0
 8003362:	e01b      	b.n	800339c <d_print_comp_inner+0x96c>
 8003364:	0800d4c8 	.word	0x0800d4c8
 8003368:	0800d654 	.word	0x0800d654
 800336c:	0800d4d0 	.word	0x0800d4d0
 8003370:	0800d5f0 	.word	0x0800d5f0
 8003374:	0800d508 	.word	0x0800d508
 8003378:	0800d734 	.word	0x0800d734
 800337c:	0800d608 	.word	0x0800d608
 8003380:	0800d6c4 	.word	0x0800d6c4
 8003384:	0800d440 	.word	0x0800d440
 8003388:	460b      	mov	r3, r1
 800338a:	3101      	adds	r1, #1
 800338c:	42af      	cmp	r7, r5
 800338e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003392:	54e6      	strb	r6, [r4, r3]
 8003394:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003398:	f43f abba 	beq.w	8002b10 <d_print_comp_inner+0xe0>
 800339c:	29ff      	cmp	r1, #255	; 0xff
 800339e:	f815 6b01 	ldrb.w	r6, [r5], #1
 80033a2:	d1f1      	bne.n	8003388 <d_print_comp_inner+0x958>
 80033a4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80033a8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80033ac:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80033b0:	4620      	mov	r0, r4
 80033b2:	4798      	blx	r3
 80033b4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80033b8:	3301      	adds	r3, #1
 80033ba:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80033be:	2101      	movs	r1, #1
 80033c0:	2300      	movs	r3, #0
 80033c2:	e7e3      	b.n	800338c <d_print_comp_inner+0x95c>
 80033c4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80033c8:	7b15      	ldrb	r5, [r2, #12]
 80033ca:	29ff      	cmp	r1, #255	; 0xff
 80033cc:	f001 811e 	beq.w	800460c <d_print_comp_inner+0x1bdc>
 80033d0:	1c4b      	adds	r3, r1, #1
 80033d2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80033d6:	5465      	strb	r5, [r4, r1]
 80033d8:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 80033dc:	f7ff bb98 	b.w	8002b10 <d_print_comp_inner+0xe0>
 80033e0:	68d2      	ldr	r2, [r2, #12]
 80033e2:	b1ca      	cbz	r2, 8003418 <d_print_comp_inner+0x9e8>
 80033e4:	f8d0 1114 	ldr.w	r1, [r0, #276]	; 0x114
 80033e8:	ab04      	add	r3, sp, #16
 80033ea:	f8c0 3114 	str.w	r3, [r0, #276]	; 0x114
 80033ee:	2300      	movs	r3, #0
 80033f0:	e9cd 1604 	strd	r1, r6, [sp, #16]
 80033f4:	9306      	str	r3, [sp, #24]
 80033f6:	2111      	movs	r1, #17
 80033f8:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
 80033fc:	9307      	str	r3, [sp, #28]
 80033fe:	f001 fb93 	bl	8004b28 <d_print_comp>
 8003402:	9b06      	ldr	r3, [sp, #24]
 8003404:	9a04      	ldr	r2, [sp, #16]
 8003406:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 800340a:	2b00      	cmp	r3, #0
 800340c:	f47f ab80 	bne.w	8002b10 <d_print_comp_inner+0xe0>
 8003410:	2120      	movs	r1, #32
 8003412:	4620      	mov	r0, r4
 8003414:	f7fd f8d2 	bl	80005bc <d_append_char>
 8003418:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 800341c:	4632      	mov	r2, r6
 800341e:	2111      	movs	r1, #17
 8003420:	4620      	mov	r0, r4
 8003422:	b015      	add	sp, #84	; 0x54
 8003424:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003428:	f001 bec4 	b.w	80051b4 <d_print_function_type>
 800342c:	68d7      	ldr	r7, [r2, #12]
 800342e:	f8d0 9114 	ldr.w	r9, [r0, #276]	; 0x114
 8003432:	2200      	movs	r2, #0
 8003434:	f8c0 2114 	str.w	r2, [r0, #276]	; 0x114
 8003438:	2f00      	cmp	r7, #0
 800343a:	f43f ab66 	beq.w	8002b0a <d_print_comp_inner+0xda>
 800343e:	f10d 0810 	add.w	r8, sp, #16
 8003442:	f8d0 c110 	ldr.w	ip, [r0, #272]	; 0x110
 8003446:	4643      	mov	r3, r8
 8003448:	4611      	mov	r1, r2
 800344a:	4696      	mov	lr, r2
 800344c:	e9c3 2700 	strd	r2, r7, [r3]
 8003450:	e9c3 ec02 	strd	lr, ip, [r3, #8]
 8003454:	783a      	ldrb	r2, [r7, #0]
 8003456:	2a4e      	cmp	r2, #78	; 0x4e
 8003458:	469a      	mov	sl, r3
 800345a:	f1a2 0b1c 	sub.w	fp, r2, #28
 800345e:	f1a2 0050 	sub.w	r0, r2, #80	; 0x50
 8003462:	f101 0501 	add.w	r5, r1, #1
 8003466:	f000 8688 	beq.w	800417a <d_print_comp_inner+0x174a>
 800346a:	f200 84ed 	bhi.w	8003e48 <d_print_comp_inner+0x1418>
 800346e:	f1bb 0f04 	cmp.w	fp, #4
 8003472:	f240 8682 	bls.w	800417a <d_print_comp_inner+0x174a>
 8003476:	2a02      	cmp	r2, #2
 8003478:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 800347c:	d114      	bne.n	80034a8 <d_print_comp_inner+0xa78>
 800347e:	693f      	ldr	r7, [r7, #16]
 8003480:	783a      	ldrb	r2, [r7, #0]
 8003482:	2a48      	cmp	r2, #72	; 0x48
 8003484:	f001 8252 	beq.w	800492c <d_print_comp_inner+0x1efc>
 8003488:	eb08 1101 	add.w	r1, r8, r1, lsl #4
 800348c:	f04f 0a00 	mov.w	sl, #0
 8003490:	2a4e      	cmp	r2, #78	; 0x4e
 8003492:	f1a2 0350 	sub.w	r3, r2, #80	; 0x50
 8003496:	f1a2 001c 	sub.w	r0, r2, #28
 800349a:	f000 8787 	beq.w	80043ac <d_print_comp_inner+0x197c>
 800349e:	f200 8782 	bhi.w	80043a6 <d_print_comp_inner+0x1976>
 80034a2:	2804      	cmp	r0, #4
 80034a4:	f240 8782 	bls.w	80043ac <d_print_comp_inner+0x197c>
 80034a8:	2a04      	cmp	r2, #4
 80034aa:	d104      	bne.n	80034b6 <d_print_comp_inner+0xa86>
 80034ac:	e9cd c702 	strd	ip, r7, [sp, #8]
 80034b0:	ab02      	add	r3, sp, #8
 80034b2:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80034b6:	6932      	ldr	r2, [r6, #16]
 80034b8:	2111      	movs	r1, #17
 80034ba:	4620      	mov	r0, r4
 80034bc:	f001 fb34 	bl	8004b28 <d_print_comp>
 80034c0:	783b      	ldrb	r3, [r7, #0]
 80034c2:	2b04      	cmp	r3, #4
 80034c4:	d102      	bne.n	80034cc <d_print_comp_inner+0xa9c>
 80034c6:	9b02      	ldr	r3, [sp, #8]
 80034c8:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80034cc:	eb08 1805 	add.w	r8, r8, r5, lsl #4
 80034d0:	2720      	movs	r7, #32
 80034d2:	f858 6c08 	ldr.w	r6, [r8, #-8]
 80034d6:	3d01      	subs	r5, #1
 80034d8:	2e00      	cmp	r6, #0
 80034da:	f000 863b 	beq.w	8004154 <d_print_comp_inner+0x1724>
 80034de:	f1a8 0810 	sub.w	r8, r8, #16
 80034e2:	2d00      	cmp	r5, #0
 80034e4:	d1f5      	bne.n	80034d2 <d_print_comp_inner+0xaa2>
 80034e6:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
 80034ea:	f7ff bb11 	b.w	8002b10 <d_print_comp_inner+0xe0>
 80034ee:	4fab      	ldr	r7, [pc, #684]	; (800379c <d_print_comp_inner+0xd6c>)
 80034f0:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80034f4:	f107 0909 	add.w	r9, r7, #9
 80034f8:	2564      	movs	r5, #100	; 0x64
 80034fa:	f04f 0800 	mov.w	r8, #0
 80034fe:	e00b      	b.n	8003518 <d_print_comp_inner+0xae8>
 8003500:	460b      	mov	r3, r1
 8003502:	3101      	adds	r1, #1
 8003504:	454f      	cmp	r7, r9
 8003506:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800350a:	54e5      	strb	r5, [r4, r3]
 800350c:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8003510:	f000 85ff 	beq.w	8004112 <d_print_comp_inner+0x16e2>
 8003514:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8003518:	29ff      	cmp	r1, #255	; 0xff
 800351a:	d1f1      	bne.n	8003500 <d_print_comp_inner+0xad0>
 800351c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003520:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003524:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003528:	4620      	mov	r0, r4
 800352a:	4798      	blx	r3
 800352c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003530:	3301      	adds	r3, #1
 8003532:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003536:	2101      	movs	r1, #1
 8003538:	2300      	movs	r3, #0
 800353a:	e7e3      	b.n	8003504 <d_print_comp_inner+0xad4>
 800353c:	4f98      	ldr	r7, [pc, #608]	; (80037a0 <d_print_comp_inner+0xd70>)
 800353e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003542:	f107 0907 	add.w	r9, r7, #7
 8003546:	257b      	movs	r5, #123	; 0x7b
 8003548:	f04f 0800 	mov.w	r8, #0
 800354c:	e00b      	b.n	8003566 <d_print_comp_inner+0xb36>
 800354e:	460b      	mov	r3, r1
 8003550:	3101      	adds	r1, #1
 8003552:	454f      	cmp	r7, r9
 8003554:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003558:	54e5      	strb	r5, [r4, r3]
 800355a:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 800355e:	f000 8546 	beq.w	8003fee <d_print_comp_inner+0x15be>
 8003562:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8003566:	29ff      	cmp	r1, #255	; 0xff
 8003568:	d1f1      	bne.n	800354e <d_print_comp_inner+0xb1e>
 800356a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800356e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003572:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003576:	4620      	mov	r0, r4
 8003578:	4798      	blx	r3
 800357a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800357e:	3301      	adds	r3, #1
 8003580:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003584:	2101      	movs	r1, #1
 8003586:	2300      	movs	r3, #0
 8003588:	e7e3      	b.n	8003552 <d_print_comp_inner+0xb22>
 800358a:	4f86      	ldr	r7, [pc, #536]	; (80037a4 <d_print_comp_inner+0xd74>)
 800358c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003590:	f107 091b 	add.w	r9, r7, #27
 8003594:	2567      	movs	r5, #103	; 0x67
 8003596:	f04f 0800 	mov.w	r8, #0
 800359a:	e00b      	b.n	80035b4 <d_print_comp_inner+0xb84>
 800359c:	460b      	mov	r3, r1
 800359e:	3101      	adds	r1, #1
 80035a0:	45b9      	cmp	r9, r7
 80035a2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80035a6:	54e5      	strb	r5, [r4, r3]
 80035a8:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 80035ac:	f43f aad3 	beq.w	8002b56 <d_print_comp_inner+0x126>
 80035b0:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 80035b4:	29ff      	cmp	r1, #255	; 0xff
 80035b6:	d1f1      	bne.n	800359c <d_print_comp_inner+0xb6c>
 80035b8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80035bc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80035c0:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80035c4:	4620      	mov	r0, r4
 80035c6:	4798      	blx	r3
 80035c8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80035cc:	3301      	adds	r3, #1
 80035ce:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80035d2:	2101      	movs	r1, #1
 80035d4:	2300      	movs	r3, #0
 80035d6:	e7e3      	b.n	80035a0 <d_print_comp_inner+0xb70>
 80035d8:	4f73      	ldr	r7, [pc, #460]	; (80037a8 <d_print_comp_inner+0xd78>)
 80035da:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80035de:	f107 091c 	add.w	r9, r7, #28
 80035e2:	2567      	movs	r5, #103	; 0x67
 80035e4:	f04f 0800 	mov.w	r8, #0
 80035e8:	e00b      	b.n	8003602 <d_print_comp_inner+0xbd2>
 80035ea:	460b      	mov	r3, r1
 80035ec:	3101      	adds	r1, #1
 80035ee:	45b9      	cmp	r9, r7
 80035f0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80035f4:	54e5      	strb	r5, [r4, r3]
 80035f6:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 80035fa:	f43f aaac 	beq.w	8002b56 <d_print_comp_inner+0x126>
 80035fe:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8003602:	29ff      	cmp	r1, #255	; 0xff
 8003604:	d1f1      	bne.n	80035ea <d_print_comp_inner+0xbba>
 8003606:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800360a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800360e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003612:	4620      	mov	r0, r4
 8003614:	4798      	blx	r3
 8003616:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800361a:	3301      	adds	r3, #1
 800361c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003620:	2101      	movs	r1, #1
 8003622:	2300      	movs	r3, #0
 8003624:	e7e3      	b.n	80035ee <d_print_comp_inner+0xbbe>
 8003626:	6913      	ldr	r3, [r2, #16]
 8003628:	781b      	ldrb	r3, [r3, #0]
 800362a:	2b39      	cmp	r3, #57	; 0x39
 800362c:	f47f aa6d 	bne.w	8002b0a <d_print_comp_inner+0xda>
 8003630:	68d2      	ldr	r2, [r2, #12]
 8003632:	68d3      	ldr	r3, [r2, #12]
 8003634:	681b      	ldr	r3, [r3, #0]
 8003636:	7859      	ldrb	r1, [r3, #1]
 8003638:	2963      	cmp	r1, #99	; 0x63
 800363a:	f001 8081 	beq.w	8004740 <d_print_comp_inner+0x1d10>
 800363e:	4632      	mov	r2, r6
 8003640:	2111      	movs	r1, #17
 8003642:	4620      	mov	r0, r4
 8003644:	f002 fb14 	bl	8005c70 <d_maybe_print_fold_expression>
 8003648:	2800      	cmp	r0, #0
 800364a:	f47f aa61 	bne.w	8002b10 <d_print_comp_inner+0xe0>
 800364e:	4632      	mov	r2, r6
 8003650:	2111      	movs	r1, #17
 8003652:	4620      	mov	r0, r4
 8003654:	f002 fc36 	bl	8005ec4 <d_maybe_print_designated_init>
 8003658:	2800      	cmp	r0, #0
 800365a:	f47f aa59 	bne.w	8002b10 <d_print_comp_inner+0xe0>
 800365e:	68f3      	ldr	r3, [r6, #12]
 8003660:	781a      	ldrb	r2, [r3, #0]
 8003662:	2a32      	cmp	r2, #50	; 0x32
 8003664:	f001 81df 	beq.w	8004a26 <d_print_comp_inner+0x1ff6>
 8003668:	68db      	ldr	r3, [r3, #12]
 800366a:	4950      	ldr	r1, [pc, #320]	; (80037ac <d_print_comp_inner+0xd7c>)
 800366c:	6818      	ldr	r0, [r3, #0]
 800366e:	f002 fd8f 	bl	8006190 <strcmp>
 8003672:	6933      	ldr	r3, [r6, #16]
 8003674:	b920      	cbnz	r0, 8003680 <d_print_comp_inner+0xc50>
 8003676:	68da      	ldr	r2, [r3, #12]
 8003678:	7811      	ldrb	r1, [r2, #0]
 800367a:	2903      	cmp	r1, #3
 800367c:	f001 8202 	beq.w	8004a84 <d_print_comp_inner+0x2054>
 8003680:	68da      	ldr	r2, [r3, #12]
 8003682:	2111      	movs	r1, #17
 8003684:	4620      	mov	r0, r4
 8003686:	f002 fa85 	bl	8005b94 <d_print_subexpr>
 800368a:	68f5      	ldr	r5, [r6, #12]
 800368c:	4948      	ldr	r1, [pc, #288]	; (80037b0 <d_print_comp_inner+0xd80>)
 800368e:	68eb      	ldr	r3, [r5, #12]
 8003690:	681f      	ldr	r7, [r3, #0]
 8003692:	4638      	mov	r0, r7
 8003694:	f002 fd7c 	bl	8006190 <strcmp>
 8003698:	2800      	cmp	r0, #0
 800369a:	f001 81e3 	beq.w	8004a64 <d_print_comp_inner+0x2034>
 800369e:	4943      	ldr	r1, [pc, #268]	; (80037ac <d_print_comp_inner+0xd7c>)
 80036a0:	4638      	mov	r0, r7
 80036a2:	f002 fd75 	bl	8006190 <strcmp>
 80036a6:	2800      	cmp	r0, #0
 80036a8:	f041 81fa 	bne.w	8004aa0 <d_print_comp_inner+0x2070>
 80036ac:	6933      	ldr	r3, [r6, #16]
 80036ae:	2111      	movs	r1, #17
 80036b0:	691a      	ldr	r2, [r3, #16]
 80036b2:	4620      	mov	r0, r4
 80036b4:	f002 fa6e 	bl	8005b94 <d_print_subexpr>
 80036b8:	68f3      	ldr	r3, [r6, #12]
 80036ba:	781a      	ldrb	r2, [r3, #0]
 80036bc:	2a32      	cmp	r2, #50	; 0x32
 80036be:	f47f aa27 	bne.w	8002b10 <d_print_comp_inner+0xe0>
 80036c2:	68db      	ldr	r3, [r3, #12]
 80036c4:	689a      	ldr	r2, [r3, #8]
 80036c6:	2a01      	cmp	r2, #1
 80036c8:	f47f aa22 	bne.w	8002b10 <d_print_comp_inner+0xe0>
 80036cc:	685b      	ldr	r3, [r3, #4]
 80036ce:	781b      	ldrb	r3, [r3, #0]
 80036d0:	2b3e      	cmp	r3, #62	; 0x3e
 80036d2:	f47f aa1d 	bne.w	8002b10 <d_print_comp_inner+0xe0>
 80036d6:	2129      	movs	r1, #41	; 0x29
 80036d8:	f7ff bb1e 	b.w	8002d18 <d_print_comp_inner+0x2e8>
 80036dc:	e9d2 7503 	ldrd	r7, r5, [r2, #12]
 80036e0:	783b      	ldrb	r3, [r7, #0]
 80036e2:	2b32      	cmp	r3, #50	; 0x32
 80036e4:	f000 86b1 	beq.w	800444a <d_print_comp_inner+0x1a1a>
 80036e8:	2b34      	cmp	r3, #52	; 0x34
 80036ea:	f041 820f 	bne.w	8004b0c <d_print_comp_inner+0x20dc>
 80036ee:	2128      	movs	r1, #40	; 0x28
 80036f0:	f7fc ff64 	bl	80005bc <d_append_char>
 80036f4:	4620      	mov	r0, r4
 80036f6:	2111      	movs	r1, #17
 80036f8:	68fa      	ldr	r2, [r7, #12]
 80036fa:	f001 fa15 	bl	8004b28 <d_print_comp>
 80036fe:	2129      	movs	r1, #41	; 0x29
 8003700:	4620      	mov	r0, r4
 8003702:	f7fc ff5b 	bl	80005bc <d_append_char>
 8003706:	462a      	mov	r2, r5
 8003708:	2111      	movs	r1, #17
 800370a:	4620      	mov	r0, r4
 800370c:	b015      	add	sp, #84	; 0x54
 800370e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003712:	f002 ba3f 	b.w	8005b94 <d_print_subexpr>
 8003716:	68d2      	ldr	r2, [r2, #12]
 8003718:	2111      	movs	r1, #17
 800371a:	4620      	mov	r0, r4
 800371c:	b015      	add	sp, #84	; 0x54
 800371e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003722:	f002 b83b 	b.w	800579c <d_print_expr_op>
 8003726:	f9b2 3012 	ldrsh.w	r3, [r2, #18]
 800372a:	2b00      	cmp	r3, #0
 800372c:	f040 871b 	bne.w	8004566 <d_print_comp_inner+0x1b36>
 8003730:	68f2      	ldr	r2, [r6, #12]
 8003732:	4b20      	ldr	r3, [pc, #128]	; (80037b4 <d_print_comp_inner+0xd84>)
 8003734:	68d1      	ldr	r1, [r2, #12]
 8003736:	4299      	cmp	r1, r3
 8003738:	d00f      	beq.n	800375a <d_print_comp_inner+0xd2a>
 800373a:	2111      	movs	r1, #17
 800373c:	4620      	mov	r0, r4
 800373e:	f001 f9f3 	bl	8004b28 <d_print_comp>
 8003742:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003746:	29ff      	cmp	r1, #255	; 0xff
 8003748:	f001 80c0 	beq.w	80048cc <d_print_comp_inner+0x1e9c>
 800374c:	2320      	movs	r3, #32
 800374e:	1c4a      	adds	r2, r1, #1
 8003750:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003754:	5463      	strb	r3, [r4, r1]
 8003756:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800375a:	f9b6 8010 	ldrsh.w	r8, [r6, #16]
 800375e:	f1b8 0f00 	cmp.w	r8, #0
 8003762:	f000 8540 	beq.w	80041e6 <d_print_comp_inner+0x17b6>
 8003766:	4914      	ldr	r1, [pc, #80]	; (80037b8 <d_print_comp_inner+0xd88>)
 8003768:	e5c1      	b.n	80032ee <d_print_comp_inner+0x8be>
 800376a:	f8d0 c114 	ldr.w	ip, [r0, #276]	; 0x114
 800376e:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
 8003772:	9307      	str	r3, [sp, #28]
 8003774:	f10d 0810 	add.w	r8, sp, #16
 8003778:	2300      	movs	r3, #0
 800377a:	46e1      	mov	r9, ip
 800377c:	f8cd c010 	str.w	ip, [sp, #16]
 8003780:	f8c0 8114 	str.w	r8, [r0, #276]	; 0x114
 8003784:	9205      	str	r2, [sp, #20]
 8003786:	9306      	str	r3, [sp, #24]
 8003788:	f1bc 0f00 	cmp.w	ip, #0
 800378c:	f001 813f 	beq.w	8004a0e <d_print_comp_inner+0x1fde>
 8003790:	2701      	movs	r7, #1
 8003792:	4665      	mov	r5, ip
 8003794:	46be      	mov	lr, r7
 8003796:	4694      	mov	ip, r2
 8003798:	4646      	mov	r6, r8
 800379a:	e028      	b.n	80037ee <d_print_comp_inner+0xdbe>
 800379c:	0800d6b4 	.word	0x0800d6b4
 80037a0:	0800d714 	.word	0x0800d714
 80037a4:	0800d6f4 	.word	0x0800d6f4
 80037a8:	0800d6d4 	.word	0x0800d6d4
 80037ac:	0800d670 	.word	0x0800d670
 80037b0:	0800d674 	.word	0x0800d674
 80037b4:	0800c9f4 	.word	0x0800c9f4
 80037b8:	0800d640 	.word	0x0800d640
 80037bc:	68ab      	ldr	r3, [r5, #8]
 80037be:	b9a3      	cbnz	r3, 80037ea <d_print_comp_inner+0xdba>
 80037c0:	2f03      	cmp	r7, #3
 80037c2:	f63f a9a2 	bhi.w	8002b0a <d_print_comp_inner+0xda>
 80037c6:	ab14      	add	r3, sp, #80	; 0x50
 80037c8:	eb03 1b07 	add.w	fp, r3, r7, lsl #4
 80037cc:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80037d0:	f1ab 0a40 	sub.w	sl, fp, #64	; 0x40
 80037d4:	e88a 000f 	stmia.w	sl, {r0, r1, r2, r3}
 80037d8:	f84b 6c40 	str.w	r6, [fp, #-64]
 80037dc:	eb08 1607 	add.w	r6, r8, r7, lsl #4
 80037e0:	f8c4 6114 	str.w	r6, [r4, #276]	; 0x114
 80037e4:	3701      	adds	r7, #1
 80037e6:	f8c5 e008 	str.w	lr, [r5, #8]
 80037ea:	682d      	ldr	r5, [r5, #0]
 80037ec:	b125      	cbz	r5, 80037f8 <d_print_comp_inner+0xdc8>
 80037ee:	686b      	ldr	r3, [r5, #4]
 80037f0:	781b      	ldrb	r3, [r3, #0]
 80037f2:	3b19      	subs	r3, #25
 80037f4:	2b02      	cmp	r3, #2
 80037f6:	d9e1      	bls.n	80037bc <d_print_comp_inner+0xd8c>
 80037f8:	f8dc 2010 	ldr.w	r2, [ip, #16]
 80037fc:	2111      	movs	r1, #17
 80037fe:	4620      	mov	r0, r4
 8003800:	4666      	mov	r6, ip
 8003802:	f001 f991 	bl	8004b28 <d_print_comp>
 8003806:	9b06      	ldr	r3, [sp, #24]
 8003808:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
 800380c:	2b00      	cmp	r3, #0
 800380e:	f47f a97f 	bne.w	8002b10 <d_print_comp_inner+0xe0>
 8003812:	2f01      	cmp	r7, #1
 8003814:	d00c      	beq.n	8003830 <d_print_comp_inner+0xe00>
 8003816:	eb08 1807 	add.w	r8, r8, r7, lsl #4
 800381a:	f858 2c0c 	ldr.w	r2, [r8, #-12]
 800381e:	3f01      	subs	r7, #1
 8003820:	2111      	movs	r1, #17
 8003822:	4620      	mov	r0, r4
 8003824:	f001 f9ae 	bl	8004b84 <d_print_mod>
 8003828:	2f01      	cmp	r7, #1
 800382a:	f1a8 0810 	sub.w	r8, r8, #16
 800382e:	d1f4      	bne.n	800381a <d_print_comp_inner+0xdea>
 8003830:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8003834:	4632      	mov	r2, r6
 8003836:	2111      	movs	r1, #17
 8003838:	4620      	mov	r0, r4
 800383a:	f001 fecb 	bl	80055d4 <d_print_array_type>
 800383e:	f7ff b967 	b.w	8002b10 <d_print_comp_inner+0xe0>
 8003842:	4fc6      	ldr	r7, [pc, #792]	; (8003b5c <d_print_comp_inner+0x112c>)
 8003844:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003848:	f107 0919 	add.w	r9, r7, #25
 800384c:	2563      	movs	r5, #99	; 0x63
 800384e:	f04f 0800 	mov.w	r8, #0
 8003852:	e00b      	b.n	800386c <d_print_comp_inner+0xe3c>
 8003854:	460b      	mov	r3, r1
 8003856:	3101      	adds	r1, #1
 8003858:	45b9      	cmp	r9, r7
 800385a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800385e:	54e5      	strb	r5, [r4, r3]
 8003860:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8003864:	f43f a977 	beq.w	8002b56 <d_print_comp_inner+0x126>
 8003868:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 800386c:	29ff      	cmp	r1, #255	; 0xff
 800386e:	d1f1      	bne.n	8003854 <d_print_comp_inner+0xe24>
 8003870:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003874:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003878:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800387c:	4620      	mov	r0, r4
 800387e:	4798      	blx	r3
 8003880:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003884:	3301      	adds	r3, #1
 8003886:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800388a:	2101      	movs	r1, #1
 800388c:	2300      	movs	r3, #0
 800388e:	e7e3      	b.n	8003858 <d_print_comp_inner+0xe28>
 8003890:	4fb3      	ldr	r7, [pc, #716]	; (8003b60 <d_print_comp_inner+0x1130>)
 8003892:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003896:	f107 0910 	add.w	r9, r7, #16
 800389a:	2576      	movs	r5, #118	; 0x76
 800389c:	f04f 0800 	mov.w	r8, #0
 80038a0:	e00b      	b.n	80038ba <d_print_comp_inner+0xe8a>
 80038a2:	460b      	mov	r3, r1
 80038a4:	3101      	adds	r1, #1
 80038a6:	45b9      	cmp	r9, r7
 80038a8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80038ac:	54e5      	strb	r5, [r4, r3]
 80038ae:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 80038b2:	f43f a950 	beq.w	8002b56 <d_print_comp_inner+0x126>
 80038b6:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 80038ba:	29ff      	cmp	r1, #255	; 0xff
 80038bc:	d1f1      	bne.n	80038a2 <d_print_comp_inner+0xe72>
 80038be:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80038c2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80038c6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80038ca:	4620      	mov	r0, r4
 80038cc:	4798      	blx	r3
 80038ce:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80038d2:	3301      	adds	r3, #1
 80038d4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80038d8:	2101      	movs	r1, #1
 80038da:	2300      	movs	r3, #0
 80038dc:	e7e3      	b.n	80038a6 <d_print_comp_inner+0xe76>
 80038de:	4fa1      	ldr	r7, [pc, #644]	; (8003b64 <d_print_comp_inner+0x1134>)
 80038e0:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80038e4:	f107 0914 	add.w	r9, r7, #20
 80038e8:	256e      	movs	r5, #110	; 0x6e
 80038ea:	f04f 0800 	mov.w	r8, #0
 80038ee:	e00b      	b.n	8003908 <d_print_comp_inner+0xed8>
 80038f0:	460b      	mov	r3, r1
 80038f2:	3101      	adds	r1, #1
 80038f4:	45b9      	cmp	r9, r7
 80038f6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80038fa:	54e5      	strb	r5, [r4, r3]
 80038fc:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8003900:	f43f a929 	beq.w	8002b56 <d_print_comp_inner+0x126>
 8003904:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8003908:	29ff      	cmp	r1, #255	; 0xff
 800390a:	d1f1      	bne.n	80038f0 <d_print_comp_inner+0xec0>
 800390c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003910:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003914:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003918:	4620      	mov	r0, r4
 800391a:	4798      	blx	r3
 800391c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003920:	3301      	adds	r3, #1
 8003922:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003926:	2101      	movs	r1, #1
 8003928:	2300      	movs	r3, #0
 800392a:	e7e3      	b.n	80038f4 <d_print_comp_inner+0xec4>
 800392c:	4f8e      	ldr	r7, [pc, #568]	; (8003b68 <d_print_comp_inner+0x1138>)
 800392e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003932:	f107 0918 	add.w	r9, r7, #24
 8003936:	2554      	movs	r5, #84	; 0x54
 8003938:	f04f 0800 	mov.w	r8, #0
 800393c:	e00b      	b.n	8003956 <d_print_comp_inner+0xf26>
 800393e:	460b      	mov	r3, r1
 8003940:	3101      	adds	r1, #1
 8003942:	45b9      	cmp	r9, r7
 8003944:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003948:	54e5      	strb	r5, [r4, r3]
 800394a:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 800394e:	f43f a902 	beq.w	8002b56 <d_print_comp_inner+0x126>
 8003952:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8003956:	29ff      	cmp	r1, #255	; 0xff
 8003958:	d1f1      	bne.n	800393e <d_print_comp_inner+0xf0e>
 800395a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800395e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003962:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003966:	4620      	mov	r0, r4
 8003968:	4798      	blx	r3
 800396a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800396e:	3301      	adds	r3, #1
 8003970:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003974:	2101      	movs	r1, #1
 8003976:	2300      	movs	r3, #0
 8003978:	e7e3      	b.n	8003942 <d_print_comp_inner+0xf12>
 800397a:	4f7c      	ldr	r7, [pc, #496]	; (8003b6c <d_print_comp_inner+0x113c>)
 800397c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003980:	f107 0915 	add.w	r9, r7, #21
 8003984:	2554      	movs	r5, #84	; 0x54
 8003986:	f04f 0800 	mov.w	r8, #0
 800398a:	e00b      	b.n	80039a4 <d_print_comp_inner+0xf74>
 800398c:	460b      	mov	r3, r1
 800398e:	3101      	adds	r1, #1
 8003990:	45b9      	cmp	r9, r7
 8003992:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003996:	54e5      	strb	r5, [r4, r3]
 8003998:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 800399c:	f43f a8db 	beq.w	8002b56 <d_print_comp_inner+0x126>
 80039a0:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 80039a4:	29ff      	cmp	r1, #255	; 0xff
 80039a6:	d1f1      	bne.n	800398c <d_print_comp_inner+0xf5c>
 80039a8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80039ac:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80039b0:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80039b4:	4620      	mov	r0, r4
 80039b6:	4798      	blx	r3
 80039b8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80039bc:	3301      	adds	r3, #1
 80039be:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80039c2:	2101      	movs	r1, #1
 80039c4:	2300      	movs	r3, #0
 80039c6:	e7e3      	b.n	8003990 <d_print_comp_inner+0xf60>
 80039c8:	4f69      	ldr	r7, [pc, #420]	; (8003b70 <d_print_comp_inner+0x1140>)
 80039ca:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80039ce:	f107 0912 	add.w	r9, r7, #18
 80039d2:	2567      	movs	r5, #103	; 0x67
 80039d4:	f04f 0800 	mov.w	r8, #0
 80039d8:	e00b      	b.n	80039f2 <d_print_comp_inner+0xfc2>
 80039da:	460b      	mov	r3, r1
 80039dc:	3101      	adds	r1, #1
 80039de:	45b9      	cmp	r9, r7
 80039e0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80039e4:	54e5      	strb	r5, [r4, r3]
 80039e6:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 80039ea:	f43f a8b4 	beq.w	8002b56 <d_print_comp_inner+0x126>
 80039ee:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 80039f2:	29ff      	cmp	r1, #255	; 0xff
 80039f4:	d1f1      	bne.n	80039da <d_print_comp_inner+0xfaa>
 80039f6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80039fa:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80039fe:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003a02:	4620      	mov	r0, r4
 8003a04:	4798      	blx	r3
 8003a06:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003a0a:	3301      	adds	r3, #1
 8003a0c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003a10:	2101      	movs	r1, #1
 8003a12:	2300      	movs	r3, #0
 8003a14:	e7e3      	b.n	80039de <d_print_comp_inner+0xfae>
 8003a16:	4f57      	ldr	r7, [pc, #348]	; (8003b74 <d_print_comp_inner+0x1144>)
 8003a18:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003a1c:	f107 090e 	add.w	r9, r7, #14
 8003a20:	256a      	movs	r5, #106	; 0x6a
 8003a22:	f04f 0800 	mov.w	r8, #0
 8003a26:	e00b      	b.n	8003a40 <d_print_comp_inner+0x1010>
 8003a28:	460b      	mov	r3, r1
 8003a2a:	3101      	adds	r1, #1
 8003a2c:	45b9      	cmp	r9, r7
 8003a2e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003a32:	54e5      	strb	r5, [r4, r3]
 8003a34:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8003a38:	f43f a88d 	beq.w	8002b56 <d_print_comp_inner+0x126>
 8003a3c:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8003a40:	29ff      	cmp	r1, #255	; 0xff
 8003a42:	d1f1      	bne.n	8003a28 <d_print_comp_inner+0xff8>
 8003a44:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003a48:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003a4c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003a50:	4620      	mov	r0, r4
 8003a52:	4798      	blx	r3
 8003a54:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003a58:	3301      	adds	r3, #1
 8003a5a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003a5e:	2101      	movs	r1, #1
 8003a60:	2300      	movs	r3, #0
 8003a62:	e7e3      	b.n	8003a2c <d_print_comp_inner+0xffc>
 8003a64:	4f44      	ldr	r7, [pc, #272]	; (8003b78 <d_print_comp_inner+0x1148>)
 8003a66:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003a6a:	f107 0908 	add.w	r9, r7, #8
 8003a6e:	256f      	movs	r5, #111	; 0x6f
 8003a70:	f04f 0800 	mov.w	r8, #0
 8003a74:	e00b      	b.n	8003a8e <d_print_comp_inner+0x105e>
 8003a76:	460b      	mov	r3, r1
 8003a78:	3101      	adds	r1, #1
 8003a7a:	45b9      	cmp	r9, r7
 8003a7c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003a80:	54e5      	strb	r5, [r4, r3]
 8003a82:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8003a86:	f000 8295 	beq.w	8003fb4 <d_print_comp_inner+0x1584>
 8003a8a:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8003a8e:	29ff      	cmp	r1, #255	; 0xff
 8003a90:	d1f1      	bne.n	8003a76 <d_print_comp_inner+0x1046>
 8003a92:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003a96:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003a9a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003a9e:	4620      	mov	r0, r4
 8003aa0:	4798      	blx	r3
 8003aa2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003aa6:	3301      	adds	r3, #1
 8003aa8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003aac:	2101      	movs	r1, #1
 8003aae:	2300      	movs	r3, #0
 8003ab0:	e7e3      	b.n	8003a7a <d_print_comp_inner+0x104a>
 8003ab2:	4f31      	ldr	r7, [pc, #196]	; (8003b78 <d_print_comp_inner+0x1148>)
 8003ab4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003ab8:	f107 0908 	add.w	r9, r7, #8
 8003abc:	256f      	movs	r5, #111	; 0x6f
 8003abe:	f04f 0800 	mov.w	r8, #0
 8003ac2:	e00b      	b.n	8003adc <d_print_comp_inner+0x10ac>
 8003ac4:	460b      	mov	r3, r1
 8003ac6:	3101      	adds	r1, #1
 8003ac8:	45b9      	cmp	r9, r7
 8003aca:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003ace:	54e5      	strb	r5, [r4, r3]
 8003ad0:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8003ad4:	f43f a853 	beq.w	8002b7e <d_print_comp_inner+0x14e>
 8003ad8:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8003adc:	29ff      	cmp	r1, #255	; 0xff
 8003ade:	d1f1      	bne.n	8003ac4 <d_print_comp_inner+0x1094>
 8003ae0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003ae4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003ae8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003aec:	4620      	mov	r0, r4
 8003aee:	4798      	blx	r3
 8003af0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003af4:	3301      	adds	r3, #1
 8003af6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003afa:	2101      	movs	r1, #1
 8003afc:	2300      	movs	r3, #0
 8003afe:	e7e3      	b.n	8003ac8 <d_print_comp_inner+0x1098>
 8003b00:	68d2      	ldr	r2, [r2, #12]
 8003b02:	2111      	movs	r1, #17
 8003b04:	f001 f810 	bl	8004b28 <d_print_comp>
 8003b08:	f7ff b839 	b.w	8002b7e <d_print_comp_inner+0x14e>
 8003b0c:	4f1b      	ldr	r7, [pc, #108]	; (8003b7c <d_print_comp_inner+0x114c>)
 8003b0e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003b12:	f107 090d 	add.w	r9, r7, #13
 8003b16:	256a      	movs	r5, #106	; 0x6a
 8003b18:	f04f 0800 	mov.w	r8, #0
 8003b1c:	e00b      	b.n	8003b36 <d_print_comp_inner+0x1106>
 8003b1e:	460b      	mov	r3, r1
 8003b20:	3101      	adds	r1, #1
 8003b22:	45b9      	cmp	r9, r7
 8003b24:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003b28:	54e5      	strb	r5, [r4, r3]
 8003b2a:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8003b2e:	f43f a812 	beq.w	8002b56 <d_print_comp_inner+0x126>
 8003b32:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8003b36:	29ff      	cmp	r1, #255	; 0xff
 8003b38:	d1f1      	bne.n	8003b1e <d_print_comp_inner+0x10ee>
 8003b3a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003b3e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003b42:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003b46:	4620      	mov	r0, r4
 8003b48:	4798      	blx	r3
 8003b4a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003b4e:	3301      	adds	r3, #1
 8003b50:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003b54:	2101      	movs	r1, #1
 8003b56:	2300      	movs	r3, #0
 8003b58:	e7e3      	b.n	8003b22 <d_print_comp_inner+0x10f2>
 8003b5a:	bf00      	nop
 8003b5c:	0800d57c 	.word	0x0800d57c
 8003b60:	0800d568 	.word	0x0800d568
 8003b64:	0800d564 	.word	0x0800d564
 8003b68:	0800d5d4 	.word	0x0800d5d4
 8003b6c:	0800d5bc 	.word	0x0800d5bc
 8003b70:	0800d5a8 	.word	0x0800d5a8
 8003b74:	0800d598 	.word	0x0800d598
 8003b78:	0800d660 	.word	0x0800d660
 8003b7c:	0800d6a4 	.word	0x0800d6a4
 8003b80:	2300      	movs	r3, #0
 8003b82:	f8d0 8114 	ldr.w	r8, [r0, #276]	; 0x114
 8003b86:	f8d0 7148 	ldr.w	r7, [r0, #328]	; 0x148
 8003b8a:	f8c4 2148 	str.w	r2, [r4, #328]	; 0x148
 8003b8e:	2111      	movs	r1, #17
 8003b90:	f8c0 3114 	str.w	r3, [r0, #276]	; 0x114
 8003b94:	68d2      	ldr	r2, [r2, #12]
 8003b96:	f000 ffc7 	bl	8004b28 <d_print_comp>
 8003b9a:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8003b9e:	2b3c      	cmp	r3, #60	; 0x3c
 8003ba0:	f000 857c 	beq.w	800469c <d_print_comp_inner+0x1c6c>
 8003ba4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003ba8:	29ff      	cmp	r1, #255	; 0xff
 8003baa:	f000 8567 	beq.w	800467c <d_print_comp_inner+0x1c4c>
 8003bae:	1c4b      	adds	r3, r1, #1
 8003bb0:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003bb4:	233c      	movs	r3, #60	; 0x3c
 8003bb6:	5463      	strb	r3, [r4, r1]
 8003bb8:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003bbc:	6932      	ldr	r2, [r6, #16]
 8003bbe:	2111      	movs	r1, #17
 8003bc0:	4620      	mov	r0, r4
 8003bc2:	f000 ffb1 	bl	8004b28 <d_print_comp>
 8003bc6:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8003bca:	2b3e      	cmp	r3, #62	; 0x3e
 8003bcc:	f000 8550 	beq.w	8004670 <d_print_comp_inner+0x1c40>
 8003bd0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003bd4:	29ff      	cmp	r1, #255	; 0xff
 8003bd6:	f000 853b 	beq.w	8004650 <d_print_comp_inner+0x1c20>
 8003bda:	1c4b      	adds	r3, r1, #1
 8003bdc:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003be0:	233e      	movs	r3, #62	; 0x3e
 8003be2:	5463      	strb	r3, [r4, r1]
 8003be4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003be8:	f8c4 8114 	str.w	r8, [r4, #276]	; 0x114
 8003bec:	f8c4 7148 	str.w	r7, [r4, #328]	; 0x148
 8003bf0:	f7fe bf8e 	b.w	8002b10 <d_print_comp_inner+0xe0>
 8003bf4:	4fc4      	ldr	r7, [pc, #784]	; (8003f08 <d_print_comp_inner+0x14d8>)
 8003bf6:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003bfa:	f107 0907 	add.w	r9, r7, #7
 8003bfe:	2556      	movs	r5, #86	; 0x56
 8003c00:	f04f 0800 	mov.w	r8, #0
 8003c04:	e00b      	b.n	8003c1e <d_print_comp_inner+0x11ee>
 8003c06:	460b      	mov	r3, r1
 8003c08:	3101      	adds	r1, #1
 8003c0a:	454f      	cmp	r7, r9
 8003c0c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003c10:	54e5      	strb	r5, [r4, r3]
 8003c12:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8003c16:	f43e af9e 	beq.w	8002b56 <d_print_comp_inner+0x126>
 8003c1a:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8003c1e:	29ff      	cmp	r1, #255	; 0xff
 8003c20:	d1f1      	bne.n	8003c06 <d_print_comp_inner+0x11d6>
 8003c22:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003c26:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003c2a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003c2e:	4620      	mov	r0, r4
 8003c30:	4798      	blx	r3
 8003c32:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003c36:	3301      	adds	r3, #1
 8003c38:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003c3c:	2101      	movs	r1, #1
 8003c3e:	2300      	movs	r3, #0
 8003c40:	e7e3      	b.n	8003c0a <d_print_comp_inner+0x11da>
 8003c42:	4fb2      	ldr	r7, [pc, #712]	; (8003f0c <d_print_comp_inner+0x14dc>)
 8003c44:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003c48:	f107 090a 	add.w	r9, r7, #10
 8003c4c:	2576      	movs	r5, #118	; 0x76
 8003c4e:	f04f 0800 	mov.w	r8, #0
 8003c52:	e00b      	b.n	8003c6c <d_print_comp_inner+0x123c>
 8003c54:	460b      	mov	r3, r1
 8003c56:	3101      	adds	r1, #1
 8003c58:	45b9      	cmp	r9, r7
 8003c5a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003c5e:	54e5      	strb	r5, [r4, r3]
 8003c60:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8003c64:	f43e af77 	beq.w	8002b56 <d_print_comp_inner+0x126>
 8003c68:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8003c6c:	29ff      	cmp	r1, #255	; 0xff
 8003c6e:	d1f1      	bne.n	8003c54 <d_print_comp_inner+0x1224>
 8003c70:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003c74:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003c78:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003c7c:	4620      	mov	r0, r4
 8003c7e:	4798      	blx	r3
 8003c80:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003c84:	3301      	adds	r3, #1
 8003c86:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003c8a:	2101      	movs	r1, #1
 8003c8c:	2300      	movs	r3, #0
 8003c8e:	e7e3      	b.n	8003c58 <d_print_comp_inner+0x1228>
 8003c90:	6913      	ldr	r3, [r2, #16]
 8003c92:	781a      	ldrb	r2, [r3, #0]
 8003c94:	2a3b      	cmp	r2, #59	; 0x3b
 8003c96:	f47e af38 	bne.w	8002b0a <d_print_comp_inner+0xda>
 8003c9a:	691b      	ldr	r3, [r3, #16]
 8003c9c:	781b      	ldrb	r3, [r3, #0]
 8003c9e:	2b3c      	cmp	r3, #60	; 0x3c
 8003ca0:	f47e af33 	bne.w	8002b0a <d_print_comp_inner+0xda>
 8003ca4:	4632      	mov	r2, r6
 8003ca6:	2111      	movs	r1, #17
 8003ca8:	f001 ffe2 	bl	8005c70 <d_maybe_print_fold_expression>
 8003cac:	2800      	cmp	r0, #0
 8003cae:	f47e af2f 	bne.w	8002b10 <d_print_comp_inner+0xe0>
 8003cb2:	4632      	mov	r2, r6
 8003cb4:	2111      	movs	r1, #17
 8003cb6:	4620      	mov	r0, r4
 8003cb8:	f002 f904 	bl	8005ec4 <d_maybe_print_designated_init>
 8003cbc:	2800      	cmp	r0, #0
 8003cbe:	f47e af27 	bne.w	8002b10 <d_print_comp_inner+0xe0>
 8003cc2:	e9d6 8303 	ldrd	r8, r3, [r6, #12]
 8003cc6:	e9d3 6303 	ldrd	r6, r3, [r3, #12]
 8003cca:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8003cce:	4990      	ldr	r1, [pc, #576]	; (8003f10 <d_print_comp_inner+0x14e0>)
 8003cd0:	6810      	ldr	r0, [r2, #0]
 8003cd2:	e9d3 7503 	ldrd	r7, r5, [r3, #12]
 8003cd6:	f002 fa5b 	bl	8006190 <strcmp>
 8003cda:	2800      	cmp	r0, #0
 8003cdc:	f040 86e7 	bne.w	8004aae <d_print_comp_inner+0x207e>
 8003ce0:	4632      	mov	r2, r6
 8003ce2:	4620      	mov	r0, r4
 8003ce4:	2111      	movs	r1, #17
 8003ce6:	f001 ff55 	bl	8005b94 <d_print_subexpr>
 8003cea:	4642      	mov	r2, r8
 8003cec:	4620      	mov	r0, r4
 8003cee:	2111      	movs	r1, #17
 8003cf0:	f001 fd54 	bl	800579c <d_print_expr_op>
 8003cf4:	4620      	mov	r0, r4
 8003cf6:	463a      	mov	r2, r7
 8003cf8:	2111      	movs	r1, #17
 8003cfa:	f001 ff4b 	bl	8005b94 <d_print_subexpr>
 8003cfe:	4985      	ldr	r1, [pc, #532]	; (8003f14 <d_print_comp_inner+0x14e4>)
 8003d00:	4620      	mov	r0, r4
 8003d02:	f7fc fce3 	bl	80006cc <d_append_string>
 8003d06:	e4fe      	b.n	8003706 <d_print_comp_inner+0xcd6>
 8003d08:	e9d2 5303 	ldrd	r5, r3, [r2, #12]
 8003d0c:	2b00      	cmp	r3, #0
 8003d0e:	f43e aeff 	beq.w	8002b10 <d_print_comp_inner+0xe0>
 8003d12:	442b      	add	r3, r5
 8003d14:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003d18:	3d01      	subs	r5, #1
 8003d1a:	1e5f      	subs	r7, r3, #1
 8003d1c:	f04f 0800 	mov.w	r8, #0
 8003d20:	e009      	b.n	8003d36 <d_print_comp_inner+0x1306>
 8003d22:	460b      	mov	r3, r1
 8003d24:	3101      	adds	r1, #1
 8003d26:	42af      	cmp	r7, r5
 8003d28:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003d2c:	54e6      	strb	r6, [r4, r3]
 8003d2e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003d32:	f43e aeed 	beq.w	8002b10 <d_print_comp_inner+0xe0>
 8003d36:	29ff      	cmp	r1, #255	; 0xff
 8003d38:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 8003d3c:	d1f1      	bne.n	8003d22 <d_print_comp_inner+0x12f2>
 8003d3e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003d42:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003d46:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003d4a:	4620      	mov	r0, r4
 8003d4c:	4798      	blx	r3
 8003d4e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003d52:	3301      	adds	r3, #1
 8003d54:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003d58:	2101      	movs	r1, #1
 8003d5a:	2300      	movs	r3, #0
 8003d5c:	e7e3      	b.n	8003d26 <d_print_comp_inner+0x12f6>
 8003d5e:	68d2      	ldr	r2, [r2, #12]
 8003d60:	e9d2 5300 	ldrd	r5, r3, [r2]
 8003d64:	2b00      	cmp	r3, #0
 8003d66:	f43e aed3 	beq.w	8002b10 <d_print_comp_inner+0xe0>
 8003d6a:	442b      	add	r3, r5
 8003d6c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8003d70:	3d01      	subs	r5, #1
 8003d72:	1e5f      	subs	r7, r3, #1
 8003d74:	f04f 0800 	mov.w	r8, #0
 8003d78:	e009      	b.n	8003d8e <d_print_comp_inner+0x135e>
 8003d7a:	460b      	mov	r3, r1
 8003d7c:	3101      	adds	r1, #1
 8003d7e:	42af      	cmp	r7, r5
 8003d80:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003d84:	54e6      	strb	r6, [r4, r3]
 8003d86:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003d8a:	f43e aec1 	beq.w	8002b10 <d_print_comp_inner+0xe0>
 8003d8e:	29ff      	cmp	r1, #255	; 0xff
 8003d90:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 8003d94:	d1f1      	bne.n	8003d7a <d_print_comp_inner+0x134a>
 8003d96:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003d9a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003d9e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003da2:	4620      	mov	r0, r4
 8003da4:	4798      	blx	r3
 8003da6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003daa:	3301      	adds	r3, #1
 8003dac:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003db0:	2101      	movs	r1, #1
 8003db2:	2300      	movs	r3, #0
 8003db4:	e7e3      	b.n	8003d7e <d_print_comp_inner+0x134e>
 8003db6:	4958      	ldr	r1, [pc, #352]	; (8003f18 <d_print_comp_inner+0x14e8>)
 8003db8:	4620      	mov	r0, r4
 8003dba:	f7fc fc87 	bl	80006cc <d_append_string>
 8003dbe:	693a      	ldr	r2, [r7, #16]
 8003dc0:	4956      	ldr	r1, [pc, #344]	; (8003f1c <d_print_comp_inner+0x14ec>)
 8003dc2:	3201      	adds	r2, #1
 8003dc4:	a804      	add	r0, sp, #16
 8003dc6:	f007 fe99 	bl	800bafc <siprintf>
 8003dca:	a804      	add	r0, sp, #16
 8003dcc:	f002 fa40 	bl	8006250 <strlen>
 8003dd0:	2800      	cmp	r0, #0
 8003dd2:	f000 83fb 	beq.w	80045cc <d_print_comp_inner+0x1b9c>
 8003dd6:	ad04      	add	r5, sp, #16
 8003dd8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003ddc:	eb05 0900 	add.w	r9, r5, r0
 8003de0:	f04f 0800 	mov.w	r8, #0
 8003de4:	e009      	b.n	8003dfa <d_print_comp_inner+0x13ca>
 8003de6:	460b      	mov	r3, r1
 8003de8:	3101      	adds	r1, #1
 8003dea:	45a9      	cmp	r9, r5
 8003dec:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003df0:	54e6      	strb	r6, [r4, r3]
 8003df2:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003df6:	f000 83e9 	beq.w	80045cc <d_print_comp_inner+0x1b9c>
 8003dfa:	29ff      	cmp	r1, #255	; 0xff
 8003dfc:	f815 6b01 	ldrb.w	r6, [r5], #1
 8003e00:	d1f1      	bne.n	8003de6 <d_print_comp_inner+0x13b6>
 8003e02:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003e06:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003e0a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003e0e:	4620      	mov	r0, r4
 8003e10:	4798      	blx	r3
 8003e12:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003e16:	3301      	adds	r3, #1
 8003e18:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003e1c:	2101      	movs	r1, #1
 8003e1e:	2300      	movs	r3, #0
 8003e20:	e7e3      	b.n	8003dea <d_print_comp_inner+0x13ba>
 8003e22:	2111      	movs	r1, #17
 8003e24:	6932      	ldr	r2, [r6, #16]
 8003e26:	4620      	mov	r0, r4
 8003e28:	f000 fe7e 	bl	8004b28 <d_print_comp>
 8003e2c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003e30:	29ff      	cmp	r1, #255	; 0xff
 8003e32:	f000 8299 	beq.w	8004368 <d_print_comp_inner+0x1938>
 8003e36:	1c4a      	adds	r2, r1, #1
 8003e38:	235d      	movs	r3, #93	; 0x5d
 8003e3a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003e3e:	5463      	strb	r3, [r4, r1]
 8003e40:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003e44:	f7fe be64 	b.w	8002b10 <d_print_comp_inner+0xe0>
 8003e48:	2801      	cmp	r0, #1
 8003e4a:	f240 8196 	bls.w	800417a <d_print_comp_inner+0x174a>
 8003e4e:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8003e52:	f7ff bb30 	b.w	80034b6 <d_print_comp_inner+0xa86>
 8003e56:	68f2      	ldr	r2, [r6, #12]
 8003e58:	4930      	ldr	r1, [pc, #192]	; (8003f1c <d_print_comp_inner+0x14ec>)
 8003e5a:	3201      	adds	r2, #1
 8003e5c:	a804      	add	r0, sp, #16
 8003e5e:	f007 fe4d 	bl	800bafc <siprintf>
 8003e62:	a804      	add	r0, sp, #16
 8003e64:	f002 f9f4 	bl	8006250 <strlen>
 8003e68:	b318      	cbz	r0, 8003eb2 <d_print_comp_inner+0x1482>
 8003e6a:	ad04      	add	r5, sp, #16
 8003e6c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003e70:	182f      	adds	r7, r5, r0
 8003e72:	f04f 0800 	mov.w	r8, #0
 8003e76:	e008      	b.n	8003e8a <d_print_comp_inner+0x145a>
 8003e78:	460b      	mov	r3, r1
 8003e7a:	3101      	adds	r1, #1
 8003e7c:	42af      	cmp	r7, r5
 8003e7e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003e82:	54e6      	strb	r6, [r4, r3]
 8003e84:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003e88:	d015      	beq.n	8003eb6 <d_print_comp_inner+0x1486>
 8003e8a:	29ff      	cmp	r1, #255	; 0xff
 8003e8c:	f815 6b01 	ldrb.w	r6, [r5], #1
 8003e90:	d1f2      	bne.n	8003e78 <d_print_comp_inner+0x1448>
 8003e92:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003e96:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003e9a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003e9e:	4620      	mov	r0, r4
 8003ea0:	4798      	blx	r3
 8003ea2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003ea6:	3301      	adds	r3, #1
 8003ea8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003eac:	2101      	movs	r1, #1
 8003eae:	2300      	movs	r3, #0
 8003eb0:	e7e4      	b.n	8003e7c <d_print_comp_inner+0x144c>
 8003eb2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003eb6:	29ff      	cmp	r1, #255	; 0xff
 8003eb8:	f47f a91a 	bne.w	80030f0 <d_print_comp_inner+0x6c0>
 8003ebc:	2500      	movs	r5, #0
 8003ebe:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8003ec2:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8003ec6:	4620      	mov	r0, r4
 8003ec8:	4798      	blx	r3
 8003eca:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003ece:	2201      	movs	r2, #1
 8003ed0:	4413      	add	r3, r2
 8003ed2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003ed6:	4629      	mov	r1, r5
 8003ed8:	f7ff b90b 	b.w	80030f2 <d_print_comp_inner+0x6c2>
 8003edc:	687d      	ldr	r5, [r7, #4]
 8003ede:	782b      	ldrb	r3, [r5, #0]
 8003ee0:	3b61      	subs	r3, #97	; 0x61
 8003ee2:	2b19      	cmp	r3, #25
 8003ee4:	f240 832d 	bls.w	8004542 <d_print_comp_inner+0x1b12>
 8003ee8:	f108 37ff 	add.w	r7, r8, #4294967295
 8003eec:	5deb      	ldrb	r3, [r5, r7]
 8003eee:	2b20      	cmp	r3, #32
 8003ef0:	bf18      	it	ne
 8003ef2:	4647      	movne	r7, r8
 8003ef4:	2f00      	cmp	r7, #0
 8003ef6:	f43e ae0b 	beq.w	8002b10 <d_print_comp_inner+0xe0>
 8003efa:	3d01      	subs	r5, #1
 8003efc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003f00:	442f      	add	r7, r5
 8003f02:	f04f 0800 	mov.w	r8, #0
 8003f06:	e015      	b.n	8003f34 <d_print_comp_inner+0x1504>
 8003f08:	0800d4fc 	.word	0x0800d4fc
 8003f0c:	0800d4f0 	.word	0x0800d4f0
 8003f10:	0800d678 	.word	0x0800d678
 8003f14:	0800d67c 	.word	0x0800d67c
 8003f18:	0800d4b4 	.word	0x0800d4b4
 8003f1c:	0800d440 	.word	0x0800d440
 8003f20:	460b      	mov	r3, r1
 8003f22:	3101      	adds	r1, #1
 8003f24:	42af      	cmp	r7, r5
 8003f26:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003f2a:	54e6      	strb	r6, [r4, r3]
 8003f2c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8003f30:	f43e adee 	beq.w	8002b10 <d_print_comp_inner+0xe0>
 8003f34:	29ff      	cmp	r1, #255	; 0xff
 8003f36:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 8003f3a:	d1f1      	bne.n	8003f20 <d_print_comp_inner+0x14f0>
 8003f3c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003f40:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003f44:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003f48:	4620      	mov	r0, r4
 8003f4a:	4798      	blx	r3
 8003f4c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003f50:	3301      	adds	r3, #1
 8003f52:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003f56:	2101      	movs	r1, #1
 8003f58:	2300      	movs	r3, #0
 8003f5a:	e7e3      	b.n	8003f24 <d_print_comp_inner+0x14f4>
 8003f5c:	4fcc      	ldr	r7, [pc, #816]	; (8004290 <d_print_comp_inner+0x1860>)
 8003f5e:	6932      	ldr	r2, [r6, #16]
 8003f60:	2111      	movs	r1, #17
 8003f62:	4620      	mov	r0, r4
 8003f64:	f000 fde0 	bl	8004b28 <d_print_comp>
 8003f68:	f107 0904 	add.w	r9, r7, #4
 8003f6c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8003f70:	2520      	movs	r5, #32
 8003f72:	f04f 0800 	mov.w	r8, #0
 8003f76:	e00b      	b.n	8003f90 <d_print_comp_inner+0x1560>
 8003f78:	460b      	mov	r3, r1
 8003f7a:	3101      	adds	r1, #1
 8003f7c:	45b9      	cmp	r9, r7
 8003f7e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8003f82:	54e5      	strb	r5, [r4, r3]
 8003f84:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8003f88:	f43e ade5 	beq.w	8002b56 <d_print_comp_inner+0x126>
 8003f8c:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8003f90:	29ff      	cmp	r1, #255	; 0xff
 8003f92:	d1f1      	bne.n	8003f78 <d_print_comp_inner+0x1548>
 8003f94:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003f98:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003f9c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003fa0:	4620      	mov	r0, r4
 8003fa2:	4798      	blx	r3
 8003fa4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8003fa8:	3301      	adds	r3, #1
 8003faa:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8003fae:	2101      	movs	r1, #1
 8003fb0:	2300      	movs	r3, #0
 8003fb2:	e7e3      	b.n	8003f7c <d_print_comp_inner+0x154c>
 8003fb4:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8003fb8:	b133      	cbz	r3, 8003fc8 <d_print_comp_inner+0x1598>
 8003fba:	f8d4 1110 	ldr.w	r1, [r4, #272]	; 0x110
 8003fbe:	9104      	str	r1, [sp, #16]
 8003fc0:	aa04      	add	r2, sp, #16
 8003fc2:	f8c4 2110 	str.w	r2, [r4, #272]	; 0x110
 8003fc6:	9305      	str	r3, [sp, #20]
 8003fc8:	68f2      	ldr	r2, [r6, #12]
 8003fca:	7813      	ldrb	r3, [r2, #0]
 8003fcc:	2b04      	cmp	r3, #4
 8003fce:	f000 8207 	beq.w	80043e0 <d_print_comp_inner+0x19b0>
 8003fd2:	2111      	movs	r1, #17
 8003fd4:	4620      	mov	r0, r4
 8003fd6:	f000 fda7 	bl	8004b28 <d_print_comp>
 8003fda:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8003fde:	2b00      	cmp	r3, #0
 8003fe0:	f43e ad96 	beq.w	8002b10 <d_print_comp_inner+0xe0>
 8003fe4:	9b04      	ldr	r3, [sp, #16]
 8003fe6:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8003fea:	f7fe bd91 	b.w	8002b10 <d_print_comp_inner+0xe0>
 8003fee:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8003ff2:	68f2      	ldr	r2, [r6, #12]
 8003ff4:	4fa7      	ldr	r7, [pc, #668]	; (8004294 <d_print_comp_inner+0x1864>)
 8003ff6:	3301      	adds	r3, #1
 8003ff8:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003ffc:	2111      	movs	r1, #17
 8003ffe:	4620      	mov	r0, r4
 8004000:	f000 fd92 	bl	8004b28 <d_print_comp>
 8004004:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8004008:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800400c:	3b01      	subs	r3, #1
 800400e:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8004012:	f107 0901 	add.w	r9, r7, #1
 8004016:	2529      	movs	r5, #41	; 0x29
 8004018:	f04f 0800 	mov.w	r8, #0
 800401c:	e00a      	b.n	8004034 <d_print_comp_inner+0x1604>
 800401e:	460b      	mov	r3, r1
 8004020:	3101      	adds	r1, #1
 8004022:	454f      	cmp	r7, r9
 8004024:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004028:	54e5      	strb	r5, [r4, r3]
 800402a:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 800402e:	d013      	beq.n	8004058 <d_print_comp_inner+0x1628>
 8004030:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 8004034:	29ff      	cmp	r1, #255	; 0xff
 8004036:	d1f2      	bne.n	800401e <d_print_comp_inner+0x15ee>
 8004038:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800403c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004040:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004044:	4620      	mov	r0, r4
 8004046:	4798      	blx	r3
 8004048:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800404c:	3301      	adds	r3, #1
 800404e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004052:	2101      	movs	r1, #1
 8004054:	2300      	movs	r3, #0
 8004056:	e7e4      	b.n	8004022 <d_print_comp_inner+0x15f2>
 8004058:	6932      	ldr	r2, [r6, #16]
 800405a:	498f      	ldr	r1, [pc, #572]	; (8004298 <d_print_comp_inner+0x1868>)
 800405c:	3201      	adds	r2, #1
 800405e:	a804      	add	r0, sp, #16
 8004060:	f007 fd4c 	bl	800bafc <siprintf>
 8004064:	a804      	add	r0, sp, #16
 8004066:	f002 f8f3 	bl	8006250 <strlen>
 800406a:	2800      	cmp	r0, #0
 800406c:	f43f af21 	beq.w	8003eb2 <d_print_comp_inner+0x1482>
 8004070:	ad04      	add	r5, sp, #16
 8004072:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004076:	182f      	adds	r7, r5, r0
 8004078:	f04f 0800 	mov.w	r8, #0
 800407c:	e009      	b.n	8004092 <d_print_comp_inner+0x1662>
 800407e:	460b      	mov	r3, r1
 8004080:	3101      	adds	r1, #1
 8004082:	42bd      	cmp	r5, r7
 8004084:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004088:	54e6      	strb	r6, [r4, r3]
 800408a:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 800408e:	f43f af12 	beq.w	8003eb6 <d_print_comp_inner+0x1486>
 8004092:	29ff      	cmp	r1, #255	; 0xff
 8004094:	f815 6b01 	ldrb.w	r6, [r5], #1
 8004098:	d1f1      	bne.n	800407e <d_print_comp_inner+0x164e>
 800409a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800409e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80040a2:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80040a6:	4620      	mov	r0, r4
 80040a8:	4798      	blx	r3
 80040aa:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80040ae:	3301      	adds	r3, #1
 80040b0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80040b4:	2101      	movs	r1, #1
 80040b6:	2300      	movs	r3, #0
 80040b8:	e7e3      	b.n	8004082 <d_print_comp_inner+0x1652>
 80040ba:	4f78      	ldr	r7, [pc, #480]	; (800429c <d_print_comp_inner+0x186c>)
 80040bc:	68f2      	ldr	r2, [r6, #12]
 80040be:	2111      	movs	r1, #17
 80040c0:	4620      	mov	r0, r4
 80040c2:	f000 fd31 	bl	8004b28 <d_print_comp>
 80040c6:	f107 0903 	add.w	r9, r7, #3
 80040ca:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80040ce:	252d      	movs	r5, #45	; 0x2d
 80040d0:	f04f 0800 	mov.w	r8, #0
 80040d4:	e00b      	b.n	80040ee <d_print_comp_inner+0x16be>
 80040d6:	460b      	mov	r3, r1
 80040d8:	3101      	adds	r1, #1
 80040da:	45b9      	cmp	r9, r7
 80040dc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80040e0:	54e5      	strb	r5, [r4, r3]
 80040e2:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 80040e6:	f43e ad4a 	beq.w	8002b7e <d_print_comp_inner+0x14e>
 80040ea:	f817 5f01 	ldrb.w	r5, [r7, #1]!
 80040ee:	29ff      	cmp	r1, #255	; 0xff
 80040f0:	d1f1      	bne.n	80040d6 <d_print_comp_inner+0x16a6>
 80040f2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80040f6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80040fa:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80040fe:	4620      	mov	r0, r4
 8004100:	4798      	blx	r3
 8004102:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004106:	3301      	adds	r3, #1
 8004108:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800410c:	2101      	movs	r1, #1
 800410e:	2300      	movs	r3, #0
 8004110:	e7e3      	b.n	80040da <d_print_comp_inner+0x16aa>
 8004112:	68f2      	ldr	r2, [r6, #12]
 8004114:	f7ff b902 	b.w	800331c <d_print_comp_inner+0x8ec>
 8004118:	4632      	mov	r2, r6
 800411a:	2111      	movs	r1, #17
 800411c:	4620      	mov	r0, r4
 800411e:	f000 fd31 	bl	8004b84 <d_print_mod>
 8004122:	f7fe bd10 	b.w	8002b46 <d_print_comp_inner+0x116>
 8004126:	6932      	ldr	r2, [r6, #16]
 8004128:	f8d4 6128 	ldr.w	r6, [r4, #296]	; 0x128
 800412c:	460d      	mov	r5, r1
 800412e:	4620      	mov	r0, r4
 8004130:	2111      	movs	r1, #17
 8004132:	f000 fcf9 	bl	8004b28 <d_print_comp>
 8004136:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800413a:	42b3      	cmp	r3, r6
 800413c:	f47e ace8 	bne.w	8002b10 <d_print_comp_inner+0xe0>
 8004140:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004144:	429d      	cmp	r5, r3
 8004146:	f47e ace3 	bne.w	8002b10 <d_print_comp_inner+0xe0>
 800414a:	3d02      	subs	r5, #2
 800414c:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 8004150:	f7fe bcde 	b.w	8002b10 <d_print_comp_inner+0xe0>
 8004154:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004158:	29ff      	cmp	r1, #255	; 0xff
 800415a:	f000 8361 	beq.w	8004820 <d_print_comp_inner+0x1df0>
 800415e:	1c4b      	adds	r3, r1, #1
 8004160:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004164:	f858 2c0c 	ldr.w	r2, [r8, #-12]
 8004168:	5467      	strb	r7, [r4, r1]
 800416a:	4620      	mov	r0, r4
 800416c:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004170:	2111      	movs	r1, #17
 8004172:	f000 fd07 	bl	8004b84 <d_print_mod>
 8004176:	f7ff b9b2 	b.w	80034de <d_print_comp_inner+0xaae>
 800417a:	68ff      	ldr	r7, [r7, #12]
 800417c:	4652      	mov	r2, sl
 800417e:	2f00      	cmp	r7, #0
 8004180:	f000 84ae 	beq.w	8004ae0 <d_print_comp_inner+0x20b0>
 8004184:	2d04      	cmp	r5, #4
 8004186:	f103 0310 	add.w	r3, r3, #16
 800418a:	f000 81f1 	beq.w	8004570 <d_print_comp_inner+0x1b40>
 800418e:	4629      	mov	r1, r5
 8004190:	f7ff b95c 	b.w	800344c <d_print_comp_inner+0xa1c>
 8004194:	f1b8 0f00 	cmp.w	r8, #0
 8004198:	f43e acba 	beq.w	8002b10 <d_print_comp_inner+0xe0>
 800419c:	46c1      	mov	r9, r8
 800419e:	f108 38ff 	add.w	r8, r8, #4294967295
 80041a2:	f7fe be7c 	b.w	8002e9e <d_print_comp_inner+0x46e>
 80041a6:	f8d4 c114 	ldr.w	ip, [r4, #276]	; 0x114
 80041aa:	68c2      	ldr	r2, [r0, #12]
 80041ac:	4606      	mov	r6, r0
 80041ae:	f7fe bd2a 	b.w	8002c06 <d_print_comp_inner+0x1d6>
 80041b2:	2d07      	cmp	r5, #7
 80041b4:	f47e ad83 	bne.w	8002cbe <d_print_comp_inner+0x28e>
 80041b8:	6933      	ldr	r3, [r6, #16]
 80041ba:	7819      	ldrb	r1, [r3, #0]
 80041bc:	2900      	cmp	r1, #0
 80041be:	f47e ad7e 	bne.w	8002cbe <d_print_comp_inner+0x28e>
 80041c2:	6919      	ldr	r1, [r3, #16]
 80041c4:	2901      	cmp	r1, #1
 80041c6:	f47e ad7a 	bne.w	8002cbe <d_print_comp_inner+0x28e>
 80041ca:	2f3d      	cmp	r7, #61	; 0x3d
 80041cc:	f47e ad77 	bne.w	8002cbe <d_print_comp_inner+0x28e>
 80041d0:	68db      	ldr	r3, [r3, #12]
 80041d2:	781b      	ldrb	r3, [r3, #0]
 80041d4:	2b30      	cmp	r3, #48	; 0x30
 80041d6:	f000 849f 	beq.w	8004b18 <d_print_comp_inner+0x20e8>
 80041da:	2b31      	cmp	r3, #49	; 0x31
 80041dc:	f47e ad6f 	bne.w	8002cbe <d_print_comp_inner+0x28e>
 80041e0:	492f      	ldr	r1, [pc, #188]	; (80042a0 <d_print_comp_inner+0x1870>)
 80041e2:	f7ff b884 	b.w	80032ee <d_print_comp_inner+0x8be>
 80041e6:	4e2f      	ldr	r6, [pc, #188]	; (80042a4 <d_print_comp_inner+0x1874>)
 80041e8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80041ec:	1d77      	adds	r7, r6, #5
 80041ee:	255f      	movs	r5, #95	; 0x5f
 80041f0:	e00b      	b.n	800420a <d_print_comp_inner+0x17da>
 80041f2:	460b      	mov	r3, r1
 80041f4:	3101      	adds	r1, #1
 80041f6:	42b7      	cmp	r7, r6
 80041f8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80041fc:	54e5      	strb	r5, [r4, r3]
 80041fe:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8004202:	f43e ac85 	beq.w	8002b10 <d_print_comp_inner+0xe0>
 8004206:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 800420a:	29ff      	cmp	r1, #255	; 0xff
 800420c:	d1f1      	bne.n	80041f2 <d_print_comp_inner+0x17c2>
 800420e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004212:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004216:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800421a:	4620      	mov	r0, r4
 800421c:	4798      	blx	r3
 800421e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004222:	3301      	adds	r3, #1
 8004224:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004228:	2101      	movs	r1, #1
 800422a:	2300      	movs	r3, #0
 800422c:	e7e3      	b.n	80041f6 <d_print_comp_inner+0x17c6>
 800422e:	491e      	ldr	r1, [pc, #120]	; (80042a8 <d_print_comp_inner+0x1878>)
 8004230:	f7fc fa4c 	bl	80006cc <d_append_string>
 8004234:	4918      	ldr	r1, [pc, #96]	; (8004298 <d_print_comp_inner+0x1868>)
 8004236:	462a      	mov	r2, r5
 8004238:	a804      	add	r0, sp, #16
 800423a:	f007 fc5f 	bl	800bafc <siprintf>
 800423e:	a804      	add	r0, sp, #16
 8004240:	f002 f806 	bl	8006250 <strlen>
 8004244:	b390      	cbz	r0, 80042ac <d_print_comp_inner+0x187c>
 8004246:	ad04      	add	r5, sp, #16
 8004248:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800424c:	182f      	adds	r7, r5, r0
 800424e:	f04f 0800 	mov.w	r8, #0
 8004252:	e008      	b.n	8004266 <d_print_comp_inner+0x1836>
 8004254:	460b      	mov	r3, r1
 8004256:	3101      	adds	r1, #1
 8004258:	42bd      	cmp	r5, r7
 800425a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800425e:	54e6      	strb	r6, [r4, r3]
 8004260:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8004264:	d024      	beq.n	80042b0 <d_print_comp_inner+0x1880>
 8004266:	29ff      	cmp	r1, #255	; 0xff
 8004268:	f815 6b01 	ldrb.w	r6, [r5], #1
 800426c:	d1f2      	bne.n	8004254 <d_print_comp_inner+0x1824>
 800426e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004272:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004276:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800427a:	4620      	mov	r0, r4
 800427c:	4798      	blx	r3
 800427e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004282:	3301      	adds	r3, #1
 8004284:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004288:	2101      	movs	r1, #1
 800428a:	2300      	movs	r3, #0
 800428c:	e7e4      	b.n	8004258 <d_print_comp_inner+0x1828>
 800428e:	bf00      	nop
 8004290:	0800d5e8 	.word	0x0800d5e8
 8004294:	0800d720 	.word	0x0800d720
 8004298:	0800d440 	.word	0x0800d440
 800429c:	0800d524 	.word	0x0800d524
 80042a0:	0800d69c 	.word	0x0800d69c
 80042a4:	0800d648 	.word	0x0800d648
 80042a8:	0800d6cc 	.word	0x0800d6cc
 80042ac:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80042b0:	29ff      	cmp	r1, #255	; 0xff
 80042b2:	f000 82f5 	beq.w	80048a0 <d_print_comp_inner+0x1e70>
 80042b6:	237d      	movs	r3, #125	; 0x7d
 80042b8:	1c4a      	adds	r2, r1, #1
 80042ba:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80042be:	5463      	strb	r3, [r4, r1]
 80042c0:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80042c4:	f7fe bc24 	b.w	8002b10 <d_print_comp_inner+0xe0>
 80042c8:	4610      	mov	r0, r2
 80042ca:	2500      	movs	r5, #0
 80042cc:	f7fe bc90 	b.w	8002bf0 <d_print_comp_inner+0x1c0>
 80042d0:	68f2      	ldr	r2, [r6, #12]
 80042d2:	49c2      	ldr	r1, [pc, #776]	; (80045dc <d_print_comp_inner+0x1bac>)
 80042d4:	3201      	adds	r2, #1
 80042d6:	a804      	add	r0, sp, #16
 80042d8:	f007 fc10 	bl	800bafc <siprintf>
 80042dc:	a804      	add	r0, sp, #16
 80042de:	f001 ffb7 	bl	8006250 <strlen>
 80042e2:	2800      	cmp	r0, #0
 80042e4:	f43e ac14 	beq.w	8002b10 <d_print_comp_inner+0xe0>
 80042e8:	ad04      	add	r5, sp, #16
 80042ea:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80042ee:	182f      	adds	r7, r5, r0
 80042f0:	f04f 0800 	mov.w	r8, #0
 80042f4:	e009      	b.n	800430a <d_print_comp_inner+0x18da>
 80042f6:	460b      	mov	r3, r1
 80042f8:	3101      	adds	r1, #1
 80042fa:	42bd      	cmp	r5, r7
 80042fc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004300:	54e6      	strb	r6, [r4, r3]
 8004302:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8004306:	f43e ac03 	beq.w	8002b10 <d_print_comp_inner+0xe0>
 800430a:	29ff      	cmp	r1, #255	; 0xff
 800430c:	f815 6b01 	ldrb.w	r6, [r5], #1
 8004310:	d1f1      	bne.n	80042f6 <d_print_comp_inner+0x18c6>
 8004312:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004316:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800431a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800431e:	4620      	mov	r0, r4
 8004320:	4798      	blx	r3
 8004322:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004326:	3301      	adds	r3, #1
 8004328:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800432c:	2101      	movs	r1, #1
 800432e:	2300      	movs	r3, #0
 8004330:	e7e3      	b.n	80042fa <d_print_comp_inner+0x18ca>
 8004332:	4611      	mov	r1, r2
 8004334:	f7fc f964 	bl	8000600 <d_lookup_template_argument>
 8004338:	4602      	mov	r2, r0
 800433a:	2800      	cmp	r0, #0
 800433c:	f43e abe5 	beq.w	8002b0a <d_print_comp_inner+0xda>
 8004340:	7803      	ldrb	r3, [r0, #0]
 8004342:	2b2f      	cmp	r3, #47	; 0x2f
 8004344:	f43e abd6 	beq.w	8002af4 <d_print_comp_inner+0xc4>
 8004348:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 800434c:	682b      	ldr	r3, [r5, #0]
 800434e:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8004352:	2111      	movs	r1, #17
 8004354:	4620      	mov	r0, r4
 8004356:	f000 fbe7 	bl	8004b28 <d_print_comp>
 800435a:	f8c4 5110 	str.w	r5, [r4, #272]	; 0x110
 800435e:	f7fe bbd7 	b.w	8002b10 <d_print_comp_inner+0xe0>
 8004362:	2500      	movs	r5, #0
 8004364:	f7fe bcab 	b.w	8002cbe <d_print_comp_inner+0x28e>
 8004368:	2500      	movs	r5, #0
 800436a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800436e:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8004372:	4620      	mov	r0, r4
 8004374:	4798      	blx	r3
 8004376:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800437a:	2201      	movs	r2, #1
 800437c:	4413      	add	r3, r2
 800437e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004382:	4629      	mov	r1, r5
 8004384:	e558      	b.n	8003e38 <d_print_comp_inner+0x1408>
 8004386:	2500      	movs	r5, #0
 8004388:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800438c:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8004390:	4620      	mov	r0, r4
 8004392:	4798      	blx	r3
 8004394:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004398:	2201      	movs	r2, #1
 800439a:	4413      	add	r3, r2
 800439c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80043a0:	4629      	mov	r1, r5
 80043a2:	f7fe bfc5 	b.w	8003330 <d_print_comp_inner+0x900>
 80043a6:	2b01      	cmp	r3, #1
 80043a8:	f63f a885 	bhi.w	80034b6 <d_print_comp_inner+0xa86>
 80043ac:	2d04      	cmp	r5, #4
 80043ae:	f43e abac 	beq.w	8002b0a <d_print_comp_inner+0xda>
 80043b2:	468e      	mov	lr, r1
 80043b4:	f101 0b10 	add.w	fp, r1, #16
 80043b8:	c90f      	ldmia	r1, {r0, r1, r2, r3}
 80043ba:	e88b 000f 	stmia.w	fp, {r0, r1, r2, r3}
 80043be:	e9ce 7a01 	strd	r7, sl, [lr, #4]
 80043c2:	68ff      	ldr	r7, [r7, #12]
 80043c4:	f8ce e010 	str.w	lr, [lr, #16]
 80043c8:	3501      	adds	r5, #1
 80043ca:	f8ce c00c 	str.w	ip, [lr, #12]
 80043ce:	4659      	mov	r1, fp
 80043d0:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
 80043d4:	2f00      	cmp	r7, #0
 80043d6:	f43e ab98 	beq.w	8002b0a <d_print_comp_inner+0xda>
 80043da:	783a      	ldrb	r2, [r7, #0]
 80043dc:	f7ff b858 	b.w	8003490 <d_print_comp_inner+0xa60>
 80043e0:	68d2      	ldr	r2, [r2, #12]
 80043e2:	2111      	movs	r1, #17
 80043e4:	4620      	mov	r0, r4
 80043e6:	f000 fb9f 	bl	8004b28 <d_print_comp>
 80043ea:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 80043ee:	b113      	cbz	r3, 80043f6 <d_print_comp_inner+0x19c6>
 80043f0:	9b04      	ldr	r3, [sp, #16]
 80043f2:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80043f6:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 80043fa:	2b3c      	cmp	r3, #60	; 0x3c
 80043fc:	f000 82c0 	beq.w	8004980 <d_print_comp_inner+0x1f50>
 8004400:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004404:	29ff      	cmp	r1, #255	; 0xff
 8004406:	f000 82ab 	beq.w	8004960 <d_print_comp_inner+0x1f30>
 800440a:	1c4a      	adds	r2, r1, #1
 800440c:	233c      	movs	r3, #60	; 0x3c
 800440e:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004412:	5463      	strb	r3, [r4, r1]
 8004414:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004418:	68f3      	ldr	r3, [r6, #12]
 800441a:	2111      	movs	r1, #17
 800441c:	691a      	ldr	r2, [r3, #16]
 800441e:	4620      	mov	r0, r4
 8004420:	f000 fb82 	bl	8004b28 <d_print_comp>
 8004424:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8004428:	2b3e      	cmp	r3, #62	; 0x3e
 800442a:	f000 8294 	beq.w	8004956 <d_print_comp_inner+0x1f26>
 800442e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004432:	29ff      	cmp	r1, #255	; 0xff
 8004434:	f000 8281 	beq.w	800493a <d_print_comp_inner+0x1f0a>
 8004438:	233e      	movs	r3, #62	; 0x3e
 800443a:	1c4a      	adds	r2, r1, #1
 800443c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004440:	5463      	strb	r3, [r4, r1]
 8004442:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004446:	f7fe bb63 	b.w	8002b10 <d_print_comp_inner+0xe0>
 800444a:	68fb      	ldr	r3, [r7, #12]
 800444c:	681e      	ldr	r6, [r3, #0]
 800444e:	7833      	ldrb	r3, [r6, #0]
 8004450:	2b61      	cmp	r3, #97	; 0x61
 8004452:	f040 8092 	bne.w	800457a <d_print_comp_inner+0x1b4a>
 8004456:	7872      	ldrb	r2, [r6, #1]
 8004458:	2a64      	cmp	r2, #100	; 0x64
 800445a:	f040 808e 	bne.w	800457a <d_print_comp_inner+0x1b4a>
 800445e:	78b2      	ldrb	r2, [r6, #2]
 8004460:	2a00      	cmp	r2, #0
 8004462:	f040 808a 	bne.w	800457a <d_print_comp_inner+0x1b4a>
 8004466:	782a      	ldrb	r2, [r5, #0]
 8004468:	2a03      	cmp	r2, #3
 800446a:	f000 828e 	beq.w	800498a <d_print_comp_inner+0x1f5a>
 800446e:	2a39      	cmp	r2, #57	; 0x39
 8004470:	f000 8296 	beq.w	80049a0 <d_print_comp_inner+0x1f70>
 8004474:	2b73      	cmp	r3, #115	; 0x73
 8004476:	d111      	bne.n	800449c <d_print_comp_inner+0x1a6c>
 8004478:	7872      	ldrb	r2, [r6, #1]
 800447a:	2a5a      	cmp	r2, #90	; 0x5a
 800447c:	d135      	bne.n	80044ea <d_print_comp_inner+0x1aba>
 800447e:	78b2      	ldrb	r2, [r6, #2]
 8004480:	bb9a      	cbnz	r2, 80044ea <d_print_comp_inner+0x1aba>
 8004482:	4629      	mov	r1, r5
 8004484:	4620      	mov	r0, r4
 8004486:	f7fc f8d7 	bl	8000638 <d_find_pack>
 800448a:	f7fc f803 	bl	8000494 <d_pack_length>
 800448e:	4601      	mov	r1, r0
 8004490:	4620      	mov	r0, r4
 8004492:	b015      	add	sp, #84	; 0x54
 8004494:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004498:	f7fc b97c 	b.w	8000794 <d_append_num>
 800449c:	463a      	mov	r2, r7
 800449e:	2111      	movs	r1, #17
 80044a0:	4620      	mov	r0, r4
 80044a2:	f001 f97b 	bl	800579c <d_print_expr_op>
 80044a6:	7833      	ldrb	r3, [r6, #0]
 80044a8:	2b67      	cmp	r3, #103	; 0x67
 80044aa:	d107      	bne.n	80044bc <d_print_comp_inner+0x1a8c>
 80044ac:	7872      	ldrb	r2, [r6, #1]
 80044ae:	2a73      	cmp	r2, #115	; 0x73
 80044b0:	d104      	bne.n	80044bc <d_print_comp_inner+0x1a8c>
 80044b2:	78b2      	ldrb	r2, [r6, #2]
 80044b4:	b912      	cbnz	r2, 80044bc <d_print_comp_inner+0x1a8c>
 80044b6:	462a      	mov	r2, r5
 80044b8:	f7fe bb4e 	b.w	8002b58 <d_print_comp_inner+0x128>
 80044bc:	2b73      	cmp	r3, #115	; 0x73
 80044be:	f47f a922 	bne.w	8003706 <d_print_comp_inner+0xcd6>
 80044c2:	7873      	ldrb	r3, [r6, #1]
 80044c4:	2b74      	cmp	r3, #116	; 0x74
 80044c6:	f47f a91e 	bne.w	8003706 <d_print_comp_inner+0xcd6>
 80044ca:	78b3      	ldrb	r3, [r6, #2]
 80044cc:	2b00      	cmp	r3, #0
 80044ce:	f47f a91a 	bne.w	8003706 <d_print_comp_inner+0xcd6>
 80044d2:	2128      	movs	r1, #40	; 0x28
 80044d4:	4620      	mov	r0, r4
 80044d6:	f7fc f871 	bl	80005bc <d_append_char>
 80044da:	2111      	movs	r1, #17
 80044dc:	462a      	mov	r2, r5
 80044de:	4620      	mov	r0, r4
 80044e0:	f000 fb22 	bl	8004b28 <d_print_comp>
 80044e4:	2129      	movs	r1, #41	; 0x29
 80044e6:	f7fe bc17 	b.w	8002d18 <d_print_comp_inner+0x2e8>
 80044ea:	2b73      	cmp	r3, #115	; 0x73
 80044ec:	d1d6      	bne.n	800449c <d_print_comp_inner+0x1a6c>
 80044ee:	7873      	ldrb	r3, [r6, #1]
 80044f0:	2b50      	cmp	r3, #80	; 0x50
 80044f2:	d1d3      	bne.n	800449c <d_print_comp_inner+0x1a6c>
 80044f4:	78b3      	ldrb	r3, [r6, #2]
 80044f6:	2b00      	cmp	r3, #0
 80044f8:	d1d0      	bne.n	800449c <d_print_comp_inner+0x1a6c>
 80044fa:	461e      	mov	r6, r3
 80044fc:	e004      	b.n	8004508 <d_print_comp_inner+0x1ad8>
 80044fe:	3601      	adds	r6, #1
 8004500:	692d      	ldr	r5, [r5, #16]
 8004502:	2d00      	cmp	r5, #0
 8004504:	f000 819c 	beq.w	8004840 <d_print_comp_inner+0x1e10>
 8004508:	782b      	ldrb	r3, [r5, #0]
 800450a:	2b2f      	cmp	r3, #47	; 0x2f
 800450c:	f040 8198 	bne.w	8004840 <d_print_comp_inner+0x1e10>
 8004510:	68eb      	ldr	r3, [r5, #12]
 8004512:	2b00      	cmp	r3, #0
 8004514:	f000 8194 	beq.w	8004840 <d_print_comp_inner+0x1e10>
 8004518:	781a      	ldrb	r2, [r3, #0]
 800451a:	2a4c      	cmp	r2, #76	; 0x4c
 800451c:	d1ef      	bne.n	80044fe <d_print_comp_inner+0x1ace>
 800451e:	68d9      	ldr	r1, [r3, #12]
 8004520:	4620      	mov	r0, r4
 8004522:	f7fc f889 	bl	8000638 <d_find_pack>
 8004526:	4603      	mov	r3, r0
 8004528:	b148      	cbz	r0, 800453e <d_print_comp_inner+0x1b0e>
 800452a:	2300      	movs	r3, #0
 800452c:	e004      	b.n	8004538 <d_print_comp_inner+0x1b08>
 800452e:	68c2      	ldr	r2, [r0, #12]
 8004530:	b12a      	cbz	r2, 800453e <d_print_comp_inner+0x1b0e>
 8004532:	6900      	ldr	r0, [r0, #16]
 8004534:	3301      	adds	r3, #1
 8004536:	b110      	cbz	r0, 800453e <d_print_comp_inner+0x1b0e>
 8004538:	7802      	ldrb	r2, [r0, #0]
 800453a:	2a2f      	cmp	r2, #47	; 0x2f
 800453c:	d0f7      	beq.n	800452e <d_print_comp_inner+0x1afe>
 800453e:	441e      	add	r6, r3
 8004540:	e7de      	b.n	8004500 <d_print_comp_inner+0x1ad0>
 8004542:	29ff      	cmp	r1, #255	; 0xff
 8004544:	f000 81d3 	beq.w	80048ee <d_print_comp_inner+0x1ebe>
 8004548:	1c4b      	adds	r3, r1, #1
 800454a:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800454e:	2320      	movs	r3, #32
 8004550:	5463      	strb	r3, [r4, r1]
 8004552:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004556:	e4c7      	b.n	8003ee8 <d_print_comp_inner+0x14b8>
 8004558:	4632      	mov	r2, r6
 800455a:	2111      	movs	r1, #17
 800455c:	4620      	mov	r0, r4
 800455e:	f000 fb11 	bl	8004b84 <d_print_mod>
 8004562:	f7fe bb36 	b.w	8002bd2 <d_print_comp_inner+0x1a2>
 8004566:	491e      	ldr	r1, [pc, #120]	; (80045e0 <d_print_comp_inner+0x1bb0>)
 8004568:	f7fc f8b0 	bl	80006cc <d_append_string>
 800456c:	f7ff b8e0 	b.w	8003730 <d_print_comp_inner+0xd00>
 8004570:	2301      	movs	r3, #1
 8004572:	e9c4 a345 	strd	sl, r3, [r4, #276]	; 0x114
 8004576:	f7fe bacb 	b.w	8002b10 <d_print_comp_inner+0xe0>
 800457a:	782a      	ldrb	r2, [r5, #0]
 800457c:	e777      	b.n	800446e <d_print_comp_inner+0x1a3e>
 800457e:	68f2      	ldr	r2, [r6, #12]
 8004580:	460d      	mov	r5, r1
 8004582:	f7fe bb40 	b.w	8002c06 <d_print_comp_inner+0x1d6>
 8004586:	2700      	movs	r7, #0
 8004588:	5567      	strb	r7, [r4, r5]
 800458a:	4629      	mov	r1, r5
 800458c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004590:	4620      	mov	r0, r4
 8004592:	4798      	blx	r3
 8004594:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004598:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 800459c:	3301      	adds	r3, #1
 800459e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80045a2:	463d      	mov	r5, r7
 80045a4:	f7fe bb48 	b.w	8002c38 <d_print_comp_inner+0x208>
 80045a8:	2600      	movs	r6, #0
 80045aa:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80045ae:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80045b2:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80045b6:	4620      	mov	r0, r4
 80045b8:	4798      	blx	r3
 80045ba:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80045be:	2201      	movs	r2, #1
 80045c0:	4413      	add	r3, r2
 80045c2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80045c6:	4631      	mov	r1, r6
 80045c8:	f7fe bd82 	b.w	80030d0 <d_print_comp_inner+0x6a0>
 80045cc:	4905      	ldr	r1, [pc, #20]	; (80045e4 <d_print_comp_inner+0x1bb4>)
 80045ce:	4620      	mov	r0, r4
 80045d0:	f7fc f87c 	bl	80006cc <d_append_string>
 80045d4:	68ff      	ldr	r7, [r7, #12]
 80045d6:	463a      	mov	r2, r7
 80045d8:	f7fe babe 	b.w	8002b58 <d_print_comp_inner+0x128>
 80045dc:	0800d440 	.word	0x0800d440
 80045e0:	0800d638 	.word	0x0800d638
 80045e4:	0800d4c4 	.word	0x0800d4c4
 80045e8:	2500      	movs	r5, #0
 80045ea:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80045ee:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80045f2:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80045f6:	4620      	mov	r0, r4
 80045f8:	4798      	blx	r3
 80045fa:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80045fe:	2201      	movs	r2, #1
 8004600:	4413      	add	r3, r2
 8004602:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004606:	4629      	mov	r1, r5
 8004608:	f7fe be81 	b.w	800330e <d_print_comp_inner+0x8de>
 800460c:	2600      	movs	r6, #0
 800460e:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8004612:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8004616:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
 800461a:	4798      	blx	r3
 800461c:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
 8004620:	2301      	movs	r3, #1
 8004622:	441a      	add	r2, r3
 8004624:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8004628:	4631      	mov	r1, r6
 800462a:	f7fe bed2 	b.w	80033d2 <d_print_comp_inner+0x9a2>
 800462e:	2500      	movs	r5, #0
 8004630:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8004634:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8004638:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
 800463c:	4798      	blx	r3
 800463e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004642:	2201      	movs	r2, #1
 8004644:	4413      	add	r3, r2
 8004646:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800464a:	4629      	mov	r1, r5
 800464c:	f7fe ba91 	b.w	8002b72 <d_print_comp_inner+0x142>
 8004650:	2500      	movs	r5, #0
 8004652:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004656:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 800465a:	4620      	mov	r0, r4
 800465c:	4798      	blx	r3
 800465e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004662:	3301      	adds	r3, #1
 8004664:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004668:	4629      	mov	r1, r5
 800466a:	2301      	movs	r3, #1
 800466c:	f7ff bab6 	b.w	8003bdc <d_print_comp_inner+0x11ac>
 8004670:	2120      	movs	r1, #32
 8004672:	4620      	mov	r0, r4
 8004674:	f7fb ffa2 	bl	80005bc <d_append_char>
 8004678:	f7ff baaa 	b.w	8003bd0 <d_print_comp_inner+0x11a0>
 800467c:	2500      	movs	r5, #0
 800467e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004682:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8004686:	4620      	mov	r0, r4
 8004688:	4798      	blx	r3
 800468a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800468e:	3301      	adds	r3, #1
 8004690:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004694:	4629      	mov	r1, r5
 8004696:	2301      	movs	r3, #1
 8004698:	f7ff ba8a 	b.w	8003bb0 <d_print_comp_inner+0x1180>
 800469c:	2120      	movs	r1, #32
 800469e:	4620      	mov	r0, r4
 80046a0:	f7fb ff8c 	bl	80005bc <d_append_char>
 80046a4:	f7ff ba7e 	b.w	8003ba4 <d_print_comp_inner+0x1174>
 80046a8:	2700      	movs	r7, #0
 80046aa:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80046ae:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 80046b2:	4620      	mov	r0, r4
 80046b4:	4798      	blx	r3
 80046b6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80046ba:	68f2      	ldr	r2, [r6, #12]
 80046bc:	3301      	adds	r3, #1
 80046be:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80046c2:	4639      	mov	r1, r7
 80046c4:	2301      	movs	r3, #1
 80046c6:	f7fe bb00 	b.w	8002cca <d_print_comp_inner+0x29a>
 80046ca:	212d      	movs	r1, #45	; 0x2d
 80046cc:	4620      	mov	r0, r4
 80046ce:	f7fb ff75 	bl	80005bc <d_append_char>
 80046d2:	f7fe bb14 	b.w	8002cfe <d_print_comp_inner+0x2ce>
 80046d6:	2700      	movs	r7, #0
 80046d8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80046dc:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 80046e0:	4620      	mov	r0, r4
 80046e2:	4798      	blx	r3
 80046e4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80046e8:	3301      	adds	r3, #1
 80046ea:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80046ee:	4639      	mov	r1, r7
 80046f0:	2301      	movs	r3, #1
 80046f2:	f7fe bafa 	b.w	8002cea <d_print_comp_inner+0x2ba>
 80046f6:	6933      	ldr	r3, [r6, #16]
 80046f8:	781b      	ldrb	r3, [r3, #0]
 80046fa:	2b00      	cmp	r3, #0
 80046fc:	f47e aadf 	bne.w	8002cbe <d_print_comp_inner+0x28e>
 8004700:	2f3e      	cmp	r7, #62	; 0x3e
 8004702:	f000 81f8 	beq.w	8004af6 <d_print_comp_inner+0x20c6>
 8004706:	6932      	ldr	r2, [r6, #16]
 8004708:	2111      	movs	r1, #17
 800470a:	4620      	mov	r0, r4
 800470c:	3d02      	subs	r5, #2
 800470e:	f000 fa0b 	bl	8004b28 <d_print_comp>
 8004712:	2d04      	cmp	r5, #4
 8004714:	f63e a9fc 	bhi.w	8002b10 <d_print_comp_inner+0xe0>
 8004718:	e8df f005 	tbb	[pc, r5]
 800471c:	06090c0f 	.word	0x06090c0f
 8004720:	03          	.byte	0x03
 8004721:	00          	.byte	0x00
 8004722:	49c9      	ldr	r1, [pc, #804]	; (8004a48 <d_print_comp_inner+0x2018>)
 8004724:	f7fe bde3 	b.w	80032ee <d_print_comp_inner+0x8be>
 8004728:	49c8      	ldr	r1, [pc, #800]	; (8004a4c <d_print_comp_inner+0x201c>)
 800472a:	f7fe bde0 	b.w	80032ee <d_print_comp_inner+0x8be>
 800472e:	49c8      	ldr	r1, [pc, #800]	; (8004a50 <d_print_comp_inner+0x2020>)
 8004730:	f7fe bddd 	b.w	80032ee <d_print_comp_inner+0x8be>
 8004734:	216c      	movs	r1, #108	; 0x6c
 8004736:	f7fe baef 	b.w	8002d18 <d_print_comp_inner+0x2e8>
 800473a:	2175      	movs	r1, #117	; 0x75
 800473c:	f7fe baec 	b.w	8002d18 <d_print_comp_inner+0x2e8>
 8004740:	781b      	ldrb	r3, [r3, #0]
 8004742:	2b73      	cmp	r3, #115	; 0x73
 8004744:	d00c      	beq.n	8004760 <d_print_comp_inner+0x1d30>
 8004746:	3b63      	subs	r3, #99	; 0x63
 8004748:	b2db      	uxtb	r3, r3
 800474a:	2b0f      	cmp	r3, #15
 800474c:	f63e af77 	bhi.w	800363e <d_print_comp_inner+0xc0e>
 8004750:	49c0      	ldr	r1, [pc, #768]	; (8004a54 <d_print_comp_inner+0x2024>)
 8004752:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8004756:	f8d3 37fc 	ldr.w	r3, [r3, #2044]	; 0x7fc
 800475a:	2b00      	cmp	r3, #0
 800475c:	f43e af6f 	beq.w	800363e <d_print_comp_inner+0xc0e>
 8004760:	2111      	movs	r1, #17
 8004762:	4620      	mov	r0, r4
 8004764:	f001 f81a 	bl	800579c <d_print_expr_op>
 8004768:	213c      	movs	r1, #60	; 0x3c
 800476a:	4620      	mov	r0, r4
 800476c:	f7fb ff26 	bl	80005bc <d_append_char>
 8004770:	6933      	ldr	r3, [r6, #16]
 8004772:	2111      	movs	r1, #17
 8004774:	68da      	ldr	r2, [r3, #12]
 8004776:	4620      	mov	r0, r4
 8004778:	f000 f9d6 	bl	8004b28 <d_print_comp>
 800477c:	49b6      	ldr	r1, [pc, #728]	; (8004a58 <d_print_comp_inner+0x2028>)
 800477e:	4620      	mov	r0, r4
 8004780:	f7fb ffa4 	bl	80006cc <d_append_string>
 8004784:	6933      	ldr	r3, [r6, #16]
 8004786:	2111      	movs	r1, #17
 8004788:	691a      	ldr	r2, [r3, #16]
 800478a:	4620      	mov	r0, r4
 800478c:	f000 f9cc 	bl	8004b28 <d_print_comp>
 8004790:	2129      	movs	r1, #41	; 0x29
 8004792:	f7fe bac1 	b.w	8002d18 <d_print_comp_inner+0x2e8>
 8004796:	f8d0 c134 	ldr.w	ip, [r0, #308]	; 0x134
 800479a:	f1bc 0f00 	cmp.w	ip, #0
 800479e:	f340 8107 	ble.w	80049b0 <d_print_comp_inner+0x1f80>
 80047a2:	f8d0 e130 	ldr.w	lr, [r0, #304]	; 0x130
 80047a6:	462b      	mov	r3, r5
 80047a8:	4670      	mov	r0, lr
 80047aa:	e004      	b.n	80047b6 <d_print_comp_inner+0x1d86>
 80047ac:	4563      	cmp	r3, ip
 80047ae:	f100 0008 	add.w	r0, r0, #8
 80047b2:	f000 80fd 	beq.w	80049b0 <d_print_comp_inner+0x1f80>
 80047b6:	f85e 1033 	ldr.w	r1, [lr, r3, lsl #3]
 80047ba:	428a      	cmp	r2, r1
 80047bc:	f103 0301 	add.w	r3, r3, #1
 80047c0:	d1f4      	bne.n	80047ac <d_print_comp_inner+0x1d7c>
 80047c2:	f8d4 c12c 	ldr.w	ip, [r4, #300]	; 0x12c
 80047c6:	4663      	mov	r3, ip
 80047c8:	f1bc 0f00 	cmp.w	ip, #0
 80047cc:	d104      	bne.n	80047d8 <d_print_comp_inner+0x1da8>
 80047ce:	e09d      	b.n	800490c <d_print_comp_inner+0x1edc>
 80047d0:	685b      	ldr	r3, [r3, #4]
 80047d2:	2b00      	cmp	r3, #0
 80047d4:	f000 809a 	beq.w	800490c <d_print_comp_inner+0x1edc>
 80047d8:	6819      	ldr	r1, [r3, #0]
 80047da:	4291      	cmp	r1, r2
 80047dc:	d003      	beq.n	80047e6 <d_print_comp_inner+0x1db6>
 80047de:	42b1      	cmp	r1, r6
 80047e0:	d1f6      	bne.n	80047d0 <d_print_comp_inner+0x1da0>
 80047e2:	459c      	cmp	ip, r3
 80047e4:	d0f4      	beq.n	80047d0 <d_print_comp_inner+0x1da0>
 80047e6:	4611      	mov	r1, r2
 80047e8:	4620      	mov	r0, r4
 80047ea:	9201      	str	r2, [sp, #4]
 80047ec:	f7fb ff08 	bl	8000600 <d_lookup_template_argument>
 80047f0:	9a01      	ldr	r2, [sp, #4]
 80047f2:	2800      	cmp	r0, #0
 80047f4:	f43e a989 	beq.w	8002b0a <d_print_comp_inner+0xda>
 80047f8:	7803      	ldrb	r3, [r0, #0]
 80047fa:	2b2f      	cmp	r3, #47	; 0x2f
 80047fc:	f47e a9f8 	bne.w	8002bf0 <d_print_comp_inner+0x1c0>
 8004800:	f8d4 1124 	ldr.w	r1, [r4, #292]	; 0x124
 8004804:	2900      	cmp	r1, #0
 8004806:	f6fe a9fc 	blt.w	8002c02 <d_print_comp_inner+0x1d2>
 800480a:	f7fb fe75 	bl	80004f8 <d_index_template_argument.part.0>
 800480e:	2800      	cmp	r0, #0
 8004810:	f000 816a 	beq.w	8004ae8 <d_print_comp_inner+0x20b8>
 8004814:	7803      	ldrb	r3, [r0, #0]
 8004816:	f7fe b9eb 	b.w	8002bf0 <d_print_comp_inner+0x1c0>
 800481a:	68c2      	ldr	r2, [r0, #12]
 800481c:	f7fe b97c 	b.w	8002b18 <d_print_comp_inner+0xe8>
 8004820:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004824:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004828:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800482c:	4620      	mov	r0, r4
 800482e:	4798      	blx	r3
 8004830:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004834:	3301      	adds	r3, #1
 8004836:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800483a:	4631      	mov	r1, r6
 800483c:	2301      	movs	r3, #1
 800483e:	e48f      	b.n	8004160 <d_print_comp_inner+0x1730>
 8004840:	4986      	ldr	r1, [pc, #536]	; (8004a5c <d_print_comp_inner+0x202c>)
 8004842:	4632      	mov	r2, r6
 8004844:	a804      	add	r0, sp, #16
 8004846:	f007 f959 	bl	800bafc <siprintf>
 800484a:	a804      	add	r0, sp, #16
 800484c:	f001 fd00 	bl	8006250 <strlen>
 8004850:	2800      	cmp	r0, #0
 8004852:	f43e a95d 	beq.w	8002b10 <d_print_comp_inner+0xe0>
 8004856:	ad04      	add	r5, sp, #16
 8004858:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800485c:	182f      	adds	r7, r5, r0
 800485e:	f04f 0800 	mov.w	r8, #0
 8004862:	e009      	b.n	8004878 <d_print_comp_inner+0x1e48>
 8004864:	460b      	mov	r3, r1
 8004866:	3101      	adds	r1, #1
 8004868:	42af      	cmp	r7, r5
 800486a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800486e:	54e6      	strb	r6, [r4, r3]
 8004870:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8004874:	f43e a94c 	beq.w	8002b10 <d_print_comp_inner+0xe0>
 8004878:	29ff      	cmp	r1, #255	; 0xff
 800487a:	f815 6b01 	ldrb.w	r6, [r5], #1
 800487e:	d1f1      	bne.n	8004864 <d_print_comp_inner+0x1e34>
 8004880:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004884:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004888:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800488c:	4620      	mov	r0, r4
 800488e:	4798      	blx	r3
 8004890:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004894:	3301      	adds	r3, #1
 8004896:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800489a:	2101      	movs	r1, #1
 800489c:	2300      	movs	r3, #0
 800489e:	e7e3      	b.n	8004868 <d_print_comp_inner+0x1e38>
 80048a0:	2500      	movs	r5, #0
 80048a2:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80048a6:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80048aa:	4620      	mov	r0, r4
 80048ac:	4798      	blx	r3
 80048ae:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80048b2:	3301      	adds	r3, #1
 80048b4:	4629      	mov	r1, r5
 80048b6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80048ba:	e4fc      	b.n	80042b6 <d_print_comp_inner+0x1886>
 80048bc:	2111      	movs	r1, #17
 80048be:	4620      	mov	r0, r4
 80048c0:	4652      	mov	r2, sl
 80048c2:	f001 f967 	bl	8005b94 <d_print_subexpr>
 80048c6:	4966      	ldr	r1, [pc, #408]	; (8004a60 <d_print_comp_inner+0x2030>)
 80048c8:	f7fe bd11 	b.w	80032ee <d_print_comp_inner+0x8be>
 80048cc:	2500      	movs	r5, #0
 80048ce:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80048d2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80048d6:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80048da:	4620      	mov	r0, r4
 80048dc:	4798      	blx	r3
 80048de:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80048e2:	3301      	adds	r3, #1
 80048e4:	4629      	mov	r1, r5
 80048e6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80048ea:	f7fe bf2f 	b.w	800374c <d_print_comp_inner+0xd1c>
 80048ee:	2600      	movs	r6, #0
 80048f0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80048f4:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80048f8:	4620      	mov	r0, r4
 80048fa:	4798      	blx	r3
 80048fc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004900:	687d      	ldr	r5, [r7, #4]
 8004902:	3301      	adds	r3, #1
 8004904:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004908:	4631      	mov	r1, r6
 800490a:	e61d      	b.n	8004548 <d_print_comp_inner+0x1b18>
 800490c:	6843      	ldr	r3, [r0, #4]
 800490e:	f8d4 8110 	ldr.w	r8, [r4, #272]	; 0x110
 8004912:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8004916:	4611      	mov	r1, r2
 8004918:	4620      	mov	r0, r4
 800491a:	9201      	str	r2, [sp, #4]
 800491c:	f7fb fe70 	bl	8000600 <d_lookup_template_argument>
 8004920:	9a01      	ldr	r2, [sp, #4]
 8004922:	2800      	cmp	r0, #0
 8004924:	f000 80e3 	beq.w	8004aee <d_print_comp_inner+0x20be>
 8004928:	2501      	movs	r5, #1
 800492a:	e765      	b.n	80047f8 <d_print_comp_inner+0x1dc8>
 800492c:	68ff      	ldr	r7, [r7, #12]
 800492e:	2f00      	cmp	r7, #0
 8004930:	f43e a8eb 	beq.w	8002b0a <d_print_comp_inner+0xda>
 8004934:	783a      	ldrb	r2, [r7, #0]
 8004936:	f7fe bda7 	b.w	8003488 <d_print_comp_inner+0xa58>
 800493a:	2500      	movs	r5, #0
 800493c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8004940:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8004944:	4620      	mov	r0, r4
 8004946:	4798      	blx	r3
 8004948:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800494c:	3301      	adds	r3, #1
 800494e:	4629      	mov	r1, r5
 8004950:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004954:	e570      	b.n	8004438 <d_print_comp_inner+0x1a08>
 8004956:	2120      	movs	r1, #32
 8004958:	4620      	mov	r0, r4
 800495a:	f7fb fe2f 	bl	80005bc <d_append_char>
 800495e:	e566      	b.n	800442e <d_print_comp_inner+0x19fe>
 8004960:	2500      	movs	r5, #0
 8004962:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004966:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800496a:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 800496e:	4620      	mov	r0, r4
 8004970:	4798      	blx	r3
 8004972:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004976:	3301      	adds	r3, #1
 8004978:	4629      	mov	r1, r5
 800497a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800497e:	e544      	b.n	800440a <d_print_comp_inner+0x19da>
 8004980:	2120      	movs	r1, #32
 8004982:	4620      	mov	r0, r4
 8004984:	f7fb fe1a 	bl	80005bc <d_append_char>
 8004988:	e53a      	b.n	8004400 <d_print_comp_inner+0x19d0>
 800498a:	68ea      	ldr	r2, [r5, #12]
 800498c:	7811      	ldrb	r1, [r2, #0]
 800498e:	2901      	cmp	r1, #1
 8004990:	f47f ad70 	bne.w	8004474 <d_print_comp_inner+0x1a44>
 8004994:	6929      	ldr	r1, [r5, #16]
 8004996:	7809      	ldrb	r1, [r1, #0]
 8004998:	2929      	cmp	r1, #41	; 0x29
 800499a:	bf08      	it	eq
 800499c:	4615      	moveq	r5, r2
 800499e:	e569      	b.n	8004474 <d_print_comp_inner+0x1a44>
 80049a0:	68ea      	ldr	r2, [r5, #12]
 80049a2:	2111      	movs	r1, #17
 80049a4:	4620      	mov	r0, r4
 80049a6:	f001 f8f5 	bl	8005b94 <d_print_subexpr>
 80049aa:	463a      	mov	r2, r7
 80049ac:	f7fe beb4 	b.w	8003718 <d_print_comp_inner+0xce8>
 80049b0:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 80049b4:	4563      	cmp	r3, ip
 80049b6:	f77e a8a8 	ble.w	8002b0a <d_print_comp_inner+0xda>
 80049ba:	f8d4 1130 	ldr.w	r1, [r4, #304]	; 0x130
 80049be:	f8d4 e110 	ldr.w	lr, [r4, #272]	; 0x110
 80049c2:	eb01 03cc 	add.w	r3, r1, ip, lsl #3
 80049c6:	f10c 0001 	add.w	r0, ip, #1
 80049ca:	f8c4 0134 	str.w	r0, [r4, #308]	; 0x134
 80049ce:	3304      	adds	r3, #4
 80049d0:	f841 203c 	str.w	r2, [r1, ip, lsl #3]
 80049d4:	f1be 0f00 	cmp.w	lr, #0
 80049d8:	f000 8092 	beq.w	8004b00 <d_print_comp_inner+0x20d0>
 80049dc:	e9d4 0950 	ldrd	r0, r9, [r4, #320]	; 0x140
 80049e0:	4694      	mov	ip, r2
 80049e2:	e010      	b.n	8004a06 <d_print_comp_inner+0x1fd6>
 80049e4:	f8d4 113c 	ldr.w	r1, [r4, #316]	; 0x13c
 80049e8:	f8de 2004 	ldr.w	r2, [lr, #4]
 80049ec:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
 80049f0:	3001      	adds	r0, #1
 80049f2:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
 80049f6:	604a      	str	r2, [r1, #4]
 80049f8:	6019      	str	r1, [r3, #0]
 80049fa:	f8de e000 	ldr.w	lr, [lr]
 80049fe:	460b      	mov	r3, r1
 8004a00:	f1be 0f00 	cmp.w	lr, #0
 8004a04:	d07b      	beq.n	8004afe <d_print_comp_inner+0x20ce>
 8004a06:	4581      	cmp	r9, r0
 8004a08:	dcec      	bgt.n	80049e4 <d_print_comp_inner+0x1fb4>
 8004a0a:	f7fe b87e 	b.w	8002b0a <d_print_comp_inner+0xda>
 8004a0e:	6912      	ldr	r2, [r2, #16]
 8004a10:	2111      	movs	r1, #17
 8004a12:	f000 f889 	bl	8004b28 <d_print_comp>
 8004a16:	9b06      	ldr	r3, [sp, #24]
 8004a18:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
 8004a1c:	2b00      	cmp	r3, #0
 8004a1e:	f43e af07 	beq.w	8003830 <d_print_comp_inner+0xe00>
 8004a22:	f7fe b875 	b.w	8002b10 <d_print_comp_inner+0xe0>
 8004a26:	68da      	ldr	r2, [r3, #12]
 8004a28:	6891      	ldr	r1, [r2, #8]
 8004a2a:	2901      	cmp	r1, #1
 8004a2c:	f47e ae1c 	bne.w	8003668 <d_print_comp_inner+0xc38>
 8004a30:	6852      	ldr	r2, [r2, #4]
 8004a32:	7812      	ldrb	r2, [r2, #0]
 8004a34:	2a3e      	cmp	r2, #62	; 0x3e
 8004a36:	f47e ae17 	bne.w	8003668 <d_print_comp_inner+0xc38>
 8004a3a:	2128      	movs	r1, #40	; 0x28
 8004a3c:	4620      	mov	r0, r4
 8004a3e:	f7fb fdbd 	bl	80005bc <d_append_char>
 8004a42:	68f3      	ldr	r3, [r6, #12]
 8004a44:	f7fe be10 	b.w	8003668 <d_print_comp_inner+0xc38>
 8004a48:	0800d690 	.word	0x0800d690
 8004a4c:	0800d68c 	.word	0x0800d68c
 8004a50:	0800d688 	.word	0x0800d688
 8004a54:	0800c890 	.word	0x0800c890
 8004a58:	0800d66c 	.word	0x0800d66c
 8004a5c:	0800d440 	.word	0x0800d440
 8004a60:	0800d6c0 	.word	0x0800d6c0
 8004a64:	4620      	mov	r0, r4
 8004a66:	215b      	movs	r1, #91	; 0x5b
 8004a68:	f7fb fda8 	bl	80005bc <d_append_char>
 8004a6c:	6933      	ldr	r3, [r6, #16]
 8004a6e:	4620      	mov	r0, r4
 8004a70:	691a      	ldr	r2, [r3, #16]
 8004a72:	2111      	movs	r1, #17
 8004a74:	f000 f858 	bl	8004b28 <d_print_comp>
 8004a78:	215d      	movs	r1, #93	; 0x5d
 8004a7a:	4620      	mov	r0, r4
 8004a7c:	f7fb fd9e 	bl	80005bc <d_append_char>
 8004a80:	f7fe be1a 	b.w	80036b8 <d_print_comp_inner+0xc88>
 8004a84:	6913      	ldr	r3, [r2, #16]
 8004a86:	68d2      	ldr	r2, [r2, #12]
 8004a88:	781b      	ldrb	r3, [r3, #0]
 8004a8a:	2b29      	cmp	r3, #41	; 0x29
 8004a8c:	bf1c      	itt	ne
 8004a8e:	2301      	movne	r3, #1
 8004a90:	f8c4 3118 	strne.w	r3, [r4, #280]	; 0x118
 8004a94:	2111      	movs	r1, #17
 8004a96:	4620      	mov	r0, r4
 8004a98:	f001 f87c 	bl	8005b94 <d_print_subexpr>
 8004a9c:	f7fe bdf5 	b.w	800368a <d_print_comp_inner+0xc5a>
 8004aa0:	462a      	mov	r2, r5
 8004aa2:	2111      	movs	r1, #17
 8004aa4:	4620      	mov	r0, r4
 8004aa6:	f000 fe79 	bl	800579c <d_print_expr_op>
 8004aaa:	f7fe bdff 	b.w	80036ac <d_print_comp_inner+0xc7c>
 8004aae:	491c      	ldr	r1, [pc, #112]	; (8004b20 <d_print_comp_inner+0x20f0>)
 8004ab0:	4620      	mov	r0, r4
 8004ab2:	f7fb fe0b 	bl	80006cc <d_append_string>
 8004ab6:	68f3      	ldr	r3, [r6, #12]
 8004ab8:	b143      	cbz	r3, 8004acc <d_print_comp_inner+0x209c>
 8004aba:	2111      	movs	r1, #17
 8004abc:	4620      	mov	r0, r4
 8004abe:	4632      	mov	r2, r6
 8004ac0:	f001 f868 	bl	8005b94 <d_print_subexpr>
 8004ac4:	2120      	movs	r1, #32
 8004ac6:	4620      	mov	r0, r4
 8004ac8:	f7fb fd78 	bl	80005bc <d_append_char>
 8004acc:	463a      	mov	r2, r7
 8004ace:	2111      	movs	r1, #17
 8004ad0:	4620      	mov	r0, r4
 8004ad2:	f000 f829 	bl	8004b28 <d_print_comp>
 8004ad6:	2d00      	cmp	r5, #0
 8004ad8:	f47e ae15 	bne.w	8003706 <d_print_comp_inner+0xcd6>
 8004adc:	f7fe b818 	b.w	8002b10 <d_print_comp_inner+0xe0>
 8004ae0:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8004ae4:	f7fe b811 	b.w	8002b0a <d_print_comp_inner+0xda>
 8004ae8:	2d00      	cmp	r5, #0
 8004aea:	f43e a80e 	beq.w	8002b0a <d_print_comp_inner+0xda>
 8004aee:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
 8004af2:	f7fe b80a 	b.w	8002b0a <d_print_comp_inner+0xda>
 8004af6:	212d      	movs	r1, #45	; 0x2d
 8004af8:	f7fb fd60 	bl	80005bc <d_append_char>
 8004afc:	e603      	b.n	8004706 <d_print_comp_inner+0x1cd6>
 8004afe:	4662      	mov	r2, ip
 8004b00:	2100      	movs	r1, #0
 8004b02:	6019      	str	r1, [r3, #0]
 8004b04:	e66f      	b.n	80047e6 <d_print_comp_inner+0x1db6>
 8004b06:	68f2      	ldr	r2, [r6, #12]
 8004b08:	f7fe b815 	b.w	8002b36 <d_print_comp_inner+0x106>
 8004b0c:	463a      	mov	r2, r7
 8004b0e:	2111      	movs	r1, #17
 8004b10:	f000 fe44 	bl	800579c <d_print_expr_op>
 8004b14:	f7fe bdf7 	b.w	8003706 <d_print_comp_inner+0xcd6>
 8004b18:	4902      	ldr	r1, [pc, #8]	; (8004b24 <d_print_comp_inner+0x20f4>)
 8004b1a:	f7fe bbe8 	b.w	80032ee <d_print_comp_inner+0x8be>
 8004b1e:	bf00      	nop
 8004b20:	0800d680 	.word	0x0800d680
 8004b24:	0800d694 	.word	0x0800d694

08004b28 <d_print_comp>:
 8004b28:	b530      	push	{r4, r5, lr}
 8004b2a:	4605      	mov	r5, r0
 8004b2c:	b083      	sub	sp, #12
 8004b2e:	b31a      	cbz	r2, 8004b78 <d_print_comp+0x50>
 8004b30:	6853      	ldr	r3, [r2, #4]
 8004b32:	2b01      	cmp	r3, #1
 8004b34:	4614      	mov	r4, r2
 8004b36:	dc1f      	bgt.n	8004b78 <d_print_comp+0x50>
 8004b38:	f8d0 111c 	ldr.w	r1, [r0, #284]	; 0x11c
 8004b3c:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8004b40:	dc1a      	bgt.n	8004b78 <d_print_comp+0x50>
 8004b42:	3301      	adds	r3, #1
 8004b44:	6053      	str	r3, [r2, #4]
 8004b46:	3101      	adds	r1, #1
 8004b48:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 8004b4c:	f8c0 111c 	str.w	r1, [r0, #284]	; 0x11c
 8004b50:	f8c0 d12c 	str.w	sp, [r0, #300]	; 0x12c
 8004b54:	2111      	movs	r1, #17
 8004b56:	e9cd 2300 	strd	r2, r3, [sp]
 8004b5a:	f7fd ff69 	bl	8002a30 <d_print_comp_inner>
 8004b5e:	6862      	ldr	r2, [r4, #4]
 8004b60:	f8d5 311c 	ldr.w	r3, [r5, #284]	; 0x11c
 8004b64:	9901      	ldr	r1, [sp, #4]
 8004b66:	f8c5 112c 	str.w	r1, [r5, #300]	; 0x12c
 8004b6a:	3a01      	subs	r2, #1
 8004b6c:	3b01      	subs	r3, #1
 8004b6e:	6062      	str	r2, [r4, #4]
 8004b70:	f8c5 311c 	str.w	r3, [r5, #284]	; 0x11c
 8004b74:	b003      	add	sp, #12
 8004b76:	bd30      	pop	{r4, r5, pc}
 8004b78:	2301      	movs	r3, #1
 8004b7a:	f8c5 3118 	str.w	r3, [r5, #280]	; 0x118
 8004b7e:	b003      	add	sp, #12
 8004b80:	bd30      	pop	{r4, r5, pc}
 8004b82:	bf00      	nop

08004b84 <d_print_mod>:
 8004b84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004b88:	7813      	ldrb	r3, [r2, #0]
 8004b8a:	3b03      	subs	r3, #3
 8004b8c:	4615      	mov	r5, r2
 8004b8e:	4604      	mov	r4, r0
 8004b90:	2b4e      	cmp	r3, #78	; 0x4e
 8004b92:	d850      	bhi.n	8004c36 <d_print_mod+0xb2>
 8004b94:	e8df f013 	tbh	[pc, r3, lsl #1]
 8004b98:	004f011a 	.word	0x004f011a
 8004b9c:	004f004f 	.word	0x004f004f
 8004ba0:	004f004f 	.word	0x004f004f
 8004ba4:	004f004f 	.word	0x004f004f
 8004ba8:	004f004f 	.word	0x004f004f
 8004bac:	004f004f 	.word	0x004f004f
 8004bb0:	004f004f 	.word	0x004f004f
 8004bb4:	004f004f 	.word	0x004f004f
 8004bb8:	004f004f 	.word	0x004f004f
 8004bbc:	004f004f 	.word	0x004f004f
 8004bc0:	004f004f 	.word	0x004f004f
 8004bc4:	007b0054 	.word	0x007b0054
 8004bc8:	005400a2 	.word	0x005400a2
 8004bcc:	00a2007b 	.word	0x00a2007b
 8004bd0:	00fb00ee 	.word	0x00fb00ee
 8004bd4:	02830108 	.word	0x02830108
 8004bd8:	012d011f 	.word	0x012d011f
 8004bdc:	01780152 	.word	0x01780152
 8004be0:	004f004f 	.word	0x004f004f
 8004be4:	004f004f 	.word	0x004f004f
 8004be8:	004f019e 	.word	0x004f019e
 8004bec:	004f01ce 	.word	0x004f01ce
 8004bf0:	004f004f 	.word	0x004f004f
 8004bf4:	004f004f 	.word	0x004f004f
 8004bf8:	004f004f 	.word	0x004f004f
 8004bfc:	004f004f 	.word	0x004f004f
 8004c00:	004f004f 	.word	0x004f004f
 8004c04:	004f004f 	.word	0x004f004f
 8004c08:	004f004f 	.word	0x004f004f
 8004c0c:	004f004f 	.word	0x004f004f
 8004c10:	004f004f 	.word	0x004f004f
 8004c14:	004f004f 	.word	0x004f004f
 8004c18:	004f004f 	.word	0x004f004f
 8004c1c:	004f004f 	.word	0x004f004f
 8004c20:	004f004f 	.word	0x004f004f
 8004c24:	004f004f 	.word	0x004f004f
 8004c28:	004f004f 	.word	0x004f004f
 8004c2c:	01f5004f 	.word	0x01f5004f
 8004c30:	0230004f 	.word	0x0230004f
 8004c34:	00c7      	.short	0x00c7
 8004c36:	462a      	mov	r2, r5
 8004c38:	2111      	movs	r1, #17
 8004c3a:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004c3e:	e773      	b.n	8004b28 <d_print_comp>
 8004c40:	4ed4      	ldr	r6, [pc, #848]	; (8004f94 <d_print_mod+0x410>)
 8004c42:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8004c46:	f106 0708 	add.w	r7, r6, #8
 8004c4a:	2520      	movs	r5, #32
 8004c4c:	f04f 0800 	mov.w	r8, #0
 8004c50:	e00b      	b.n	8004c6a <d_print_mod+0xe6>
 8004c52:	460b      	mov	r3, r1
 8004c54:	3101      	adds	r1, #1
 8004c56:	42be      	cmp	r6, r7
 8004c58:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004c5c:	54e5      	strb	r5, [r4, r3]
 8004c5e:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8004c62:	f000 80c4 	beq.w	8004dee <d_print_mod+0x26a>
 8004c66:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8004c6a:	29ff      	cmp	r1, #255	; 0xff
 8004c6c:	d1f1      	bne.n	8004c52 <d_print_mod+0xce>
 8004c6e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004c72:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004c76:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004c7a:	4620      	mov	r0, r4
 8004c7c:	4798      	blx	r3
 8004c7e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004c82:	3301      	adds	r3, #1
 8004c84:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004c88:	2101      	movs	r1, #1
 8004c8a:	2300      	movs	r3, #0
 8004c8c:	e7e3      	b.n	8004c56 <d_print_mod+0xd2>
 8004c8e:	4ec2      	ldr	r6, [pc, #776]	; (8004f98 <d_print_mod+0x414>)
 8004c90:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8004c94:	f106 0708 	add.w	r7, r6, #8
 8004c98:	2520      	movs	r5, #32
 8004c9a:	f04f 0800 	mov.w	r8, #0
 8004c9e:	e00b      	b.n	8004cb8 <d_print_mod+0x134>
 8004ca0:	460b      	mov	r3, r1
 8004ca2:	3101      	adds	r1, #1
 8004ca4:	42b7      	cmp	r7, r6
 8004ca6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004caa:	54e5      	strb	r5, [r4, r3]
 8004cac:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8004cb0:	f000 809d 	beq.w	8004dee <d_print_mod+0x26a>
 8004cb4:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8004cb8:	29ff      	cmp	r1, #255	; 0xff
 8004cba:	d1f1      	bne.n	8004ca0 <d_print_mod+0x11c>
 8004cbc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004cc0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004cc4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004cc8:	4620      	mov	r0, r4
 8004cca:	4798      	blx	r3
 8004ccc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004cd0:	3301      	adds	r3, #1
 8004cd2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004cd6:	2101      	movs	r1, #1
 8004cd8:	2300      	movs	r3, #0
 8004cda:	e7e3      	b.n	8004ca4 <d_print_mod+0x120>
 8004cdc:	4eaf      	ldr	r6, [pc, #700]	; (8004f9c <d_print_mod+0x418>)
 8004cde:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8004ce2:	1d77      	adds	r7, r6, #5
 8004ce4:	2520      	movs	r5, #32
 8004ce6:	f04f 0800 	mov.w	r8, #0
 8004cea:	e00a      	b.n	8004d02 <d_print_mod+0x17e>
 8004cec:	460b      	mov	r3, r1
 8004cee:	3101      	adds	r1, #1
 8004cf0:	42b7      	cmp	r7, r6
 8004cf2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004cf6:	54e5      	strb	r5, [r4, r3]
 8004cf8:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8004cfc:	d077      	beq.n	8004dee <d_print_mod+0x26a>
 8004cfe:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8004d02:	29ff      	cmp	r1, #255	; 0xff
 8004d04:	d1f2      	bne.n	8004cec <d_print_mod+0x168>
 8004d06:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004d0a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004d0e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004d12:	4620      	mov	r0, r4
 8004d14:	4798      	blx	r3
 8004d16:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004d1a:	3301      	adds	r3, #1
 8004d1c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004d20:	2101      	movs	r1, #1
 8004d22:	2300      	movs	r3, #0
 8004d24:	e7e4      	b.n	8004cf0 <d_print_mod+0x16c>
 8004d26:	4f9e      	ldr	r7, [pc, #632]	; (8004fa0 <d_print_mod+0x41c>)
 8004d28:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8004d2c:	f107 0905 	add.w	r9, r7, #5
 8004d30:	2620      	movs	r6, #32
 8004d32:	f04f 0800 	mov.w	r8, #0
 8004d36:	e00b      	b.n	8004d50 <d_print_mod+0x1cc>
 8004d38:	460b      	mov	r3, r1
 8004d3a:	3101      	adds	r1, #1
 8004d3c:	45b9      	cmp	r9, r7
 8004d3e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004d42:	54e6      	strb	r6, [r4, r3]
 8004d44:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8004d48:	f000 817c 	beq.w	8005044 <d_print_mod+0x4c0>
 8004d4c:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8004d50:	29ff      	cmp	r1, #255	; 0xff
 8004d52:	d1f1      	bne.n	8004d38 <d_print_mod+0x1b4>
 8004d54:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004d58:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004d5c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004d60:	4620      	mov	r0, r4
 8004d62:	4798      	blx	r3
 8004d64:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004d68:	3301      	adds	r3, #1
 8004d6a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004d6e:	2101      	movs	r1, #1
 8004d70:	2300      	movs	r3, #0
 8004d72:	e7e3      	b.n	8004d3c <d_print_mod+0x1b8>
 8004d74:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8004d78:	2bff      	cmp	r3, #255	; 0xff
 8004d7a:	f000 81cd 	beq.w	8005118 <d_print_mod+0x594>
 8004d7e:	2220      	movs	r2, #32
 8004d80:	1c59      	adds	r1, r3, #1
 8004d82:	f8c0 1100 	str.w	r1, [r0, #256]	; 0x100
 8004d86:	54c2      	strb	r2, [r0, r3]
 8004d88:	f880 2104 	strb.w	r2, [r0, #260]	; 0x104
 8004d8c:	e025      	b.n	8004dda <d_print_mod+0x256>
 8004d8e:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8004d92:	2bff      	cmp	r3, #255	; 0xff
 8004d94:	f000 81b1 	beq.w	80050fa <d_print_mod+0x576>
 8004d98:	1c59      	adds	r1, r3, #1
 8004d9a:	2220      	movs	r2, #32
 8004d9c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004da0:	54e2      	strb	r2, [r4, r3]
 8004da2:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8004da6:	e026      	b.n	8004df6 <d_print_mod+0x272>
 8004da8:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8004dac:	29ff      	cmp	r1, #255	; 0xff
 8004dae:	f000 8194 	beq.w	80050da <d_print_mod+0x556>
 8004db2:	1c4a      	adds	r2, r1, #1
 8004db4:	2320      	movs	r3, #32
 8004db6:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004dba:	5463      	strb	r3, [r4, r1]
 8004dbc:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004dc0:	692a      	ldr	r2, [r5, #16]
 8004dc2:	4620      	mov	r0, r4
 8004dc4:	2111      	movs	r1, #17
 8004dc6:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004dca:	e6ad      	b.n	8004b28 <d_print_comp>
 8004dcc:	68ea      	ldr	r2, [r5, #12]
 8004dce:	2111      	movs	r1, #17
 8004dd0:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004dd4:	e6a8      	b.n	8004b28 <d_print_comp>
 8004dd6:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8004dda:	29ff      	cmp	r1, #255	; 0xff
 8004ddc:	f000 81bb 	beq.w	8005156 <d_print_mod+0x5d2>
 8004de0:	1c4a      	adds	r2, r1, #1
 8004de2:	2326      	movs	r3, #38	; 0x26
 8004de4:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004de8:	5463      	strb	r3, [r4, r1]
 8004dea:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004dee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004df2:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8004df6:	4d6b      	ldr	r5, [pc, #428]	; (8004fa4 <d_print_mod+0x420>)
 8004df8:	2626      	movs	r6, #38	; 0x26
 8004dfa:	1c6f      	adds	r7, r5, #1
 8004dfc:	f04f 0800 	mov.w	r8, #0
 8004e00:	e00a      	b.n	8004e18 <d_print_mod+0x294>
 8004e02:	460b      	mov	r3, r1
 8004e04:	3101      	adds	r1, #1
 8004e06:	42bd      	cmp	r5, r7
 8004e08:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004e0c:	54e6      	strb	r6, [r4, r3]
 8004e0e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8004e12:	d0ec      	beq.n	8004dee <d_print_mod+0x26a>
 8004e14:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 8004e18:	29ff      	cmp	r1, #255	; 0xff
 8004e1a:	d1f2      	bne.n	8004e02 <d_print_mod+0x27e>
 8004e1c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004e20:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004e24:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004e28:	4620      	mov	r0, r4
 8004e2a:	4798      	blx	r3
 8004e2c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004e30:	3301      	adds	r3, #1
 8004e32:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004e36:	2101      	movs	r1, #1
 8004e38:	2300      	movs	r3, #0
 8004e3a:	e7e4      	b.n	8004e06 <d_print_mod+0x282>
 8004e3c:	4e5a      	ldr	r6, [pc, #360]	; (8004fa8 <d_print_mod+0x424>)
 8004e3e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8004e42:	f106 0708 	add.w	r7, r6, #8
 8004e46:	2520      	movs	r5, #32
 8004e48:	f04f 0800 	mov.w	r8, #0
 8004e4c:	e00a      	b.n	8004e64 <d_print_mod+0x2e0>
 8004e4e:	460b      	mov	r3, r1
 8004e50:	3101      	adds	r1, #1
 8004e52:	42b7      	cmp	r7, r6
 8004e54:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004e58:	54e5      	strb	r5, [r4, r3]
 8004e5a:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8004e5e:	d0c6      	beq.n	8004dee <d_print_mod+0x26a>
 8004e60:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8004e64:	29ff      	cmp	r1, #255	; 0xff
 8004e66:	d1f2      	bne.n	8004e4e <d_print_mod+0x2ca>
 8004e68:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004e6c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004e70:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004e74:	4620      	mov	r0, r4
 8004e76:	4798      	blx	r3
 8004e78:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004e7c:	3301      	adds	r3, #1
 8004e7e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004e82:	2101      	movs	r1, #1
 8004e84:	2300      	movs	r3, #0
 8004e86:	e7e4      	b.n	8004e52 <d_print_mod+0x2ce>
 8004e88:	4e48      	ldr	r6, [pc, #288]	; (8004fac <d_print_mod+0x428>)
 8004e8a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8004e8e:	f106 070a 	add.w	r7, r6, #10
 8004e92:	2520      	movs	r5, #32
 8004e94:	f04f 0800 	mov.w	r8, #0
 8004e98:	e00a      	b.n	8004eb0 <d_print_mod+0x32c>
 8004e9a:	460b      	mov	r3, r1
 8004e9c:	3101      	adds	r1, #1
 8004e9e:	42b7      	cmp	r7, r6
 8004ea0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004ea4:	54e5      	strb	r5, [r4, r3]
 8004ea6:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8004eaa:	d0a0      	beq.n	8004dee <d_print_mod+0x26a>
 8004eac:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8004eb0:	29ff      	cmp	r1, #255	; 0xff
 8004eb2:	d1f2      	bne.n	8004e9a <d_print_mod+0x316>
 8004eb4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004eb8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004ebc:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004ec0:	4620      	mov	r0, r4
 8004ec2:	4798      	blx	r3
 8004ec4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004ec8:	3301      	adds	r3, #1
 8004eca:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004ece:	2101      	movs	r1, #1
 8004ed0:	2300      	movs	r3, #0
 8004ed2:	e7e4      	b.n	8004e9e <d_print_mod+0x31a>
 8004ed4:	f890 3104 	ldrb.w	r3, [r0, #260]	; 0x104
 8004ed8:	2b28      	cmp	r3, #40	; 0x28
 8004eda:	f040 80d4 	bne.w	8005086 <d_print_mod+0x502>
 8004ede:	4e34      	ldr	r6, [pc, #208]	; (8004fb0 <d_print_mod+0x42c>)
 8004ee0:	68ea      	ldr	r2, [r5, #12]
 8004ee2:	2111      	movs	r1, #17
 8004ee4:	4620      	mov	r0, r4
 8004ee6:	f7ff fe1f 	bl	8004b28 <d_print_comp>
 8004eea:	1cb7      	adds	r7, r6, #2
 8004eec:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004ef0:	253a      	movs	r5, #58	; 0x3a
 8004ef2:	f04f 0800 	mov.w	r8, #0
 8004ef6:	e00b      	b.n	8004f10 <d_print_mod+0x38c>
 8004ef8:	460b      	mov	r3, r1
 8004efa:	3101      	adds	r1, #1
 8004efc:	42b7      	cmp	r7, r6
 8004efe:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004f02:	54e5      	strb	r5, [r4, r3]
 8004f04:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8004f08:	f43f af71 	beq.w	8004dee <d_print_mod+0x26a>
 8004f0c:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8004f10:	29ff      	cmp	r1, #255	; 0xff
 8004f12:	d1f1      	bne.n	8004ef8 <d_print_mod+0x374>
 8004f14:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004f18:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004f1c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004f20:	4620      	mov	r0, r4
 8004f22:	4798      	blx	r3
 8004f24:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004f28:	3301      	adds	r3, #1
 8004f2a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004f2e:	2101      	movs	r1, #1
 8004f30:	2300      	movs	r3, #0
 8004f32:	e7e3      	b.n	8004efc <d_print_mod+0x378>
 8004f34:	4f1f      	ldr	r7, [pc, #124]	; (8004fb4 <d_print_mod+0x430>)
 8004f36:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8004f3a:	f107 0909 	add.w	r9, r7, #9
 8004f3e:	2620      	movs	r6, #32
 8004f40:	f04f 0800 	mov.w	r8, #0
 8004f44:	e00b      	b.n	8004f5e <d_print_mod+0x3da>
 8004f46:	460b      	mov	r3, r1
 8004f48:	3101      	adds	r1, #1
 8004f4a:	454f      	cmp	r7, r9
 8004f4c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004f50:	54e6      	strb	r6, [r4, r3]
 8004f52:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8004f56:	f000 8084 	beq.w	8005062 <d_print_mod+0x4de>
 8004f5a:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8004f5e:	29ff      	cmp	r1, #255	; 0xff
 8004f60:	d1f1      	bne.n	8004f46 <d_print_mod+0x3c2>
 8004f62:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004f66:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004f6a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004f6e:	4620      	mov	r0, r4
 8004f70:	4798      	blx	r3
 8004f72:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004f76:	3301      	adds	r3, #1
 8004f78:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004f7c:	2101      	movs	r1, #1
 8004f7e:	2300      	movs	r3, #0
 8004f80:	e7e3      	b.n	8004f4a <d_print_mod+0x3c6>
 8004f82:	4e0d      	ldr	r6, [pc, #52]	; (8004fb8 <d_print_mod+0x434>)
 8004f84:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8004f88:	f106 0710 	add.w	r7, r6, #16
 8004f8c:	2520      	movs	r5, #32
 8004f8e:	f04f 0800 	mov.w	r8, #0
 8004f92:	e01f      	b.n	8004fd4 <d_print_mod+0x450>
 8004f94:	0800d740 	.word	0x0800d740
 8004f98:	0800d74c 	.word	0x0800d74c
 8004f9c:	0800d758 	.word	0x0800d758
 8004fa0:	0800d780 	.word	0x0800d780
 8004fa4:	0800d788 	.word	0x0800d788
 8004fa8:	0800d78c 	.word	0x0800d78c
 8004fac:	0800d798 	.word	0x0800d798
 8004fb0:	0800d7a4 	.word	0x0800d7a4
 8004fb4:	0800d7a8 	.word	0x0800d7a8
 8004fb8:	0800d760 	.word	0x0800d760
 8004fbc:	460b      	mov	r3, r1
 8004fbe:	3101      	adds	r1, #1
 8004fc0:	42b7      	cmp	r7, r6
 8004fc2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004fc6:	54e5      	strb	r5, [r4, r3]
 8004fc8:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8004fcc:	f43f af0f 	beq.w	8004dee <d_print_mod+0x26a>
 8004fd0:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8004fd4:	29ff      	cmp	r1, #255	; 0xff
 8004fd6:	d1f1      	bne.n	8004fbc <d_print_mod+0x438>
 8004fd8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004fdc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004fe0:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004fe4:	4620      	mov	r0, r4
 8004fe6:	4798      	blx	r3
 8004fe8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8004fec:	3301      	adds	r3, #1
 8004fee:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8004ff2:	2101      	movs	r1, #1
 8004ff4:	2300      	movs	r3, #0
 8004ff6:	e7e3      	b.n	8004fc0 <d_print_mod+0x43c>
 8004ff8:	4f6d      	ldr	r7, [pc, #436]	; (80051b0 <d_print_mod+0x62c>)
 8004ffa:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8004ffe:	f107 0908 	add.w	r9, r7, #8
 8005002:	2620      	movs	r6, #32
 8005004:	f04f 0800 	mov.w	r8, #0
 8005008:	e00a      	b.n	8005020 <d_print_mod+0x49c>
 800500a:	460b      	mov	r3, r1
 800500c:	3101      	adds	r1, #1
 800500e:	45b9      	cmp	r9, r7
 8005010:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005014:	54e6      	strb	r6, [r4, r3]
 8005016:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 800501a:	d013      	beq.n	8005044 <d_print_mod+0x4c0>
 800501c:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8005020:	29ff      	cmp	r1, #255	; 0xff
 8005022:	d1f2      	bne.n	800500a <d_print_mod+0x486>
 8005024:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005028:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800502c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8005030:	4620      	mov	r0, r4
 8005032:	4798      	blx	r3
 8005034:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005038:	3301      	adds	r3, #1
 800503a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800503e:	2101      	movs	r1, #1
 8005040:	2300      	movs	r3, #0
 8005042:	e7e4      	b.n	800500e <d_print_mod+0x48a>
 8005044:	692a      	ldr	r2, [r5, #16]
 8005046:	2a00      	cmp	r2, #0
 8005048:	f43f aed1 	beq.w	8004dee <d_print_mod+0x26a>
 800504c:	29ff      	cmp	r1, #255	; 0xff
 800504e:	d032      	beq.n	80050b6 <d_print_mod+0x532>
 8005050:	1c48      	adds	r0, r1, #1
 8005052:	2328      	movs	r3, #40	; 0x28
 8005054:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
 8005058:	5463      	strb	r3, [r4, r1]
 800505a:	2111      	movs	r1, #17
 800505c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005060:	e001      	b.n	8005066 <d_print_mod+0x4e2>
 8005062:	68ea      	ldr	r2, [r5, #12]
 8005064:	2111      	movs	r1, #17
 8005066:	4620      	mov	r0, r4
 8005068:	f7ff fd5e 	bl	8004b28 <d_print_comp>
 800506c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005070:	29ff      	cmp	r1, #255	; 0xff
 8005072:	d061      	beq.n	8005138 <d_print_mod+0x5b4>
 8005074:	1c4a      	adds	r2, r1, #1
 8005076:	2329      	movs	r3, #41	; 0x29
 8005078:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800507c:	5463      	strb	r3, [r4, r1]
 800507e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005082:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005086:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 800508a:	29ff      	cmp	r1, #255	; 0xff
 800508c:	d072      	beq.n	8005174 <d_print_mod+0x5f0>
 800508e:	1c4a      	adds	r2, r1, #1
 8005090:	2320      	movs	r3, #32
 8005092:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005096:	5463      	strb	r3, [r4, r1]
 8005098:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800509c:	e71f      	b.n	8004ede <d_print_mod+0x35a>
 800509e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80050a2:	29ff      	cmp	r1, #255	; 0xff
 80050a4:	d076      	beq.n	8005194 <d_print_mod+0x610>
 80050a6:	1c4a      	adds	r2, r1, #1
 80050a8:	232a      	movs	r3, #42	; 0x2a
 80050aa:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80050ae:	5463      	strb	r3, [r4, r1]
 80050b0:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80050b4:	e69b      	b.n	8004dee <d_print_mod+0x26a>
 80050b6:	2600      	movs	r6, #0
 80050b8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80050bc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80050c0:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80050c4:	4620      	mov	r0, r4
 80050c6:	4798      	blx	r3
 80050c8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80050cc:	692a      	ldr	r2, [r5, #16]
 80050ce:	3301      	adds	r3, #1
 80050d0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80050d4:	2001      	movs	r0, #1
 80050d6:	4631      	mov	r1, r6
 80050d8:	e7bb      	b.n	8005052 <d_print_mod+0x4ce>
 80050da:	2600      	movs	r6, #0
 80050dc:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 80050e0:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 80050e4:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
 80050e8:	4798      	blx	r3
 80050ea:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80050ee:	2201      	movs	r2, #1
 80050f0:	4413      	add	r3, r2
 80050f2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80050f6:	4631      	mov	r1, r6
 80050f8:	e65c      	b.n	8004db4 <d_print_mod+0x230>
 80050fa:	2500      	movs	r5, #0
 80050fc:	4619      	mov	r1, r3
 80050fe:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
 8005102:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
 8005106:	4798      	blx	r3
 8005108:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800510c:	2101      	movs	r1, #1
 800510e:	440b      	add	r3, r1
 8005110:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005114:	462b      	mov	r3, r5
 8005116:	e640      	b.n	8004d9a <d_print_mod+0x216>
 8005118:	2100      	movs	r1, #0
 800511a:	e9d0 5242 	ldrd	r5, r2, [r0, #264]	; 0x108
 800511e:	f880 10ff 	strb.w	r1, [r0, #255]	; 0xff
 8005122:	4619      	mov	r1, r3
 8005124:	47a8      	blx	r5
 8005126:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800512a:	2220      	movs	r2, #32
 800512c:	3301      	adds	r3, #1
 800512e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005132:	7022      	strb	r2, [r4, #0]
 8005134:	2101      	movs	r1, #1
 8005136:	e653      	b.n	8004de0 <d_print_mod+0x25c>
 8005138:	2500      	movs	r5, #0
 800513a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800513e:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8005142:	4620      	mov	r0, r4
 8005144:	4798      	blx	r3
 8005146:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800514a:	2201      	movs	r2, #1
 800514c:	4413      	add	r3, r2
 800514e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005152:	4629      	mov	r1, r5
 8005154:	e78f      	b.n	8005076 <d_print_mod+0x4f2>
 8005156:	2500      	movs	r5, #0
 8005158:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800515c:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8005160:	4620      	mov	r0, r4
 8005162:	4798      	blx	r3
 8005164:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005168:	2201      	movs	r2, #1
 800516a:	4413      	add	r3, r2
 800516c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005170:	4629      	mov	r1, r5
 8005172:	e636      	b.n	8004de2 <d_print_mod+0x25e>
 8005174:	2600      	movs	r6, #0
 8005176:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 800517a:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 800517e:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
 8005182:	4798      	blx	r3
 8005184:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005188:	2201      	movs	r2, #1
 800518a:	4413      	add	r3, r2
 800518c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005190:	4631      	mov	r1, r6
 8005192:	e77d      	b.n	8005090 <d_print_mod+0x50c>
 8005194:	2500      	movs	r5, #0
 8005196:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
 800519a:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
 800519e:	4798      	blx	r3
 80051a0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80051a4:	2201      	movs	r2, #1
 80051a6:	4413      	add	r3, r2
 80051a8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80051ac:	4629      	mov	r1, r5
 80051ae:	e77b      	b.n	80050a8 <d_print_mod+0x524>
 80051b0:	0800d774 	.word	0x0800d774

080051b4 <d_print_function_type>:
 80051b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80051b8:	4604      	mov	r4, r0
 80051ba:	4616      	mov	r6, r2
 80051bc:	461d      	mov	r5, r3
 80051be:	b19b      	cbz	r3, 80051e8 <d_print_function_type+0x34>
 80051c0:	4f71      	ldr	r7, [pc, #452]	; (8005388 <d_print_function_type+0x1d4>)
 80051c2:	2001      	movs	r0, #1
 80051c4:	689a      	ldr	r2, [r3, #8]
 80051c6:	b97a      	cbnz	r2, 80051e8 <d_print_function_type+0x34>
 80051c8:	685a      	ldr	r2, [r3, #4]
 80051ca:	7811      	ldrb	r1, [r2, #0]
 80051cc:	3919      	subs	r1, #25
 80051ce:	b2c9      	uxtb	r1, r1
 80051d0:	2912      	cmp	r1, #18
 80051d2:	fa00 f201 	lsl.w	r2, r0, r1
 80051d6:	d804      	bhi.n	80051e2 <d_print_function_type+0x2e>
 80051d8:	423a      	tst	r2, r7
 80051da:	d135      	bne.n	8005248 <d_print_function_type+0x94>
 80051dc:	f412 6f60 	tst.w	r2, #3584	; 0xe00
 80051e0:	d174      	bne.n	80052cc <d_print_function_type+0x118>
 80051e2:	681b      	ldr	r3, [r3, #0]
 80051e4:	2b00      	cmp	r3, #0
 80051e6:	d1ed      	bne.n	80051c4 <d_print_function_type+0x10>
 80051e8:	2300      	movs	r3, #0
 80051ea:	f8d4 7114 	ldr.w	r7, [r4, #276]	; 0x114
 80051ee:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 80051f2:	462a      	mov	r2, r5
 80051f4:	2111      	movs	r1, #17
 80051f6:	4620      	mov	r0, r4
 80051f8:	f000 f8c8 	bl	800538c <d_print_mod_list>
 80051fc:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005200:	2bff      	cmp	r3, #255	; 0xff
 8005202:	d04b      	beq.n	800529c <d_print_function_type+0xe8>
 8005204:	2228      	movs	r2, #40	; 0x28
 8005206:	1c59      	adds	r1, r3, #1
 8005208:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800520c:	54e2      	strb	r2, [r4, r3]
 800520e:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005212:	6932      	ldr	r2, [r6, #16]
 8005214:	b12a      	cbz	r2, 8005222 <d_print_function_type+0x6e>
 8005216:	2111      	movs	r1, #17
 8005218:	4620      	mov	r0, r4
 800521a:	f7ff fc85 	bl	8004b28 <d_print_comp>
 800521e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005222:	29ff      	cmp	r1, #255	; 0xff
 8005224:	d076      	beq.n	8005314 <d_print_function_type+0x160>
 8005226:	1c4b      	adds	r3, r1, #1
 8005228:	2229      	movs	r2, #41	; 0x29
 800522a:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800522e:	4620      	mov	r0, r4
 8005230:	5462      	strb	r2, [r4, r1]
 8005232:	2301      	movs	r3, #1
 8005234:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005238:	2111      	movs	r1, #17
 800523a:	462a      	mov	r2, r5
 800523c:	f000 f8a6 	bl	800538c <d_print_mod_list>
 8005240:	f8c4 7114 	str.w	r7, [r4, #276]	; 0x114
 8005244:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005248:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 800524c:	2b20      	cmp	r3, #32
 800524e:	d145      	bne.n	80052dc <d_print_function_type+0x128>
 8005250:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005254:	29ff      	cmp	r1, #255	; 0xff
 8005256:	d04e      	beq.n	80052f6 <d_print_function_type+0x142>
 8005258:	1c4b      	adds	r3, r1, #1
 800525a:	f04f 0828 	mov.w	r8, #40	; 0x28
 800525e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005262:	f804 8001 	strb.w	r8, [r4, r1]
 8005266:	f04f 0900 	mov.w	r9, #0
 800526a:	f8d4 7114 	ldr.w	r7, [r4, #276]	; 0x114
 800526e:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8005272:	2111      	movs	r1, #17
 8005274:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
 8005278:	464b      	mov	r3, r9
 800527a:	462a      	mov	r2, r5
 800527c:	4620      	mov	r0, r4
 800527e:	f000 f885 	bl	800538c <d_print_mod_list>
 8005282:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005286:	29ff      	cmp	r1, #255	; 0xff
 8005288:	d053      	beq.n	8005332 <d_print_function_type+0x17e>
 800528a:	1c4b      	adds	r3, r1, #1
 800528c:	2229      	movs	r2, #41	; 0x29
 800528e:	2bff      	cmp	r3, #255	; 0xff
 8005290:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005294:	5462      	strb	r2, [r4, r1]
 8005296:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800529a:	d1b3      	bne.n	8005204 <d_print_function_type+0x50>
 800529c:	4619      	mov	r1, r3
 800529e:	2300      	movs	r3, #0
 80052a0:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 80052a4:	4620      	mov	r0, r4
 80052a6:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80052aa:	4798      	blx	r3
 80052ac:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80052b0:	3301      	adds	r3, #1
 80052b2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80052b6:	2328      	movs	r3, #40	; 0x28
 80052b8:	7023      	strb	r3, [r4, #0]
 80052ba:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80052be:	6932      	ldr	r2, [r6, #16]
 80052c0:	2101      	movs	r1, #1
 80052c2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80052c6:	2a00      	cmp	r2, #0
 80052c8:	d1a5      	bne.n	8005216 <d_print_function_type+0x62>
 80052ca:	e7ac      	b.n	8005226 <d_print_function_type+0x72>
 80052cc:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 80052d0:	f003 02fd 	and.w	r2, r3, #253	; 0xfd
 80052d4:	2a28      	cmp	r2, #40	; 0x28
 80052d6:	d0bb      	beq.n	8005250 <d_print_function_type+0x9c>
 80052d8:	2b20      	cmp	r3, #32
 80052da:	d0b9      	beq.n	8005250 <d_print_function_type+0x9c>
 80052dc:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80052e0:	2bff      	cmp	r3, #255	; 0xff
 80052e2:	d03e      	beq.n	8005362 <d_print_function_type+0x1ae>
 80052e4:	1c59      	adds	r1, r3, #1
 80052e6:	2220      	movs	r2, #32
 80052e8:	29ff      	cmp	r1, #255	; 0xff
 80052ea:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80052ee:	54e2      	strb	r2, [r4, r3]
 80052f0:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80052f4:	d1b0      	bne.n	8005258 <d_print_function_type+0xa4>
 80052f6:	2700      	movs	r7, #0
 80052f8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 80052fc:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005300:	4620      	mov	r0, r4
 8005302:	4798      	blx	r3
 8005304:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005308:	3301      	adds	r3, #1
 800530a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800530e:	4639      	mov	r1, r7
 8005310:	2301      	movs	r3, #1
 8005312:	e7a2      	b.n	800525a <d_print_function_type+0xa6>
 8005314:	2600      	movs	r6, #0
 8005316:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800531a:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800531e:	4620      	mov	r0, r4
 8005320:	4798      	blx	r3
 8005322:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005326:	3301      	adds	r3, #1
 8005328:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800532c:	4631      	mov	r1, r6
 800532e:	2301      	movs	r3, #1
 8005330:	e77a      	b.n	8005228 <d_print_function_type+0x74>
 8005332:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005336:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800533a:	4620      	mov	r0, r4
 800533c:	4798      	blx	r3
 800533e:	f642 0329 	movw	r3, #10281	; 0x2829
 8005342:	8023      	strh	r3, [r4, #0]
 8005344:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8005348:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800534c:	6932      	ldr	r2, [r6, #16]
 800534e:	3301      	adds	r3, #1
 8005350:	2102      	movs	r1, #2
 8005352:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005356:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800535a:	2a00      	cmp	r2, #0
 800535c:	f47f af5b 	bne.w	8005216 <d_print_function_type+0x62>
 8005360:	e761      	b.n	8005226 <d_print_function_type+0x72>
 8005362:	2200      	movs	r2, #0
 8005364:	4619      	mov	r1, r3
 8005366:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
 800536a:	f8d4 7108 	ldr.w	r7, [r4, #264]	; 0x108
 800536e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005372:	4620      	mov	r0, r4
 8005374:	47b8      	blx	r7
 8005376:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800537a:	2220      	movs	r2, #32
 800537c:	3301      	adds	r3, #1
 800537e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005382:	7022      	strb	r2, [r4, #0]
 8005384:	2101      	movs	r1, #1
 8005386:	e767      	b.n	8005258 <d_print_function_type+0xa4>
 8005388:	00043107 	.word	0x00043107

0800538c <d_print_mod_list>:
 800538c:	2a00      	cmp	r2, #0
 800538e:	f000 80c2 	beq.w	8005516 <d_print_mod_list+0x18a>
 8005392:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005396:	4605      	mov	r5, r0
 8005398:	b088      	sub	sp, #32
 800539a:	461e      	mov	r6, r3
 800539c:	4614      	mov	r4, r2
 800539e:	2701      	movs	r7, #1
 80053a0:	f8d5 2118 	ldr.w	r2, [r5, #280]	; 0x118
 80053a4:	b9ca      	cbnz	r2, 80053da <d_print_mod_list+0x4e>
 80053a6:	68a2      	ldr	r2, [r4, #8]
 80053a8:	bb0a      	cbnz	r2, 80053ee <d_print_mod_list+0x62>
 80053aa:	6862      	ldr	r2, [r4, #4]
 80053ac:	7811      	ldrb	r1, [r2, #0]
 80053ae:	b1be      	cbz	r6, 80053e0 <d_print_mod_list+0x54>
 80053b0:	68e3      	ldr	r3, [r4, #12]
 80053b2:	f8d5 8110 	ldr.w	r8, [r5, #272]	; 0x110
 80053b6:	60a7      	str	r7, [r4, #8]
 80053b8:	2929      	cmp	r1, #41	; 0x29
 80053ba:	f8c5 3110 	str.w	r3, [r5, #272]	; 0x110
 80053be:	d024      	beq.n	800540a <d_print_mod_list+0x7e>
 80053c0:	292a      	cmp	r1, #42	; 0x2a
 80053c2:	d02c      	beq.n	800541e <d_print_mod_list+0x92>
 80053c4:	2902      	cmp	r1, #2
 80053c6:	d034      	beq.n	8005432 <d_print_mod_list+0xa6>
 80053c8:	2111      	movs	r1, #17
 80053ca:	4628      	mov	r0, r5
 80053cc:	f7ff fbda 	bl	8004b84 <d_print_mod>
 80053d0:	6824      	ldr	r4, [r4, #0]
 80053d2:	f8c5 8110 	str.w	r8, [r5, #272]	; 0x110
 80053d6:	2c00      	cmp	r4, #0
 80053d8:	d1e2      	bne.n	80053a0 <d_print_mod_list+0x14>
 80053da:	b008      	add	sp, #32
 80053dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80053e0:	294e      	cmp	r1, #78	; 0x4e
 80053e2:	d004      	beq.n	80053ee <d_print_mod_list+0x62>
 80053e4:	d807      	bhi.n	80053f6 <d_print_mod_list+0x6a>
 80053e6:	f1a1 031c 	sub.w	r3, r1, #28
 80053ea:	2b04      	cmp	r3, #4
 80053ec:	d8e0      	bhi.n	80053b0 <d_print_mod_list+0x24>
 80053ee:	6824      	ldr	r4, [r4, #0]
 80053f0:	2c00      	cmp	r4, #0
 80053f2:	d1d5      	bne.n	80053a0 <d_print_mod_list+0x14>
 80053f4:	e7f1      	b.n	80053da <d_print_mod_list+0x4e>
 80053f6:	3950      	subs	r1, #80	; 0x50
 80053f8:	2901      	cmp	r1, #1
 80053fa:	d9f8      	bls.n	80053ee <d_print_mod_list+0x62>
 80053fc:	68e3      	ldr	r3, [r4, #12]
 80053fe:	f8d5 8110 	ldr.w	r8, [r5, #272]	; 0x110
 8005402:	60a7      	str	r7, [r4, #8]
 8005404:	f8c5 3110 	str.w	r3, [r5, #272]	; 0x110
 8005408:	e7de      	b.n	80053c8 <d_print_mod_list+0x3c>
 800540a:	6823      	ldr	r3, [r4, #0]
 800540c:	2111      	movs	r1, #17
 800540e:	4628      	mov	r0, r5
 8005410:	f7ff fed0 	bl	80051b4 <d_print_function_type>
 8005414:	f8c5 8110 	str.w	r8, [r5, #272]	; 0x110
 8005418:	b008      	add	sp, #32
 800541a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800541e:	6823      	ldr	r3, [r4, #0]
 8005420:	2111      	movs	r1, #17
 8005422:	4628      	mov	r0, r5
 8005424:	f000 f8d6 	bl	80055d4 <d_print_array_type>
 8005428:	f8c5 8110 	str.w	r8, [r5, #272]	; 0x110
 800542c:	b008      	add	sp, #32
 800542e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005432:	4e64      	ldr	r6, [pc, #400]	; (80055c4 <d_print_mod_list+0x238>)
 8005434:	f8d5 7114 	ldr.w	r7, [r5, #276]	; 0x114
 8005438:	68d2      	ldr	r2, [r2, #12]
 800543a:	f04f 0900 	mov.w	r9, #0
 800543e:	2111      	movs	r1, #17
 8005440:	f8c5 9114 	str.w	r9, [r5, #276]	; 0x114
 8005444:	4628      	mov	r0, r5
 8005446:	f7ff fb6f 	bl	8004b28 <d_print_comp>
 800544a:	f106 0a01 	add.w	sl, r6, #1
 800544e:	f8c5 7114 	str.w	r7, [r5, #276]	; 0x114
 8005452:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 8005456:	273a      	movs	r7, #58	; 0x3a
 8005458:	e00a      	b.n	8005470 <d_print_mod_list+0xe4>
 800545a:	460b      	mov	r3, r1
 800545c:	3101      	adds	r1, #1
 800545e:	4556      	cmp	r6, sl
 8005460:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
 8005464:	54ef      	strb	r7, [r5, r3]
 8005466:	f885 7104 	strb.w	r7, [r5, #260]	; 0x104
 800546a:	d013      	beq.n	8005494 <d_print_mod_list+0x108>
 800546c:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8005470:	29ff      	cmp	r1, #255	; 0xff
 8005472:	d1f2      	bne.n	800545a <d_print_mod_list+0xce>
 8005474:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 8005478:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 800547c:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
 8005480:	4628      	mov	r0, r5
 8005482:	4798      	blx	r3
 8005484:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
 8005488:	3301      	adds	r3, #1
 800548a:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
 800548e:	2101      	movs	r1, #1
 8005490:	2300      	movs	r3, #0
 8005492:	e7e4      	b.n	800545e <d_print_mod_list+0xd2>
 8005494:	6863      	ldr	r3, [r4, #4]
 8005496:	691c      	ldr	r4, [r3, #16]
 8005498:	7823      	ldrb	r3, [r4, #0]
 800549a:	2b48      	cmp	r3, #72	; 0x48
 800549c:	d017      	beq.n	80054ce <d_print_mod_list+0x142>
 800549e:	2b4e      	cmp	r3, #78	; 0x4e
 80054a0:	f1a3 0250 	sub.w	r2, r3, #80	; 0x50
 80054a4:	f1a3 011c 	sub.w	r1, r3, #28
 80054a8:	d00e      	beq.n	80054c8 <d_print_mod_list+0x13c>
 80054aa:	d80b      	bhi.n	80054c4 <d_print_mod_list+0x138>
 80054ac:	2904      	cmp	r1, #4
 80054ae:	d90b      	bls.n	80054c8 <d_print_mod_list+0x13c>
 80054b0:	4622      	mov	r2, r4
 80054b2:	2111      	movs	r1, #17
 80054b4:	4628      	mov	r0, r5
 80054b6:	f7ff fb37 	bl	8004b28 <d_print_comp>
 80054ba:	f8c5 8110 	str.w	r8, [r5, #272]	; 0x110
 80054be:	b008      	add	sp, #32
 80054c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80054c4:	2a01      	cmp	r2, #1
 80054c6:	d8f3      	bhi.n	80054b0 <d_print_mod_list+0x124>
 80054c8:	68e4      	ldr	r4, [r4, #12]
 80054ca:	7823      	ldrb	r3, [r4, #0]
 80054cc:	e7e7      	b.n	800549e <d_print_mod_list+0x112>
 80054ce:	4f3e      	ldr	r7, [pc, #248]	; (80055c8 <d_print_mod_list+0x23c>)
 80054d0:	267b      	movs	r6, #123	; 0x7b
 80054d2:	f107 0a0c 	add.w	sl, r7, #12
 80054d6:	f04f 0900 	mov.w	r9, #0
 80054da:	e00a      	b.n	80054f2 <d_print_mod_list+0x166>
 80054dc:	460b      	mov	r3, r1
 80054de:	3101      	adds	r1, #1
 80054e0:	4557      	cmp	r7, sl
 80054e2:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
 80054e6:	54ee      	strb	r6, [r5, r3]
 80054e8:	f885 6104 	strb.w	r6, [r5, #260]	; 0x104
 80054ec:	d014      	beq.n	8005518 <d_print_mod_list+0x18c>
 80054ee:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 80054f2:	29ff      	cmp	r1, #255	; 0xff
 80054f4:	d1f2      	bne.n	80054dc <d_print_mod_list+0x150>
 80054f6:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 80054fa:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 80054fe:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
 8005502:	4628      	mov	r0, r5
 8005504:	4798      	blx	r3
 8005506:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
 800550a:	3301      	adds	r3, #1
 800550c:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
 8005510:	2101      	movs	r1, #1
 8005512:	2300      	movs	r3, #0
 8005514:	e7e4      	b.n	80054e0 <d_print_mod_list+0x154>
 8005516:	4770      	bx	lr
 8005518:	6922      	ldr	r2, [r4, #16]
 800551a:	492c      	ldr	r1, [pc, #176]	; (80055cc <d_print_mod_list+0x240>)
 800551c:	3201      	adds	r2, #1
 800551e:	a801      	add	r0, sp, #4
 8005520:	f006 faec 	bl	800bafc <siprintf>
 8005524:	a801      	add	r0, sp, #4
 8005526:	f000 fe93 	bl	8006250 <strlen>
 800552a:	b320      	cbz	r0, 8005576 <d_print_mod_list+0x1ea>
 800552c:	ae01      	add	r6, sp, #4
 800552e:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 8005532:	eb06 0a00 	add.w	sl, r6, r0
 8005536:	f04f 0900 	mov.w	r9, #0
 800553a:	e008      	b.n	800554e <d_print_mod_list+0x1c2>
 800553c:	460b      	mov	r3, r1
 800553e:	3101      	adds	r1, #1
 8005540:	4556      	cmp	r6, sl
 8005542:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
 8005546:	54ef      	strb	r7, [r5, r3]
 8005548:	f885 7104 	strb.w	r7, [r5, #260]	; 0x104
 800554c:	d015      	beq.n	800557a <d_print_mod_list+0x1ee>
 800554e:	29ff      	cmp	r1, #255	; 0xff
 8005550:	f816 7b01 	ldrb.w	r7, [r6], #1
 8005554:	d1f2      	bne.n	800553c <d_print_mod_list+0x1b0>
 8005556:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 800555a:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 800555e:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
 8005562:	4628      	mov	r0, r5
 8005564:	4798      	blx	r3
 8005566:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
 800556a:	3301      	adds	r3, #1
 800556c:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
 8005570:	2101      	movs	r1, #1
 8005572:	2300      	movs	r3, #0
 8005574:	e7e4      	b.n	8005540 <d_print_mod_list+0x1b4>
 8005576:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 800557a:	4f15      	ldr	r7, [pc, #84]	; (80055d0 <d_print_mod_list+0x244>)
 800557c:	267d      	movs	r6, #125	; 0x7d
 800557e:	f107 0a02 	add.w	sl, r7, #2
 8005582:	f04f 0900 	mov.w	r9, #0
 8005586:	e00a      	b.n	800559e <d_print_mod_list+0x212>
 8005588:	460b      	mov	r3, r1
 800558a:	3101      	adds	r1, #1
 800558c:	4557      	cmp	r7, sl
 800558e:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
 8005592:	54ee      	strb	r6, [r5, r3]
 8005594:	f885 6104 	strb.w	r6, [r5, #260]	; 0x104
 8005598:	d096      	beq.n	80054c8 <d_print_mod_list+0x13c>
 800559a:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 800559e:	29ff      	cmp	r1, #255	; 0xff
 80055a0:	d1f2      	bne.n	8005588 <d_print_mod_list+0x1fc>
 80055a2:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 80055a6:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 80055aa:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
 80055ae:	4628      	mov	r0, r5
 80055b0:	4798      	blx	r3
 80055b2:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
 80055b6:	3301      	adds	r3, #1
 80055b8:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
 80055bc:	2101      	movs	r1, #1
 80055be:	2300      	movs	r3, #0
 80055c0:	e7e4      	b.n	800558c <d_print_mod_list+0x200>
 80055c2:	bf00      	nop
 80055c4:	0800d4b0 	.word	0x0800d4b0
 80055c8:	0800d4b4 	.word	0x0800d4b4
 80055cc:	0800d440 	.word	0x0800d440
 80055d0:	0800d4c4 	.word	0x0800d4c4

080055d4 <d_print_array_type>:
 80055d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80055d8:	4604      	mov	r4, r0
 80055da:	4617      	mov	r7, r2
 80055dc:	b153      	cbz	r3, 80055f4 <d_print_array_type+0x20>
 80055de:	461e      	mov	r6, r3
 80055e0:	689d      	ldr	r5, [r3, #8]
 80055e2:	b37d      	cbz	r5, 8005644 <d_print_array_type+0x70>
 80055e4:	681b      	ldr	r3, [r3, #0]
 80055e6:	2b00      	cmp	r3, #0
 80055e8:	d1fa      	bne.n	80055e0 <d_print_array_type+0xc>
 80055ea:	4632      	mov	r2, r6
 80055ec:	2111      	movs	r1, #17
 80055ee:	4620      	mov	r0, r4
 80055f0:	f7ff fecc 	bl	800538c <d_print_mod_list>
 80055f4:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80055f8:	2bff      	cmp	r3, #255	; 0xff
 80055fa:	f000 809d 	beq.w	8005738 <d_print_array_type+0x164>
 80055fe:	1c59      	adds	r1, r3, #1
 8005600:	2220      	movs	r2, #32
 8005602:	29ff      	cmp	r1, #255	; 0xff
 8005604:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005608:	54e2      	strb	r2, [r4, r3]
 800560a:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800560e:	d027      	beq.n	8005660 <d_print_array_type+0x8c>
 8005610:	225b      	movs	r2, #91	; 0x5b
 8005612:	1c4b      	adds	r3, r1, #1
 8005614:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005618:	5462      	strb	r2, [r4, r1]
 800561a:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800561e:	68fa      	ldr	r2, [r7, #12]
 8005620:	b12a      	cbz	r2, 800562e <d_print_array_type+0x5a>
 8005622:	2111      	movs	r1, #17
 8005624:	4620      	mov	r0, r4
 8005626:	f7ff fa7f 	bl	8004b28 <d_print_comp>
 800562a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800562e:	2bff      	cmp	r3, #255	; 0xff
 8005630:	d02f      	beq.n	8005692 <d_print_array_type+0xbe>
 8005632:	1c59      	adds	r1, r3, #1
 8005634:	225d      	movs	r2, #93	; 0x5d
 8005636:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800563a:	54e2      	strb	r2, [r4, r3]
 800563c:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005640:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005644:	685b      	ldr	r3, [r3, #4]
 8005646:	781b      	ldrb	r3, [r3, #0]
 8005648:	2b2a      	cmp	r3, #42	; 0x2a
 800564a:	d132      	bne.n	80056b2 <d_print_array_type+0xde>
 800564c:	2111      	movs	r1, #17
 800564e:	462b      	mov	r3, r5
 8005650:	4632      	mov	r2, r6
 8005652:	4620      	mov	r0, r4
 8005654:	f7ff fe9a 	bl	800538c <d_print_mod_list>
 8005658:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800565c:	29ff      	cmp	r1, #255	; 0xff
 800565e:	d1d7      	bne.n	8005610 <d_print_array_type+0x3c>
 8005660:	2200      	movs	r2, #0
 8005662:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005666:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
 800566a:	4620      	mov	r0, r4
 800566c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005670:	4798      	blx	r3
 8005672:	225b      	movs	r2, #91	; 0x5b
 8005674:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005678:	7022      	strb	r2, [r4, #0]
 800567a:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800567e:	68fa      	ldr	r2, [r7, #12]
 8005680:	1c59      	adds	r1, r3, #1
 8005682:	2301      	movs	r3, #1
 8005684:	f8c4 1128 	str.w	r1, [r4, #296]	; 0x128
 8005688:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800568c:	2a00      	cmp	r2, #0
 800568e:	d1c8      	bne.n	8005622 <d_print_array_type+0x4e>
 8005690:	e7cf      	b.n	8005632 <d_print_array_type+0x5e>
 8005692:	2500      	movs	r5, #0
 8005694:	4619      	mov	r1, r3
 8005696:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 800569a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800569e:	4620      	mov	r0, r4
 80056a0:	4798      	blx	r3
 80056a2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80056a6:	2101      	movs	r1, #1
 80056a8:	440b      	add	r3, r1
 80056aa:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80056ae:	462b      	mov	r3, r5
 80056b0:	e7c0      	b.n	8005634 <d_print_array_type+0x60>
 80056b2:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 8005798 <d_print_array_type+0x1c4>
 80056b6:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80056ba:	f04f 0920 	mov.w	r9, #32
 80056be:	f108 0a01 	add.w	sl, r8, #1
 80056c2:	e00c      	b.n	80056de <d_print_array_type+0x10a>
 80056c4:	460b      	mov	r3, r1
 80056c6:	45d0      	cmp	r8, sl
 80056c8:	f101 0101 	add.w	r1, r1, #1
 80056cc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80056d0:	f804 9003 	strb.w	r9, [r4, r3]
 80056d4:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 80056d8:	d01a      	beq.n	8005710 <d_print_array_type+0x13c>
 80056da:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 80056de:	29ff      	cmp	r1, #255	; 0xff
 80056e0:	d1f0      	bne.n	80056c4 <d_print_array_type+0xf0>
 80056e2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80056e6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80056ea:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80056ee:	4620      	mov	r0, r4
 80056f0:	4798      	blx	r3
 80056f2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80056f6:	3301      	adds	r3, #1
 80056f8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80056fc:	2300      	movs	r3, #0
 80056fe:	2101      	movs	r1, #1
 8005700:	45d0      	cmp	r8, sl
 8005702:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005706:	f804 9003 	strb.w	r9, [r4, r3]
 800570a:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 800570e:	d1e4      	bne.n	80056da <d_print_array_type+0x106>
 8005710:	2111      	movs	r1, #17
 8005712:	2300      	movs	r3, #0
 8005714:	4632      	mov	r2, r6
 8005716:	4620      	mov	r0, r4
 8005718:	f7ff fe38 	bl	800538c <d_print_mod_list>
 800571c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005720:	29ff      	cmp	r1, #255	; 0xff
 8005722:	d026      	beq.n	8005772 <d_print_array_type+0x19e>
 8005724:	1c4b      	adds	r3, r1, #1
 8005726:	2229      	movs	r2, #41	; 0x29
 8005728:	2bff      	cmp	r3, #255	; 0xff
 800572a:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800572e:	5462      	strb	r2, [r4, r1]
 8005730:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005734:	f47f af63 	bne.w	80055fe <d_print_array_type+0x2a>
 8005738:	2200      	movs	r2, #0
 800573a:	4619      	mov	r1, r3
 800573c:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
 8005740:	f8d4 5108 	ldr.w	r5, [r4, #264]	; 0x108
 8005744:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005748:	4620      	mov	r0, r4
 800574a:	47a8      	blx	r5
 800574c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005750:	225b      	movs	r2, #91	; 0x5b
 8005752:	f645 3120 	movw	r1, #23328	; 0x5b20
 8005756:	8021      	strh	r1, [r4, #0]
 8005758:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800575c:	68fa      	ldr	r2, [r7, #12]
 800575e:	3301      	adds	r3, #1
 8005760:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005764:	2302      	movs	r3, #2
 8005766:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800576a:	2a00      	cmp	r2, #0
 800576c:	f47f af59 	bne.w	8005622 <d_print_array_type+0x4e>
 8005770:	e75f      	b.n	8005632 <d_print_array_type+0x5e>
 8005772:	2200      	movs	r2, #0
 8005774:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005778:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
 800577c:	4620      	mov	r0, r4
 800577e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005782:	4798      	blx	r3
 8005784:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005788:	2229      	movs	r2, #41	; 0x29
 800578a:	3301      	adds	r3, #1
 800578c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005790:	7022      	strb	r2, [r4, #0]
 8005792:	2301      	movs	r3, #1
 8005794:	e733      	b.n	80055fe <d_print_array_type+0x2a>
 8005796:	bf00      	nop
 8005798:	0800d6bc 	.word	0x0800d6bc

0800579c <d_print_expr_op>:
 800579c:	7811      	ldrb	r1, [r2, #0]
 800579e:	2932      	cmp	r1, #50	; 0x32
 80057a0:	d002      	beq.n	80057a8 <d_print_expr_op+0xc>
 80057a2:	2111      	movs	r1, #17
 80057a4:	f7ff b9c0 	b.w	8004b28 <d_print_comp>
 80057a8:	68d3      	ldr	r3, [r2, #12]
 80057aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80057ae:	e9d3 5701 	ldrd	r5, r7, [r3, #4]
 80057b2:	b367      	cbz	r7, 800580e <d_print_expr_op+0x72>
 80057b4:	442f      	add	r7, r5
 80057b6:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 80057ba:	4604      	mov	r4, r0
 80057bc:	3d01      	subs	r5, #1
 80057be:	3f01      	subs	r7, #1
 80057c0:	f04f 0800 	mov.w	r8, #0
 80057c4:	e009      	b.n	80057da <d_print_expr_op+0x3e>
 80057c6:	460b      	mov	r3, r1
 80057c8:	42bd      	cmp	r5, r7
 80057ca:	f101 0101 	add.w	r1, r1, #1
 80057ce:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80057d2:	54e6      	strb	r6, [r4, r3]
 80057d4:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 80057d8:	d019      	beq.n	800580e <d_print_expr_op+0x72>
 80057da:	29ff      	cmp	r1, #255	; 0xff
 80057dc:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 80057e0:	d1f1      	bne.n	80057c6 <d_print_expr_op+0x2a>
 80057e2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80057e6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80057ea:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80057ee:	4620      	mov	r0, r4
 80057f0:	4798      	blx	r3
 80057f2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 80057f6:	3301      	adds	r3, #1
 80057f8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 80057fc:	2300      	movs	r3, #0
 80057fe:	2101      	movs	r1, #1
 8005800:	42bd      	cmp	r5, r7
 8005802:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005806:	54e6      	strb	r6, [r4, r3]
 8005808:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 800580c:	d1e5      	bne.n	80057da <d_print_expr_op+0x3e>
 800580e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005812:	bf00      	nop

08005814 <d_demangle_callback.constprop.0>:
 8005814:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005818:	ed2d 8b02 	vpush	{d8}
 800581c:	b0e7      	sub	sp, #412	; 0x19c
 800581e:	7803      	ldrb	r3, [r0, #0]
 8005820:	af00      	add	r7, sp, #0
 8005822:	2b5f      	cmp	r3, #95	; 0x5f
 8005824:	e9c7 2100 	strd	r2, r1, [r7]
 8005828:	4605      	mov	r5, r0
 800582a:	f000 8144 	beq.w	8005ab6 <d_demangle_callback.constprop.0+0x2a2>
 800582e:	49a9      	ldr	r1, [pc, #676]	; (8005ad4 <d_demangle_callback.constprop.0+0x2c0>)
 8005830:	2208      	movs	r2, #8
 8005832:	4628      	mov	r0, r5
 8005834:	f006 fa8c 	bl	800bd50 <strncmp>
 8005838:	2800      	cmp	r0, #0
 800583a:	f000 8107 	beq.w	8005a4c <d_demangle_callback.constprop.0+0x238>
 800583e:	f04f 0900 	mov.w	r9, #0
 8005842:	2301      	movs	r3, #1
 8005844:	f1b9 0f02 	cmp.w	r9, #2
 8005848:	647b      	str	r3, [r7, #68]	; 0x44
 800584a:	bf0c      	ite	eq
 800584c:	2345      	moveq	r3, #69	; 0x45
 800584e:	2346      	movne	r3, #70	; 0x46
 8005850:	f1a9 0a02 	sub.w	sl, r9, #2
 8005854:	ee08 3a10 	vmov	s16, r3
 8005858:	fa5f fa8a 	uxtb.w	sl, sl
 800585c:	4628      	mov	r0, r5
 800585e:	f000 fcf7 	bl	8006250 <strlen>
 8005862:	182b      	adds	r3, r5, r0
 8005864:	0042      	lsls	r2, r0, #1
 8005866:	2100      	movs	r1, #0
 8005868:	e9c7 5303 	strd	r5, r3, [r7, #12]
 800586c:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8005870:	f04f 0311 	mov.w	r3, #17
 8005874:	e9c7 3505 	strd	r3, r5, [r7, #20]
 8005878:	e9c7 1208 	strd	r1, r2, [r7, #32]
 800587c:	e9c7 100b 	strd	r1, r0, [r7, #44]	; 0x2c
 8005880:	e9c7 110d 	strd	r1, r1, [r7, #52]	; 0x34
 8005884:	e9c7 110f 	strd	r1, r1, [r7, #60]	; 0x3c
 8005888:	64b9      	str	r1, [r7, #72]	; 0x48
 800588a:	f200 811b 	bhi.w	8005ac4 <d_demangle_callback.constprop.0+0x2b0>
 800588e:	0083      	lsls	r3, r0, #2
 8005890:	46e8      	mov	r8, sp
 8005892:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8005896:	3307      	adds	r3, #7
 8005898:	eba8 00c0 	sub.w	r0, r8, r0, lsl #3
 800589c:	4685      	mov	sp, r0
 800589e:	f023 0307 	bic.w	r3, r3, #7
 80058a2:	466e      	mov	r6, sp
 80058a4:	f1b9 0f01 	cmp.w	r9, #1
 80058a8:	ebad 0d03 	sub.w	sp, sp, r3
 80058ac:	61fe      	str	r6, [r7, #28]
 80058ae:	f8c7 d028 	str.w	sp, [r7, #40]	; 0x28
 80058b2:	d040      	beq.n	8005936 <d_demangle_callback.constprop.0+0x122>
 80058b4:	f1ba 0f01 	cmp.w	sl, #1
 80058b8:	d835      	bhi.n	8005926 <d_demangle_callback.constprop.0+0x112>
 80058ba:	7aeb      	ldrb	r3, [r5, #11]
 80058bc:	f105 040b 	add.w	r4, r5, #11
 80058c0:	2b5f      	cmp	r3, #95	; 0x5f
 80058c2:	61bc      	str	r4, [r7, #24]
 80058c4:	d103      	bne.n	80058ce <d_demangle_callback.constprop.0+0xba>
 80058c6:	7b2b      	ldrb	r3, [r5, #12]
 80058c8:	2b5a      	cmp	r3, #90	; 0x5a
 80058ca:	f000 80b0 	beq.w	8005a2e <d_demangle_callback.constprop.0+0x21a>
 80058ce:	2a00      	cmp	r2, #0
 80058d0:	f340 80ab 	ble.w	8005a2a <d_demangle_callback.constprop.0+0x216>
 80058d4:	4620      	mov	r0, r4
 80058d6:	f000 fcbb 	bl	8006250 <strlen>
 80058da:	2300      	movs	r3, #0
 80058dc:	2201      	movs	r2, #1
 80058de:	e9c6 3301 	strd	r3, r3, [r6, #4]
 80058e2:	623a      	str	r2, [r7, #32]
 80058e4:	2800      	cmp	r0, #0
 80058e6:	f000 80a0 	beq.w	8005a2a <d_demangle_callback.constprop.0+0x216>
 80058ea:	e9c6 4003 	strd	r4, r0, [r6, #12]
 80058ee:	7033      	strb	r3, [r6, #0]
 80058f0:	2300      	movs	r3, #0
 80058f2:	4632      	mov	r2, r6
 80058f4:	ee18 1a10 	vmov	r1, s16
 80058f8:	f107 000c 	add.w	r0, r7, #12
 80058fc:	f7fa fc70 	bl	80001e0 <d_make_comp>
 8005900:	4606      	mov	r6, r0
 8005902:	4620      	mov	r0, r4
 8005904:	f000 fca4 	bl	8006250 <strlen>
 8005908:	1823      	adds	r3, r4, r0
 800590a:	61bb      	str	r3, [r7, #24]
 800590c:	5c23      	ldrb	r3, [r4, r0]
 800590e:	b913      	cbnz	r3, 8005916 <d_demangle_callback.constprop.0+0x102>
 8005910:	2e00      	cmp	r6, #0
 8005912:	f040 80e1 	bne.w	8005ad8 <d_demangle_callback.constprop.0+0x2c4>
 8005916:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8005918:	3301      	adds	r3, #1
 800591a:	f040 80c3 	bne.w	8005aa4 <d_demangle_callback.constprop.0+0x290>
 800591e:	2300      	movs	r3, #0
 8005920:	647b      	str	r3, [r7, #68]	; 0x44
 8005922:	46c5      	mov	sp, r8
 8005924:	e79a      	b.n	800585c <d_demangle_callback.constprop.0+0x48>
 8005926:	f107 000c 	add.w	r0, r7, #12
 800592a:	f7fb f8a9 	bl	8000a80 <d_type>
 800592e:	69bb      	ldr	r3, [r7, #24]
 8005930:	4606      	mov	r6, r0
 8005932:	781b      	ldrb	r3, [r3, #0]
 8005934:	e7eb      	b.n	800590e <d_demangle_callback.constprop.0+0xfa>
 8005936:	782b      	ldrb	r3, [r5, #0]
 8005938:	2b5f      	cmp	r3, #95	; 0x5f
 800593a:	d1ec      	bne.n	8005916 <d_demangle_callback.constprop.0+0x102>
 800593c:	786b      	ldrb	r3, [r5, #1]
 800593e:	1c6a      	adds	r2, r5, #1
 8005940:	2b5a      	cmp	r3, #90	; 0x5a
 8005942:	61ba      	str	r2, [r7, #24]
 8005944:	d1e7      	bne.n	8005916 <d_demangle_callback.constprop.0+0x102>
 8005946:	78ab      	ldrb	r3, [r5, #2]
 8005948:	1caa      	adds	r2, r5, #2
 800594a:	2b47      	cmp	r3, #71	; 0x47
 800594c:	61ba      	str	r2, [r7, #24]
 800594e:	f000 809b 	beq.w	8005a88 <d_demangle_callback.constprop.0+0x274>
 8005952:	2b54      	cmp	r3, #84	; 0x54
 8005954:	f000 8098 	beq.w	8005a88 <d_demangle_callback.constprop.0+0x274>
 8005958:	4649      	mov	r1, r9
 800595a:	f107 000c 	add.w	r0, r7, #12
 800595e:	f7fc ffeb 	bl	8002938 <d_encoding.part.0>
 8005962:	697b      	ldr	r3, [r7, #20]
 8005964:	07db      	lsls	r3, r3, #31
 8005966:	4606      	mov	r6, r0
 8005968:	f140 8097 	bpl.w	8005a9a <d_demangle_callback.constprop.0+0x286>
 800596c:	69ba      	ldr	r2, [r7, #24]
 800596e:	7813      	ldrb	r3, [r2, #0]
 8005970:	2b2e      	cmp	r3, #46	; 0x2e
 8005972:	d1cc      	bne.n	800590e <d_demangle_callback.constprop.0+0xfa>
 8005974:	4633      	mov	r3, r6
 8005976:	4616      	mov	r6, r2
 8005978:	461a      	mov	r2, r3
 800597a:	7873      	ldrb	r3, [r6, #1]
 800597c:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8005980:	2919      	cmp	r1, #25
 8005982:	f04f 0b00 	mov.w	fp, #0
 8005986:	d945      	bls.n	8005a14 <d_demangle_callback.constprop.0+0x200>
 8005988:	2b5f      	cmp	r3, #95	; 0x5f
 800598a:	d043      	beq.n	8005a14 <d_demangle_callback.constprop.0+0x200>
 800598c:	3b30      	subs	r3, #48	; 0x30
 800598e:	2b09      	cmp	r3, #9
 8005990:	f200 80fd 	bhi.w	8005b8e <d_demangle_callback.constprop.0+0x37a>
 8005994:	7831      	ldrb	r1, [r6, #0]
 8005996:	4634      	mov	r4, r6
 8005998:	292e      	cmp	r1, #46	; 0x2e
 800599a:	d112      	bne.n	80059c2 <d_demangle_callback.constprop.0+0x1ae>
 800599c:	7863      	ldrb	r3, [r4, #1]
 800599e:	3b30      	subs	r3, #48	; 0x30
 80059a0:	2b09      	cmp	r3, #9
 80059a2:	d80e      	bhi.n	80059c2 <d_demangle_callback.constprop.0+0x1ae>
 80059a4:	78a3      	ldrb	r3, [r4, #2]
 80059a6:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 80059aa:	1ca0      	adds	r0, r4, #2
 80059ac:	2909      	cmp	r1, #9
 80059ae:	4604      	mov	r4, r0
 80059b0:	d805      	bhi.n	80059be <d_demangle_callback.constprop.0+0x1aa>
 80059b2:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80059b6:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 80059ba:	2909      	cmp	r1, #9
 80059bc:	d9f9      	bls.n	80059b2 <d_demangle_callback.constprop.0+0x19e>
 80059be:	2b2e      	cmp	r3, #46	; 0x2e
 80059c0:	d0ec      	beq.n	800599c <d_demangle_callback.constprop.0+0x188>
 80059c2:	e9d7 1308 	ldrd	r1, r3, [r7, #32]
 80059c6:	4299      	cmp	r1, r3
 80059c8:	61bc      	str	r4, [r7, #24]
 80059ca:	eba4 0006 	sub.w	r0, r4, r6
 80059ce:	da67      	bge.n	8005aa0 <d_demangle_callback.constprop.0+0x28c>
 80059d0:	f8d7 c01c 	ldr.w	ip, [r7, #28]
 80059d4:	eb01 0e81 	add.w	lr, r1, r1, lsl #2
 80059d8:	eb0c 038e 	add.w	r3, ip, lr, lsl #2
 80059dc:	3101      	adds	r1, #1
 80059de:	2800      	cmp	r0, #0
 80059e0:	e9c3 bb01 	strd	fp, fp, [r3, #4]
 80059e4:	6239      	str	r1, [r7, #32]
 80059e6:	dd5b      	ble.n	8005aa0 <d_demangle_callback.constprop.0+0x28c>
 80059e8:	e9c3 bb01 	strd	fp, fp, [r3, #4]
 80059ec:	f80c b02e 	strb.w	fp, [ip, lr, lsl #2]
 80059f0:	e9c3 6003 	strd	r6, r0, [r3, #12]
 80059f4:	214f      	movs	r1, #79	; 0x4f
 80059f6:	f107 000c 	add.w	r0, r7, #12
 80059fa:	f7fa fbf1 	bl	80001e0 <d_make_comp>
 80059fe:	7823      	ldrb	r3, [r4, #0]
 8005a00:	2b2e      	cmp	r3, #46	; 0x2e
 8005a02:	4602      	mov	r2, r0
 8005a04:	f040 80c1 	bne.w	8005b8a <d_demangle_callback.constprop.0+0x376>
 8005a08:	4626      	mov	r6, r4
 8005a0a:	7873      	ldrb	r3, [r6, #1]
 8005a0c:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8005a10:	2919      	cmp	r1, #25
 8005a12:	d8b9      	bhi.n	8005988 <d_demangle_callback.constprop.0+0x174>
 8005a14:	1cb3      	adds	r3, r6, #2
 8005a16:	461c      	mov	r4, r3
 8005a18:	f813 1b01 	ldrb.w	r1, [r3], #1
 8005a1c:	f1a1 0061 	sub.w	r0, r1, #97	; 0x61
 8005a20:	2819      	cmp	r0, #25
 8005a22:	d9f8      	bls.n	8005a16 <d_demangle_callback.constprop.0+0x202>
 8005a24:	295f      	cmp	r1, #95	; 0x5f
 8005a26:	d0f6      	beq.n	8005a16 <d_demangle_callback.constprop.0+0x202>
 8005a28:	e7b6      	b.n	8005998 <d_demangle_callback.constprop.0+0x184>
 8005a2a:	2600      	movs	r6, #0
 8005a2c:	e760      	b.n	80058f0 <d_demangle_callback.constprop.0+0xdc>
 8005a2e:	7b6b      	ldrb	r3, [r5, #13]
 8005a30:	f105 020d 	add.w	r2, r5, #13
 8005a34:	2b47      	cmp	r3, #71	; 0x47
 8005a36:	61ba      	str	r2, [r7, #24]
 8005a38:	f107 000c 	add.w	r0, r7, #12
 8005a3c:	d001      	beq.n	8005a42 <d_demangle_callback.constprop.0+0x22e>
 8005a3e:	2b54      	cmp	r3, #84	; 0x54
 8005a40:	d11d      	bne.n	8005a7e <d_demangle_callback.constprop.0+0x26a>
 8005a42:	f7fc fbf1 	bl	8002228 <d_special_name>
 8005a46:	69bc      	ldr	r4, [r7, #24]
 8005a48:	4606      	mov	r6, r0
 8005a4a:	e751      	b.n	80058f0 <d_demangle_callback.constprop.0+0xdc>
 8005a4c:	7a2b      	ldrb	r3, [r5, #8]
 8005a4e:	2b2e      	cmp	r3, #46	; 0x2e
 8005a50:	d004      	beq.n	8005a5c <d_demangle_callback.constprop.0+0x248>
 8005a52:	2b5f      	cmp	r3, #95	; 0x5f
 8005a54:	d002      	beq.n	8005a5c <d_demangle_callback.constprop.0+0x248>
 8005a56:	2b24      	cmp	r3, #36	; 0x24
 8005a58:	f47f aef1 	bne.w	800583e <d_demangle_callback.constprop.0+0x2a>
 8005a5c:	7a6b      	ldrb	r3, [r5, #9]
 8005a5e:	2b44      	cmp	r3, #68	; 0x44
 8005a60:	d002      	beq.n	8005a68 <d_demangle_callback.constprop.0+0x254>
 8005a62:	2b49      	cmp	r3, #73	; 0x49
 8005a64:	f47f aeeb 	bne.w	800583e <d_demangle_callback.constprop.0+0x2a>
 8005a68:	7aaa      	ldrb	r2, [r5, #10]
 8005a6a:	2a5f      	cmp	r2, #95	; 0x5f
 8005a6c:	f47f aee7 	bne.w	800583e <d_demangle_callback.constprop.0+0x2a>
 8005a70:	2b49      	cmp	r3, #73	; 0x49
 8005a72:	bf0c      	ite	eq
 8005a74:	f04f 0902 	moveq.w	r9, #2
 8005a78:	f04f 0903 	movne.w	r9, #3
 8005a7c:	e6e1      	b.n	8005842 <d_demangle_callback.constprop.0+0x2e>
 8005a7e:	f7fc ff5b 	bl	8002938 <d_encoding.part.0>
 8005a82:	69bc      	ldr	r4, [r7, #24]
 8005a84:	4606      	mov	r6, r0
 8005a86:	e733      	b.n	80058f0 <d_demangle_callback.constprop.0+0xdc>
 8005a88:	f107 000c 	add.w	r0, r7, #12
 8005a8c:	f7fc fbcc 	bl	8002228 <d_special_name>
 8005a90:	697b      	ldr	r3, [r7, #20]
 8005a92:	07db      	lsls	r3, r3, #31
 8005a94:	4606      	mov	r6, r0
 8005a96:	f53f af69 	bmi.w	800596c <d_demangle_callback.constprop.0+0x158>
 8005a9a:	69bb      	ldr	r3, [r7, #24]
 8005a9c:	781b      	ldrb	r3, [r3, #0]
 8005a9e:	e736      	b.n	800590e <d_demangle_callback.constprop.0+0xfa>
 8005aa0:	2300      	movs	r3, #0
 8005aa2:	e7a7      	b.n	80059f4 <d_demangle_callback.constprop.0+0x1e0>
 8005aa4:	2000      	movs	r0, #0
 8005aa6:	f507 77ce 	add.w	r7, r7, #412	; 0x19c
 8005aaa:	46c5      	mov	sp, r8
 8005aac:	46bd      	mov	sp, r7
 8005aae:	ecbd 8b02 	vpop	{d8}
 8005ab2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005ab6:	7843      	ldrb	r3, [r0, #1]
 8005ab8:	2b5a      	cmp	r3, #90	; 0x5a
 8005aba:	f47f aeb8 	bne.w	800582e <d_demangle_callback.constprop.0+0x1a>
 8005abe:	f04f 0901 	mov.w	r9, #1
 8005ac2:	e6be      	b.n	8005842 <d_demangle_callback.constprop.0+0x2e>
 8005ac4:	4608      	mov	r0, r1
 8005ac6:	f507 77ce 	add.w	r7, r7, #412	; 0x19c
 8005aca:	46bd      	mov	sp, r7
 8005acc:	ecbd 8b02 	vpop	{d8}
 8005ad0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005ad4:	0800d444 	.word	0x0800d444
 8005ad8:	f107 044c 	add.w	r4, r7, #76	; 0x4c
 8005adc:	687a      	ldr	r2, [r7, #4]
 8005ade:	f8c4 2108 	str.w	r2, [r4, #264]	; 0x108
 8005ae2:	4631      	mov	r1, r6
 8005ae4:	683a      	ldr	r2, [r7, #0]
 8005ae6:	f8c4 210c 	str.w	r2, [r4, #268]	; 0x10c
 8005aea:	4620      	mov	r0, r4
 8005aec:	e9c4 3344 	strd	r3, r3, [r4, #272]	; 0x110
 8005af0:	e9c4 3349 	strd	r3, r3, [r4, #292]	; 0x124
 8005af4:	e9c4 3346 	strd	r3, r3, [r4, #280]	; 0x118
 8005af8:	e9c4 334d 	strd	r3, r3, [r4, #308]	; 0x134
 8005afc:	e9c4 3350 	strd	r3, r3, [r4, #320]	; 0x140
 8005b00:	607b      	str	r3, [r7, #4]
 8005b02:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005b06:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005b0a:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8005b0e:	f8c4 312c 	str.w	r3, [r4, #300]	; 0x12c
 8005b12:	f7fa fc55 	bl	80003c0 <d_count_templates_scopes>
 8005b16:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8005b1a:	687b      	ldr	r3, [r7, #4]
 8005b1c:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8005b20:	da01      	bge.n	8005b26 <d_demangle_callback.constprop.0+0x312>
 8005b22:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
 8005b26:	f8d4 1138 	ldr.w	r1, [r4, #312]	; 0x138
 8005b2a:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 8005b2e:	2901      	cmp	r1, #1
 8005b30:	fb01 f303 	mul.w	r3, r1, r3
 8005b34:	4632      	mov	r2, r6
 8005b36:	bfb8      	it	lt
 8005b38:	2101      	movlt	r1, #1
 8005b3a:	466e      	mov	r6, sp
 8005b3c:	eba6 01c1 	sub.w	r1, r6, r1, lsl #3
 8005b40:	2b01      	cmp	r3, #1
 8005b42:	468d      	mov	sp, r1
 8005b44:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
 8005b48:	4668      	mov	r0, sp
 8005b4a:	bfb8      	it	lt
 8005b4c:	2301      	movlt	r3, #1
 8005b4e:	eba0 03c3 	sub.w	r3, r0, r3, lsl #3
 8005b52:	469d      	mov	sp, r3
 8005b54:	2500      	movs	r5, #0
 8005b56:	f8c4 1130 	str.w	r1, [r4, #304]	; 0x130
 8005b5a:	4620      	mov	r0, r4
 8005b5c:	2111      	movs	r1, #17
 8005b5e:	f8c4 d13c 	str.w	sp, [r4, #316]	; 0x13c
 8005b62:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8005b66:	f7fe ffdf 	bl	8004b28 <d_print_comp>
 8005b6a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005b6e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005b72:	5465      	strb	r5, [r4, r1]
 8005b74:	4620      	mov	r0, r4
 8005b76:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005b7a:	46b5      	mov	sp, r6
 8005b7c:	4798      	blx	r3
 8005b7e:	f8d4 0118 	ldr.w	r0, [r4, #280]	; 0x118
 8005b82:	fab0 f080 	clz	r0, r0
 8005b86:	0940      	lsrs	r0, r0, #5
 8005b88:	e78d      	b.n	8005aa6 <d_demangle_callback.constprop.0+0x292>
 8005b8a:	4606      	mov	r6, r0
 8005b8c:	e6bf      	b.n	800590e <d_demangle_callback.constprop.0+0xfa>
 8005b8e:	4616      	mov	r6, r2
 8005b90:	e783      	b.n	8005a9a <d_demangle_callback.constprop.0+0x286>
 8005b92:	bf00      	nop

08005b94 <d_print_subexpr>:
 8005b94:	b570      	push	{r4, r5, r6, lr}
 8005b96:	7813      	ldrb	r3, [r2, #0]
 8005b98:	2b01      	cmp	r3, #1
 8005b9a:	b082      	sub	sp, #8
 8005b9c:	4615      	mov	r5, r2
 8005b9e:	4604      	mov	r4, r0
 8005ba0:	d903      	bls.n	8005baa <d_print_subexpr+0x16>
 8005ba2:	2b31      	cmp	r3, #49	; 0x31
 8005ba4:	d001      	beq.n	8005baa <d_print_subexpr+0x16>
 8005ba6:	2b06      	cmp	r3, #6
 8005ba8:	d138      	bne.n	8005c1c <d_print_subexpr+0x88>
 8005baa:	2601      	movs	r6, #1
 8005bac:	686b      	ldr	r3, [r5, #4]
 8005bae:	2b01      	cmp	r3, #1
 8005bb0:	dc22      	bgt.n	8005bf8 <d_print_subexpr+0x64>
 8005bb2:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8005bb6:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8005bba:	dc1d      	bgt.n	8005bf8 <d_print_subexpr+0x64>
 8005bbc:	3301      	adds	r3, #1
 8005bbe:	3201      	adds	r2, #1
 8005bc0:	606b      	str	r3, [r5, #4]
 8005bc2:	2111      	movs	r1, #17
 8005bc4:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 8005bc8:	f8c4 211c 	str.w	r2, [r4, #284]	; 0x11c
 8005bcc:	f8c4 d12c 	str.w	sp, [r4, #300]	; 0x12c
 8005bd0:	462a      	mov	r2, r5
 8005bd2:	4620      	mov	r0, r4
 8005bd4:	9301      	str	r3, [sp, #4]
 8005bd6:	9500      	str	r5, [sp, #0]
 8005bd8:	f7fc ff2a 	bl	8002a30 <d_print_comp_inner>
 8005bdc:	686a      	ldr	r2, [r5, #4]
 8005bde:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
 8005be2:	9901      	ldr	r1, [sp, #4]
 8005be4:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 8005be8:	3a01      	subs	r2, #1
 8005bea:	3b01      	subs	r3, #1
 8005bec:	606a      	str	r2, [r5, #4]
 8005bee:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
 8005bf2:	b136      	cbz	r6, 8005c02 <d_print_subexpr+0x6e>
 8005bf4:	b002      	add	sp, #8
 8005bf6:	bd70      	pop	{r4, r5, r6, pc}
 8005bf8:	2301      	movs	r3, #1
 8005bfa:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8005bfe:	2e00      	cmp	r6, #0
 8005c00:	d1f8      	bne.n	8005bf4 <d_print_subexpr+0x60>
 8005c02:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005c06:	29ff      	cmp	r1, #255	; 0xff
 8005c08:	d015      	beq.n	8005c36 <d_print_subexpr+0xa2>
 8005c0a:	1c4a      	adds	r2, r1, #1
 8005c0c:	2329      	movs	r3, #41	; 0x29
 8005c0e:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005c12:	5463      	strb	r3, [r4, r1]
 8005c14:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005c18:	b002      	add	sp, #8
 8005c1a:	bd70      	pop	{r4, r5, r6, pc}
 8005c1c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005c20:	29ff      	cmp	r1, #255	; 0xff
 8005c22:	d016      	beq.n	8005c52 <d_print_subexpr+0xbe>
 8005c24:	1c4a      	adds	r2, r1, #1
 8005c26:	2328      	movs	r3, #40	; 0x28
 8005c28:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005c2c:	2600      	movs	r6, #0
 8005c2e:	5463      	strb	r3, [r4, r1]
 8005c30:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005c34:	e7ba      	b.n	8005bac <d_print_subexpr+0x18>
 8005c36:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005c3a:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8005c3e:	4620      	mov	r0, r4
 8005c40:	4798      	blx	r3
 8005c42:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005c46:	2201      	movs	r2, #1
 8005c48:	4413      	add	r3, r2
 8005c4a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005c4e:	4631      	mov	r1, r6
 8005c50:	e7dc      	b.n	8005c0c <d_print_subexpr+0x78>
 8005c52:	2600      	movs	r6, #0
 8005c54:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
 8005c58:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
 8005c5c:	4798      	blx	r3
 8005c5e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005c62:	2201      	movs	r2, #1
 8005c64:	4413      	add	r3, r2
 8005c66:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005c6a:	4631      	mov	r1, r6
 8005c6c:	e7db      	b.n	8005c26 <d_print_subexpr+0x92>
 8005c6e:	bf00      	nop

08005c70 <d_maybe_print_fold_expression>:
 8005c70:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005c74:	68d3      	ldr	r3, [r2, #12]
 8005c76:	68db      	ldr	r3, [r3, #12]
 8005c78:	681b      	ldr	r3, [r3, #0]
 8005c7a:	7819      	ldrb	r1, [r3, #0]
 8005c7c:	2966      	cmp	r1, #102	; 0x66
 8005c7e:	d178      	bne.n	8005d72 <d_maybe_print_fold_expression+0x102>
 8005c80:	6912      	ldr	r2, [r2, #16]
 8005c82:	f8d0 7124 	ldr.w	r7, [r0, #292]	; 0x124
 8005c86:	e9d2 8a03 	ldrd	r8, sl, [r2, #12]
 8005c8a:	f89a 2000 	ldrb.w	r2, [sl]
 8005c8e:	2a3c      	cmp	r2, #60	; 0x3c
 8005c90:	f04f 32ff 	mov.w	r2, #4294967295
 8005c94:	bf08      	it	eq
 8005c96:	e9da a903 	ldrdeq	sl, r9, [sl, #12]
 8005c9a:	f8c0 2124 	str.w	r2, [r0, #292]	; 0x124
 8005c9e:	785b      	ldrb	r3, [r3, #1]
 8005ca0:	bf18      	it	ne
 8005ca2:	f04f 0900 	movne.w	r9, #0
 8005ca6:	2b6c      	cmp	r3, #108	; 0x6c
 8005ca8:	4604      	mov	r4, r0
 8005caa:	f000 80a2 	beq.w	8005df2 <d_maybe_print_fold_expression+0x182>
 8005cae:	d863      	bhi.n	8005d78 <d_maybe_print_fold_expression+0x108>
 8005cb0:	2b4c      	cmp	r3, #76	; 0x4c
 8005cb2:	d001      	beq.n	8005cb8 <d_maybe_print_fold_expression+0x48>
 8005cb4:	2b52      	cmp	r3, #82	; 0x52
 8005cb6:	d157      	bne.n	8005d68 <d_maybe_print_fold_expression+0xf8>
 8005cb8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005cbc:	29ff      	cmp	r1, #255	; 0xff
 8005cbe:	f000 80eb 	beq.w	8005e98 <d_maybe_print_fold_expression+0x228>
 8005cc2:	1c4b      	adds	r3, r1, #1
 8005cc4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005cc8:	2328      	movs	r3, #40	; 0x28
 8005cca:	5463      	strb	r3, [r4, r1]
 8005ccc:	4652      	mov	r2, sl
 8005cce:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005cd2:	2111      	movs	r1, #17
 8005cd4:	4620      	mov	r0, r4
 8005cd6:	4e78      	ldr	r6, [pc, #480]	; (8005eb8 <d_maybe_print_fold_expression+0x248>)
 8005cd8:	f7ff ff5c 	bl	8005b94 <d_print_subexpr>
 8005cdc:	2111      	movs	r1, #17
 8005cde:	4642      	mov	r2, r8
 8005ce0:	4620      	mov	r0, r4
 8005ce2:	f7ff fd5b 	bl	800579c <d_print_expr_op>
 8005ce6:	f106 0b02 	add.w	fp, r6, #2
 8005cea:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005cee:	252e      	movs	r5, #46	; 0x2e
 8005cf0:	f04f 0a00 	mov.w	sl, #0
 8005cf4:	e00b      	b.n	8005d0e <d_maybe_print_fold_expression+0x9e>
 8005cf6:	460b      	mov	r3, r1
 8005cf8:	455e      	cmp	r6, fp
 8005cfa:	f101 0101 	add.w	r1, r1, #1
 8005cfe:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005d02:	54e5      	strb	r5, [r4, r3]
 8005d04:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005d08:	d019      	beq.n	8005d3e <d_maybe_print_fold_expression+0xce>
 8005d0a:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8005d0e:	29ff      	cmp	r1, #255	; 0xff
 8005d10:	d1f1      	bne.n	8005cf6 <d_maybe_print_fold_expression+0x86>
 8005d12:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005d16:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005d1a:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8005d1e:	4620      	mov	r0, r4
 8005d20:	4798      	blx	r3
 8005d22:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005d26:	3301      	adds	r3, #1
 8005d28:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005d2c:	2300      	movs	r3, #0
 8005d2e:	2101      	movs	r1, #1
 8005d30:	455e      	cmp	r6, fp
 8005d32:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005d36:	54e5      	strb	r5, [r4, r3]
 8005d38:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005d3c:	d1e5      	bne.n	8005d0a <d_maybe_print_fold_expression+0x9a>
 8005d3e:	4642      	mov	r2, r8
 8005d40:	2111      	movs	r1, #17
 8005d42:	4620      	mov	r0, r4
 8005d44:	f7ff fd2a 	bl	800579c <d_print_expr_op>
 8005d48:	464a      	mov	r2, r9
 8005d4a:	2111      	movs	r1, #17
 8005d4c:	4620      	mov	r0, r4
 8005d4e:	f7ff ff21 	bl	8005b94 <d_print_subexpr>
 8005d52:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005d56:	29ff      	cmp	r1, #255	; 0xff
 8005d58:	d07f      	beq.n	8005e5a <d_maybe_print_fold_expression+0x1ea>
 8005d5a:	1c4a      	adds	r2, r1, #1
 8005d5c:	2329      	movs	r3, #41	; 0x29
 8005d5e:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005d62:	5463      	strb	r3, [r4, r1]
 8005d64:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005d68:	f8c4 7124 	str.w	r7, [r4, #292]	; 0x124
 8005d6c:	2001      	movs	r0, #1
 8005d6e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005d72:	2000      	movs	r0, #0
 8005d74:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005d78:	2b72      	cmp	r3, #114	; 0x72
 8005d7a:	d1f5      	bne.n	8005d68 <d_maybe_print_fold_expression+0xf8>
 8005d7c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005d80:	29ff      	cmp	r1, #255	; 0xff
 8005d82:	d07b      	beq.n	8005e7c <d_maybe_print_fold_expression+0x20c>
 8005d84:	1c4b      	adds	r3, r1, #1
 8005d86:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005d8a:	2328      	movs	r3, #40	; 0x28
 8005d8c:	5463      	strb	r3, [r4, r1]
 8005d8e:	4652      	mov	r2, sl
 8005d90:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005d94:	2111      	movs	r1, #17
 8005d96:	4620      	mov	r0, r4
 8005d98:	4e48      	ldr	r6, [pc, #288]	; (8005ebc <d_maybe_print_fold_expression+0x24c>)
 8005d9a:	f7ff fefb 	bl	8005b94 <d_print_subexpr>
 8005d9e:	4642      	mov	r2, r8
 8005da0:	2111      	movs	r1, #17
 8005da2:	4620      	mov	r0, r4
 8005da4:	f7ff fcfa 	bl	800579c <d_print_expr_op>
 8005da8:	f106 0903 	add.w	r9, r6, #3
 8005dac:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005db0:	252e      	movs	r5, #46	; 0x2e
 8005db2:	f04f 0800 	mov.w	r8, #0
 8005db6:	e00a      	b.n	8005dce <d_maybe_print_fold_expression+0x15e>
 8005db8:	460b      	mov	r3, r1
 8005dba:	3101      	adds	r1, #1
 8005dbc:	454e      	cmp	r6, r9
 8005dbe:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005dc2:	54e5      	strb	r5, [r4, r3]
 8005dc4:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005dc8:	d0ce      	beq.n	8005d68 <d_maybe_print_fold_expression+0xf8>
 8005dca:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8005dce:	29ff      	cmp	r1, #255	; 0xff
 8005dd0:	d1f2      	bne.n	8005db8 <d_maybe_print_fold_expression+0x148>
 8005dd2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005dd6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005dda:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8005dde:	4620      	mov	r0, r4
 8005de0:	4798      	blx	r3
 8005de2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005de6:	3301      	adds	r3, #1
 8005de8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005dec:	2101      	movs	r1, #1
 8005dee:	2300      	movs	r3, #0
 8005df0:	e7e4      	b.n	8005dbc <d_maybe_print_fold_expression+0x14c>
 8005df2:	4d33      	ldr	r5, [pc, #204]	; (8005ec0 <d_maybe_print_fold_expression+0x250>)
 8005df4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005df8:	2628      	movs	r6, #40	; 0x28
 8005dfa:	f105 0b03 	add.w	fp, r5, #3
 8005dfe:	f04f 0900 	mov.w	r9, #0
 8005e02:	e00b      	b.n	8005e1c <d_maybe_print_fold_expression+0x1ac>
 8005e04:	460b      	mov	r3, r1
 8005e06:	45ab      	cmp	fp, r5
 8005e08:	f101 0101 	add.w	r1, r1, #1
 8005e0c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005e10:	54e6      	strb	r6, [r4, r3]
 8005e12:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8005e16:	d019      	beq.n	8005e4c <d_maybe_print_fold_expression+0x1dc>
 8005e18:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 8005e1c:	29ff      	cmp	r1, #255	; 0xff
 8005e1e:	d1f1      	bne.n	8005e04 <d_maybe_print_fold_expression+0x194>
 8005e20:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005e24:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005e28:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8005e2c:	4620      	mov	r0, r4
 8005e2e:	4798      	blx	r3
 8005e30:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005e34:	3301      	adds	r3, #1
 8005e36:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005e3a:	2300      	movs	r3, #0
 8005e3c:	2101      	movs	r1, #1
 8005e3e:	45ab      	cmp	fp, r5
 8005e40:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005e44:	54e6      	strb	r6, [r4, r3]
 8005e46:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8005e4a:	d1e5      	bne.n	8005e18 <d_maybe_print_fold_expression+0x1a8>
 8005e4c:	4642      	mov	r2, r8
 8005e4e:	2111      	movs	r1, #17
 8005e50:	4620      	mov	r0, r4
 8005e52:	f7ff fca3 	bl	800579c <d_print_expr_op>
 8005e56:	4652      	mov	r2, sl
 8005e58:	e777      	b.n	8005d4a <d_maybe_print_fold_expression+0xda>
 8005e5a:	2500      	movs	r5, #0
 8005e5c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005e60:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005e64:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8005e68:	4620      	mov	r0, r4
 8005e6a:	4798      	blx	r3
 8005e6c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005e70:	2201      	movs	r2, #1
 8005e72:	4413      	add	r3, r2
 8005e74:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005e78:	4629      	mov	r1, r5
 8005e7a:	e76f      	b.n	8005d5c <d_maybe_print_fold_expression+0xec>
 8005e7c:	2500      	movs	r5, #0
 8005e7e:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
 8005e82:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
 8005e86:	4798      	blx	r3
 8005e88:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005e8c:	3301      	adds	r3, #1
 8005e8e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005e92:	4629      	mov	r1, r5
 8005e94:	2301      	movs	r3, #1
 8005e96:	e776      	b.n	8005d86 <d_maybe_print_fold_expression+0x116>
 8005e98:	2500      	movs	r5, #0
 8005e9a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 8005e9e:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8005ea2:	4620      	mov	r0, r4
 8005ea4:	4798      	blx	r3
 8005ea6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005eaa:	3301      	adds	r3, #1
 8005eac:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8005eb0:	4629      	mov	r1, r5
 8005eb2:	2301      	movs	r3, #1
 8005eb4:	e706      	b.n	8005cc4 <d_maybe_print_fold_expression+0x54>
 8005eb6:	bf00      	nop
 8005eb8:	0800d6c0 	.word	0x0800d6c0
 8005ebc:	0800d7bc 	.word	0x0800d7bc
 8005ec0:	0800d7b4 	.word	0x0800d7b4

08005ec4 <d_maybe_print_designated_init>:
 8005ec4:	7813      	ldrb	r3, [r2, #0]
 8005ec6:	f003 03fd 	and.w	r3, r3, #253	; 0xfd
 8005eca:	2b38      	cmp	r3, #56	; 0x38
 8005ecc:	d001      	beq.n	8005ed2 <d_maybe_print_designated_init+0xe>
 8005ece:	2000      	movs	r0, #0
 8005ed0:	4770      	bx	lr
 8005ed2:	68d3      	ldr	r3, [r2, #12]
 8005ed4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005ed8:	68db      	ldr	r3, [r3, #12]
 8005eda:	681f      	ldr	r7, [r3, #0]
 8005edc:	783b      	ldrb	r3, [r7, #0]
 8005ede:	2b64      	cmp	r3, #100	; 0x64
 8005ee0:	d002      	beq.n	8005ee8 <d_maybe_print_designated_init+0x24>
 8005ee2:	2000      	movs	r0, #0
 8005ee4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005ee8:	787b      	ldrb	r3, [r7, #1]
 8005eea:	2b69      	cmp	r3, #105	; 0x69
 8005eec:	4604      	mov	r4, r0
 8005eee:	d011      	beq.n	8005f14 <d_maybe_print_designated_init+0x50>
 8005ef0:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8005ef4:	2b58      	cmp	r3, #88	; 0x58
 8005ef6:	d1f4      	bne.n	8005ee2 <d_maybe_print_designated_init+0x1e>
 8005ef8:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005efc:	6913      	ldr	r3, [r2, #16]
 8005efe:	29ff      	cmp	r1, #255	; 0xff
 8005f00:	e9d3 5603 	ldrd	r5, r6, [r3, #12]
 8005f04:	f000 808e 	beq.w	8006024 <d_maybe_print_designated_init+0x160>
 8005f08:	1c4b      	adds	r3, r1, #1
 8005f0a:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005f0e:	235b      	movs	r3, #91	; 0x5b
 8005f10:	5463      	strb	r3, [r4, r1]
 8005f12:	e00c      	b.n	8005f2e <d_maybe_print_designated_init+0x6a>
 8005f14:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005f18:	6913      	ldr	r3, [r2, #16]
 8005f1a:	29ff      	cmp	r1, #255	; 0xff
 8005f1c:	e9d3 5603 	ldrd	r5, r6, [r3, #12]
 8005f20:	f000 80b1 	beq.w	8006086 <d_maybe_print_designated_init+0x1c2>
 8005f24:	1c4b      	adds	r3, r1, #1
 8005f26:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005f2a:	232e      	movs	r3, #46	; 0x2e
 8005f2c:	5463      	strb	r3, [r4, r1]
 8005f2e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005f32:	462a      	mov	r2, r5
 8005f34:	2111      	movs	r1, #17
 8005f36:	4620      	mov	r0, r4
 8005f38:	f7fe fdf6 	bl	8004b28 <d_print_comp>
 8005f3c:	787b      	ldrb	r3, [r7, #1]
 8005f3e:	2b58      	cmp	r3, #88	; 0x58
 8005f40:	d03a      	beq.n	8005fb8 <d_maybe_print_designated_init+0xf4>
 8005f42:	2b69      	cmp	r3, #105	; 0x69
 8005f44:	d00b      	beq.n	8005f5e <d_maybe_print_designated_init+0x9a>
 8005f46:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005f4a:	29ff      	cmp	r1, #255	; 0xff
 8005f4c:	f000 808a 	beq.w	8006064 <d_maybe_print_designated_init+0x1a0>
 8005f50:	1c4a      	adds	r2, r1, #1
 8005f52:	235d      	movs	r3, #93	; 0x5d
 8005f54:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005f58:	5463      	strb	r3, [r4, r1]
 8005f5a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005f5e:	7833      	ldrb	r3, [r6, #0]
 8005f60:	f003 03fd 	and.w	r3, r3, #253	; 0xfd
 8005f64:	2b38      	cmp	r3, #56	; 0x38
 8005f66:	d012      	beq.n	8005f8e <d_maybe_print_designated_init+0xca>
 8005f68:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005f6c:	29ff      	cmp	r1, #255	; 0xff
 8005f6e:	d068      	beq.n	8006042 <d_maybe_print_designated_init+0x17e>
 8005f70:	1c4a      	adds	r2, r1, #1
 8005f72:	233d      	movs	r3, #61	; 0x3d
 8005f74:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005f78:	4620      	mov	r0, r4
 8005f7a:	5463      	strb	r3, [r4, r1]
 8005f7c:	4632      	mov	r2, r6
 8005f7e:	2111      	movs	r1, #17
 8005f80:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005f84:	f7ff fe06 	bl	8005b94 <d_print_subexpr>
 8005f88:	2001      	movs	r0, #1
 8005f8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005f8e:	68f3      	ldr	r3, [r6, #12]
 8005f90:	68db      	ldr	r3, [r3, #12]
 8005f92:	681b      	ldr	r3, [r3, #0]
 8005f94:	781a      	ldrb	r2, [r3, #0]
 8005f96:	2a64      	cmp	r2, #100	; 0x64
 8005f98:	d1e6      	bne.n	8005f68 <d_maybe_print_designated_init+0xa4>
 8005f9a:	785b      	ldrb	r3, [r3, #1]
 8005f9c:	2b69      	cmp	r3, #105	; 0x69
 8005f9e:	d003      	beq.n	8005fa8 <d_maybe_print_designated_init+0xe4>
 8005fa0:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8005fa4:	2b58      	cmp	r3, #88	; 0x58
 8005fa6:	d1df      	bne.n	8005f68 <d_maybe_print_designated_init+0xa4>
 8005fa8:	4620      	mov	r0, r4
 8005faa:	4632      	mov	r2, r6
 8005fac:	2111      	movs	r1, #17
 8005fae:	f7fe fdbb 	bl	8004b28 <d_print_comp>
 8005fb2:	2001      	movs	r0, #1
 8005fb4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005fb8:	f8df 80e8 	ldr.w	r8, [pc, #232]	; 80060a4 <d_maybe_print_designated_init+0x1e0>
 8005fbc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005fc0:	f108 0a04 	add.w	sl, r8, #4
 8005fc4:	2520      	movs	r5, #32
 8005fc6:	f04f 0900 	mov.w	r9, #0
 8005fca:	e00b      	b.n	8005fe4 <d_maybe_print_designated_init+0x120>
 8005fcc:	460b      	mov	r3, r1
 8005fce:	45c2      	cmp	sl, r8
 8005fd0:	f101 0101 	add.w	r1, r1, #1
 8005fd4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005fd8:	54e5      	strb	r5, [r4, r3]
 8005fda:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005fde:	d019      	beq.n	8006014 <d_maybe_print_designated_init+0x150>
 8005fe0:	f818 5f01 	ldrb.w	r5, [r8, #1]!
 8005fe4:	29ff      	cmp	r1, #255	; 0xff
 8005fe6:	d1f1      	bne.n	8005fcc <d_maybe_print_designated_init+0x108>
 8005fe8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005fec:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005ff0:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8005ff4:	4620      	mov	r0, r4
 8005ff6:	4798      	blx	r3
 8005ff8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8005ffc:	3301      	adds	r3, #1
 8005ffe:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8006002:	2300      	movs	r3, #0
 8006004:	2101      	movs	r1, #1
 8006006:	45c2      	cmp	sl, r8
 8006008:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 800600c:	54e5      	strb	r5, [r4, r3]
 800600e:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8006012:	d1e5      	bne.n	8005fe0 <d_maybe_print_designated_init+0x11c>
 8006014:	68f2      	ldr	r2, [r6, #12]
 8006016:	2111      	movs	r1, #17
 8006018:	4620      	mov	r0, r4
 800601a:	f7fe fd85 	bl	8004b28 <d_print_comp>
 800601e:	6936      	ldr	r6, [r6, #16]
 8006020:	787b      	ldrb	r3, [r7, #1]
 8006022:	e78e      	b.n	8005f42 <d_maybe_print_designated_init+0x7e>
 8006024:	f04f 0800 	mov.w	r8, #0
 8006028:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800602c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8006030:	4798      	blx	r3
 8006032:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8006036:	3301      	adds	r3, #1
 8006038:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800603c:	4641      	mov	r1, r8
 800603e:	2301      	movs	r3, #1
 8006040:	e763      	b.n	8005f0a <d_maybe_print_designated_init+0x46>
 8006042:	2500      	movs	r5, #0
 8006044:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8006048:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800604c:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8006050:	4620      	mov	r0, r4
 8006052:	4798      	blx	r3
 8006054:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8006058:	2201      	movs	r2, #1
 800605a:	4413      	add	r3, r2
 800605c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8006060:	4629      	mov	r1, r5
 8006062:	e786      	b.n	8005f72 <d_maybe_print_designated_init+0xae>
 8006064:	2500      	movs	r5, #0
 8006066:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800606a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800606e:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8006072:	4620      	mov	r0, r4
 8006074:	4798      	blx	r3
 8006076:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800607a:	2201      	movs	r2, #1
 800607c:	4413      	add	r3, r2
 800607e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 8006082:	4629      	mov	r1, r5
 8006084:	e765      	b.n	8005f52 <d_maybe_print_designated_init+0x8e>
 8006086:	f04f 0800 	mov.w	r8, #0
 800608a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
 800608e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8006092:	4798      	blx	r3
 8006094:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 8006098:	3301      	adds	r3, #1
 800609a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
 800609e:	4641      	mov	r1, r8
 80060a0:	2301      	movs	r3, #1
 80060a2:	e740      	b.n	8005f26 <d_maybe_print_designated_init+0x62>
 80060a4:	0800d7c4 	.word	0x0800d7c4

080060a8 <__cxa_demangle>:
 80060a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80060ac:	461e      	mov	r6, r3
 80060ae:	b084      	sub	sp, #16
 80060b0:	2800      	cmp	r0, #0
 80060b2:	d040      	beq.n	8006136 <__cxa_demangle+0x8e>
 80060b4:	460c      	mov	r4, r1
 80060b6:	4615      	mov	r5, r2
 80060b8:	b109      	cbz	r1, 80060be <__cxa_demangle+0x16>
 80060ba:	2a00      	cmp	r2, #0
 80060bc:	d03b      	beq.n	8006136 <__cxa_demangle+0x8e>
 80060be:	2300      	movs	r3, #0
 80060c0:	4929      	ldr	r1, [pc, #164]	; (8006168 <__cxa_demangle+0xc0>)
 80060c2:	466a      	mov	r2, sp
 80060c4:	e9cd 3300 	strd	r3, r3, [sp]
 80060c8:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80060cc:	f7ff fba2 	bl	8005814 <d_demangle_callback.constprop.0>
 80060d0:	2800      	cmp	r0, #0
 80060d2:	d039      	beq.n	8006148 <__cxa_demangle+0xa0>
 80060d4:	9b03      	ldr	r3, [sp, #12]
 80060d6:	9f00      	ldr	r7, [sp, #0]
 80060d8:	b9d3      	cbnz	r3, 8006110 <__cxa_demangle+0x68>
 80060da:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80060de:	2f00      	cmp	r7, #0
 80060e0:	d03c      	beq.n	800615c <__cxa_demangle+0xb4>
 80060e2:	b32c      	cbz	r4, 8006130 <__cxa_demangle+0x88>
 80060e4:	4638      	mov	r0, r7
 80060e6:	f000 f8b3 	bl	8006250 <strlen>
 80060ea:	682b      	ldr	r3, [r5, #0]
 80060ec:	4298      	cmp	r0, r3
 80060ee:	d219      	bcs.n	8006124 <__cxa_demangle+0x7c>
 80060f0:	4639      	mov	r1, r7
 80060f2:	1c42      	adds	r2, r0, #1
 80060f4:	4620      	mov	r0, r4
 80060f6:	f005 ff04 	bl	800bf02 <memcpy>
 80060fa:	4638      	mov	r0, r7
 80060fc:	f005 fa08 	bl	800b510 <free>
 8006100:	4627      	mov	r7, r4
 8006102:	b10e      	cbz	r6, 8006108 <__cxa_demangle+0x60>
 8006104:	2300      	movs	r3, #0
 8006106:	6033      	str	r3, [r6, #0]
 8006108:	4638      	mov	r0, r7
 800610a:	b004      	add	sp, #16
 800610c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006110:	f04f 0801 	mov.w	r8, #1
 8006114:	2f00      	cmp	r7, #0
 8006116:	d1e4      	bne.n	80060e2 <__cxa_demangle+0x3a>
 8006118:	b18e      	cbz	r6, 800613e <__cxa_demangle+0x96>
 800611a:	f04f 33ff 	mov.w	r3, #4294967295
 800611e:	6033      	str	r3, [r6, #0]
 8006120:	2700      	movs	r7, #0
 8006122:	e7f1      	b.n	8006108 <__cxa_demangle+0x60>
 8006124:	4620      	mov	r0, r4
 8006126:	f005 f9f3 	bl	800b510 <free>
 800612a:	f8c5 8000 	str.w	r8, [r5]
 800612e:	e7e8      	b.n	8006102 <__cxa_demangle+0x5a>
 8006130:	2d00      	cmp	r5, #0
 8006132:	d1fa      	bne.n	800612a <__cxa_demangle+0x82>
 8006134:	e7e5      	b.n	8006102 <__cxa_demangle+0x5a>
 8006136:	b116      	cbz	r6, 800613e <__cxa_demangle+0x96>
 8006138:	f06f 0302 	mvn.w	r3, #2
 800613c:	6033      	str	r3, [r6, #0]
 800613e:	2700      	movs	r7, #0
 8006140:	4638      	mov	r0, r7
 8006142:	b004      	add	sp, #16
 8006144:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006148:	9800      	ldr	r0, [sp, #0]
 800614a:	f005 f9e1 	bl	800b510 <free>
 800614e:	2e00      	cmp	r6, #0
 8006150:	d0f5      	beq.n	800613e <__cxa_demangle+0x96>
 8006152:	f06f 0301 	mvn.w	r3, #1
 8006156:	6033      	str	r3, [r6, #0]
 8006158:	2700      	movs	r7, #0
 800615a:	e7d5      	b.n	8006108 <__cxa_demangle+0x60>
 800615c:	2e00      	cmp	r6, #0
 800615e:	d0ee      	beq.n	800613e <__cxa_demangle+0x96>
 8006160:	f1b8 0f01 	cmp.w	r8, #1
 8006164:	d0d9      	beq.n	800611a <__cxa_demangle+0x72>
 8006166:	e7f4      	b.n	8006152 <__cxa_demangle+0xaa>
 8006168:	08000515 	.word	0x08000515

0800616c <__gcclibcxx_demangle_callback>:
 800616c:	b160      	cbz	r0, 8006188 <__gcclibcxx_demangle_callback+0x1c>
 800616e:	b508      	push	{r3, lr}
 8006170:	b139      	cbz	r1, 8006182 <__gcclibcxx_demangle_callback+0x16>
 8006172:	f7ff fb4f 	bl	8005814 <d_demangle_callback.constprop.0>
 8006176:	2800      	cmp	r0, #0
 8006178:	bf14      	ite	ne
 800617a:	2000      	movne	r0, #0
 800617c:	f06f 0001 	mvneq.w	r0, #1
 8006180:	bd08      	pop	{r3, pc}
 8006182:	f06f 0002 	mvn.w	r0, #2
 8006186:	bd08      	pop	{r3, pc}
 8006188:	f06f 0002 	mvn.w	r0, #2
 800618c:	4770      	bx	lr
 800618e:	bf00      	nop

08006190 <strcmp>:
 8006190:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006194:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006198:	2a01      	cmp	r2, #1
 800619a:	bf28      	it	cs
 800619c:	429a      	cmpcs	r2, r3
 800619e:	d0f7      	beq.n	8006190 <strcmp>
 80061a0:	1ad0      	subs	r0, r2, r3
 80061a2:	4770      	bx	lr
	...

080061b0 <memchr>:
 80061b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80061b4:	2a10      	cmp	r2, #16
 80061b6:	db2b      	blt.n	8006210 <memchr+0x60>
 80061b8:	f010 0f07 	tst.w	r0, #7
 80061bc:	d008      	beq.n	80061d0 <memchr+0x20>
 80061be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80061c2:	3a01      	subs	r2, #1
 80061c4:	428b      	cmp	r3, r1
 80061c6:	d02d      	beq.n	8006224 <memchr+0x74>
 80061c8:	f010 0f07 	tst.w	r0, #7
 80061cc:	b342      	cbz	r2, 8006220 <memchr+0x70>
 80061ce:	d1f6      	bne.n	80061be <memchr+0xe>
 80061d0:	b4f0      	push	{r4, r5, r6, r7}
 80061d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80061d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80061da:	f022 0407 	bic.w	r4, r2, #7
 80061de:	f07f 0700 	mvns.w	r7, #0
 80061e2:	2300      	movs	r3, #0
 80061e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80061e8:	3c08      	subs	r4, #8
 80061ea:	ea85 0501 	eor.w	r5, r5, r1
 80061ee:	ea86 0601 	eor.w	r6, r6, r1
 80061f2:	fa85 f547 	uadd8	r5, r5, r7
 80061f6:	faa3 f587 	sel	r5, r3, r7
 80061fa:	fa86 f647 	uadd8	r6, r6, r7
 80061fe:	faa5 f687 	sel	r6, r5, r7
 8006202:	b98e      	cbnz	r6, 8006228 <memchr+0x78>
 8006204:	d1ee      	bne.n	80061e4 <memchr+0x34>
 8006206:	bcf0      	pop	{r4, r5, r6, r7}
 8006208:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800620c:	f002 0207 	and.w	r2, r2, #7
 8006210:	b132      	cbz	r2, 8006220 <memchr+0x70>
 8006212:	f810 3b01 	ldrb.w	r3, [r0], #1
 8006216:	3a01      	subs	r2, #1
 8006218:	ea83 0301 	eor.w	r3, r3, r1
 800621c:	b113      	cbz	r3, 8006224 <memchr+0x74>
 800621e:	d1f8      	bne.n	8006212 <memchr+0x62>
 8006220:	2000      	movs	r0, #0
 8006222:	4770      	bx	lr
 8006224:	3801      	subs	r0, #1
 8006226:	4770      	bx	lr
 8006228:	2d00      	cmp	r5, #0
 800622a:	bf06      	itte	eq
 800622c:	4635      	moveq	r5, r6
 800622e:	3803      	subeq	r0, #3
 8006230:	3807      	subne	r0, #7
 8006232:	f015 0f01 	tst.w	r5, #1
 8006236:	d107      	bne.n	8006248 <memchr+0x98>
 8006238:	3001      	adds	r0, #1
 800623a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800623e:	bf02      	ittt	eq
 8006240:	3001      	addeq	r0, #1
 8006242:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8006246:	3001      	addeq	r0, #1
 8006248:	bcf0      	pop	{r4, r5, r6, r7}
 800624a:	3801      	subs	r0, #1
 800624c:	4770      	bx	lr
 800624e:	bf00      	nop

08006250 <strlen>:
 8006250:	4603      	mov	r3, r0
 8006252:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006256:	2a00      	cmp	r2, #0
 8006258:	d1fb      	bne.n	8006252 <strlen+0x2>
 800625a:	1a18      	subs	r0, r3, r0
 800625c:	3801      	subs	r0, #1
 800625e:	4770      	bx	lr

08006260 <selfrel_offset31>:
 8006260:	6803      	ldr	r3, [r0, #0]
 8006262:	005a      	lsls	r2, r3, #1
 8006264:	bf4c      	ite	mi
 8006266:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 800626a:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
 800626e:	4418      	add	r0, r3
 8006270:	4770      	bx	lr
 8006272:	bf00      	nop

08006274 <search_EIT_table>:
 8006274:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006278:	b329      	cbz	r1, 80062c6 <search_EIT_table+0x52>
 800627a:	1e4f      	subs	r7, r1, #1
 800627c:	4604      	mov	r4, r0
 800627e:	4615      	mov	r5, r2
 8006280:	463e      	mov	r6, r7
 8006282:	f04f 0800 	mov.w	r8, #0
 8006286:	eb08 0106 	add.w	r1, r8, r6
 800628a:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 800628e:	1049      	asrs	r1, r1, #1
 8006290:	eb04 09c1 	add.w	r9, r4, r1, lsl #3
 8006294:	4648      	mov	r0, r9
 8006296:	f7ff ffe3 	bl	8006260 <selfrel_offset31>
 800629a:	4603      	mov	r3, r0
 800629c:	00c8      	lsls	r0, r1, #3
 800629e:	3008      	adds	r0, #8
 80062a0:	428f      	cmp	r7, r1
 80062a2:	4420      	add	r0, r4
 80062a4:	d009      	beq.n	80062ba <search_EIT_table+0x46>
 80062a6:	42ab      	cmp	r3, r5
 80062a8:	d809      	bhi.n	80062be <search_EIT_table+0x4a>
 80062aa:	f7ff ffd9 	bl	8006260 <selfrel_offset31>
 80062ae:	3801      	subs	r0, #1
 80062b0:	42a8      	cmp	r0, r5
 80062b2:	d20a      	bcs.n	80062ca <search_EIT_table+0x56>
 80062b4:	f101 0801 	add.w	r8, r1, #1
 80062b8:	e7e5      	b.n	8006286 <search_EIT_table+0x12>
 80062ba:	42ab      	cmp	r3, r5
 80062bc:	d905      	bls.n	80062ca <search_EIT_table+0x56>
 80062be:	4588      	cmp	r8, r1
 80062c0:	d001      	beq.n	80062c6 <search_EIT_table+0x52>
 80062c2:	1e4e      	subs	r6, r1, #1
 80062c4:	e7df      	b.n	8006286 <search_EIT_table+0x12>
 80062c6:	f04f 0900 	mov.w	r9, #0
 80062ca:	4648      	mov	r0, r9
 80062cc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

080062d0 <__gnu_unwind_get_pr_addr>:
 80062d0:	2801      	cmp	r0, #1
 80062d2:	d007      	beq.n	80062e4 <__gnu_unwind_get_pr_addr+0x14>
 80062d4:	2802      	cmp	r0, #2
 80062d6:	d007      	beq.n	80062e8 <__gnu_unwind_get_pr_addr+0x18>
 80062d8:	4b04      	ldr	r3, [pc, #16]	; (80062ec <__gnu_unwind_get_pr_addr+0x1c>)
 80062da:	2800      	cmp	r0, #0
 80062dc:	bf0c      	ite	eq
 80062de:	4618      	moveq	r0, r3
 80062e0:	2000      	movne	r0, #0
 80062e2:	4770      	bx	lr
 80062e4:	4802      	ldr	r0, [pc, #8]	; (80062f0 <__gnu_unwind_get_pr_addr+0x20>)
 80062e6:	4770      	bx	lr
 80062e8:	4802      	ldr	r0, [pc, #8]	; (80062f4 <__gnu_unwind_get_pr_addr+0x24>)
 80062ea:	4770      	bx	lr
 80062ec:	080069a5 	.word	0x080069a5
 80062f0:	080069a9 	.word	0x080069a9
 80062f4:	080069ad 	.word	0x080069ad

080062f8 <get_eit_entry>:
 80062f8:	b530      	push	{r4, r5, lr}
 80062fa:	4b22      	ldr	r3, [pc, #136]	; (8006384 <get_eit_entry+0x8c>)
 80062fc:	b083      	sub	sp, #12
 80062fe:	4604      	mov	r4, r0
 8006300:	1e8d      	subs	r5, r1, #2
 8006302:	b343      	cbz	r3, 8006356 <get_eit_entry+0x5e>
 8006304:	a901      	add	r1, sp, #4
 8006306:	4628      	mov	r0, r5
 8006308:	f3af 8000 	nop.w
 800630c:	b1f0      	cbz	r0, 800634c <get_eit_entry+0x54>
 800630e:	9901      	ldr	r1, [sp, #4]
 8006310:	462a      	mov	r2, r5
 8006312:	f7ff ffaf 	bl	8006274 <search_EIT_table>
 8006316:	4601      	mov	r1, r0
 8006318:	b1c0      	cbz	r0, 800634c <get_eit_entry+0x54>
 800631a:	f7ff ffa1 	bl	8006260 <selfrel_offset31>
 800631e:	684b      	ldr	r3, [r1, #4]
 8006320:	64a0      	str	r0, [r4, #72]	; 0x48
 8006322:	2b01      	cmp	r3, #1
 8006324:	d02b      	beq.n	800637e <get_eit_entry+0x86>
 8006326:	2b00      	cmp	r3, #0
 8006328:	f101 0004 	add.w	r0, r1, #4
 800632c:	db25      	blt.n	800637a <get_eit_entry+0x82>
 800632e:	f7ff ff97 	bl	8006260 <selfrel_offset31>
 8006332:	2300      	movs	r3, #0
 8006334:	6523      	str	r3, [r4, #80]	; 0x50
 8006336:	6803      	ldr	r3, [r0, #0]
 8006338:	64e0      	str	r0, [r4, #76]	; 0x4c
 800633a:	2b00      	cmp	r3, #0
 800633c:	db12      	blt.n	8006364 <get_eit_entry+0x6c>
 800633e:	f7ff ff8f 	bl	8006260 <selfrel_offset31>
 8006342:	4603      	mov	r3, r0
 8006344:	2000      	movs	r0, #0
 8006346:	6123      	str	r3, [r4, #16]
 8006348:	b003      	add	sp, #12
 800634a:	bd30      	pop	{r4, r5, pc}
 800634c:	2300      	movs	r3, #0
 800634e:	2009      	movs	r0, #9
 8006350:	6123      	str	r3, [r4, #16]
 8006352:	b003      	add	sp, #12
 8006354:	bd30      	pop	{r4, r5, pc}
 8006356:	4b0c      	ldr	r3, [pc, #48]	; (8006388 <get_eit_entry+0x90>)
 8006358:	490c      	ldr	r1, [pc, #48]	; (800638c <get_eit_entry+0x94>)
 800635a:	1ac9      	subs	r1, r1, r3
 800635c:	10c9      	asrs	r1, r1, #3
 800635e:	4618      	mov	r0, r3
 8006360:	9101      	str	r1, [sp, #4]
 8006362:	e7d5      	b.n	8006310 <get_eit_entry+0x18>
 8006364:	f3c3 6003 	ubfx	r0, r3, #24, #4
 8006368:	f7ff ffb2 	bl	80062d0 <__gnu_unwind_get_pr_addr>
 800636c:	1e03      	subs	r3, r0, #0
 800636e:	bf0c      	ite	eq
 8006370:	2009      	moveq	r0, #9
 8006372:	2000      	movne	r0, #0
 8006374:	6123      	str	r3, [r4, #16]
 8006376:	b003      	add	sp, #12
 8006378:	bd30      	pop	{r4, r5, pc}
 800637a:	2301      	movs	r3, #1
 800637c:	e7da      	b.n	8006334 <get_eit_entry+0x3c>
 800637e:	2300      	movs	r3, #0
 8006380:	2005      	movs	r0, #5
 8006382:	e7e0      	b.n	8006346 <get_eit_entry+0x4e>
 8006384:	00000000 	.word	0x00000000
 8006388:	0800df70 	.word	0x0800df70
 800638c:	0800e248 	.word	0x0800e248

08006390 <restore_non_core_regs>:
 8006390:	6803      	ldr	r3, [r0, #0]
 8006392:	07da      	lsls	r2, r3, #31
 8006394:	b510      	push	{r4, lr}
 8006396:	4604      	mov	r4, r0
 8006398:	d406      	bmi.n	80063a8 <restore_non_core_regs+0x18>
 800639a:	079b      	lsls	r3, r3, #30
 800639c:	f100 0048 	add.w	r0, r0, #72	; 0x48
 80063a0:	d509      	bpl.n	80063b6 <restore_non_core_regs+0x26>
 80063a2:	f000 fc71 	bl	8006c88 <__gnu_Unwind_Restore_VFP_D>
 80063a6:	6823      	ldr	r3, [r4, #0]
 80063a8:	0759      	lsls	r1, r3, #29
 80063aa:	d509      	bpl.n	80063c0 <restore_non_core_regs+0x30>
 80063ac:	071a      	lsls	r2, r3, #28
 80063ae:	d50e      	bpl.n	80063ce <restore_non_core_regs+0x3e>
 80063b0:	06db      	lsls	r3, r3, #27
 80063b2:	d513      	bpl.n	80063dc <restore_non_core_regs+0x4c>
 80063b4:	bd10      	pop	{r4, pc}
 80063b6:	f000 fc5f 	bl	8006c78 <__gnu_Unwind_Restore_VFP>
 80063ba:	6823      	ldr	r3, [r4, #0]
 80063bc:	0759      	lsls	r1, r3, #29
 80063be:	d4f5      	bmi.n	80063ac <restore_non_core_regs+0x1c>
 80063c0:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80063c4:	f000 fc68 	bl	8006c98 <__gnu_Unwind_Restore_VFP_D_16_to_31>
 80063c8:	6823      	ldr	r3, [r4, #0]
 80063ca:	071a      	lsls	r2, r3, #28
 80063cc:	d4f0      	bmi.n	80063b0 <restore_non_core_regs+0x20>
 80063ce:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 80063d2:	f000 fc69 	bl	8006ca8 <__gnu_Unwind_Restore_WMMXD>
 80063d6:	6823      	ldr	r3, [r4, #0]
 80063d8:	06db      	lsls	r3, r3, #27
 80063da:	d4eb      	bmi.n	80063b4 <restore_non_core_regs+0x24>
 80063dc:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
 80063e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80063e4:	f000 bca4 	b.w	8006d30 <__gnu_Unwind_Restore_WMMXC>

080063e8 <__gnu_unwind_24bit.constprop.0>:
 80063e8:	2009      	movs	r0, #9
 80063ea:	4770      	bx	lr

080063ec <_Unwind_decode_typeinfo_ptr.constprop.0>:
 80063ec:	4603      	mov	r3, r0
 80063ee:	6800      	ldr	r0, [r0, #0]
 80063f0:	b100      	cbz	r0, 80063f4 <_Unwind_decode_typeinfo_ptr.constprop.0+0x8>
 80063f2:	4418      	add	r0, r3
 80063f4:	4770      	bx	lr
 80063f6:	bf00      	nop

080063f8 <_Unwind_DebugHook>:
 80063f8:	4770      	bx	lr
 80063fa:	bf00      	nop

080063fc <unwind_phase2>:
 80063fc:	b570      	push	{r4, r5, r6, lr}
 80063fe:	4604      	mov	r4, r0
 8006400:	460e      	mov	r6, r1
 8006402:	6c31      	ldr	r1, [r6, #64]	; 0x40
 8006404:	4620      	mov	r0, r4
 8006406:	f7ff ff77 	bl	80062f8 <get_eit_entry>
 800640a:	4605      	mov	r5, r0
 800640c:	b988      	cbnz	r0, 8006432 <unwind_phase2+0x36>
 800640e:	6c32      	ldr	r2, [r6, #64]	; 0x40
 8006410:	6162      	str	r2, [r4, #20]
 8006412:	6923      	ldr	r3, [r4, #16]
 8006414:	4632      	mov	r2, r6
 8006416:	4621      	mov	r1, r4
 8006418:	2001      	movs	r0, #1
 800641a:	4798      	blx	r3
 800641c:	2808      	cmp	r0, #8
 800641e:	d0f0      	beq.n	8006402 <unwind_phase2+0x6>
 8006420:	2807      	cmp	r0, #7
 8006422:	d106      	bne.n	8006432 <unwind_phase2+0x36>
 8006424:	4628      	mov	r0, r5
 8006426:	6c31      	ldr	r1, [r6, #64]	; 0x40
 8006428:	f7ff ffe6 	bl	80063f8 <_Unwind_DebugHook>
 800642c:	1d30      	adds	r0, r6, #4
 800642e:	f000 fc17 	bl	8006c60 <__restore_core_regs>
 8006432:	f005 f85d 	bl	800b4f0 <abort>
 8006436:	bf00      	nop

08006438 <unwind_phase2_forced>:
 8006438:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800643c:	1d0d      	adds	r5, r1, #4
 800643e:	f8d0 800c 	ldr.w	r8, [r0, #12]
 8006442:	f8d0 9018 	ldr.w	r9, [r0, #24]
 8006446:	4607      	mov	r7, r0
 8006448:	4614      	mov	r4, r2
 800644a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800644c:	f5ad 7d72 	sub.w	sp, sp, #968	; 0x3c8
 8006450:	f10d 0c0c 	add.w	ip, sp, #12
 8006454:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8006458:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800645a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800645e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006460:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8006464:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8006468:	ae02      	add	r6, sp, #8
 800646a:	f04f 0e00 	mov.w	lr, #0
 800646e:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
 8006472:	f8c6 e000 	str.w	lr, [r6]
 8006476:	e020      	b.n	80064ba <unwind_phase2_forced+0x82>
 8006478:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800647a:	617b      	str	r3, [r7, #20]
 800647c:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8006480:	4631      	mov	r1, r6
 8006482:	a87a      	add	r0, sp, #488	; 0x1e8
 8006484:	f005 fd3d 	bl	800bf02 <memcpy>
 8006488:	693b      	ldr	r3, [r7, #16]
 800648a:	aa7a      	add	r2, sp, #488	; 0x1e8
 800648c:	4639      	mov	r1, r7
 800648e:	4650      	mov	r0, sl
 8006490:	4798      	blx	r3
 8006492:	9b88      	ldr	r3, [sp, #544]	; 0x220
 8006494:	6473      	str	r3, [r6, #68]	; 0x44
 8006496:	4621      	mov	r1, r4
 8006498:	e9cd 6900 	strd	r6, r9, [sp]
 800649c:	4605      	mov	r5, r0
 800649e:	463b      	mov	r3, r7
 80064a0:	463a      	mov	r2, r7
 80064a2:	2001      	movs	r0, #1
 80064a4:	47c0      	blx	r8
 80064a6:	4604      	mov	r4, r0
 80064a8:	b9e0      	cbnz	r0, 80064e4 <unwind_phase2_forced+0xac>
 80064aa:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80064ae:	a97a      	add	r1, sp, #488	; 0x1e8
 80064b0:	4630      	mov	r0, r6
 80064b2:	f005 fd26 	bl	800bf02 <memcpy>
 80064b6:	2d08      	cmp	r5, #8
 80064b8:	d11a      	bne.n	80064f0 <unwind_phase2_forced+0xb8>
 80064ba:	6c31      	ldr	r1, [r6, #64]	; 0x40
 80064bc:	4638      	mov	r0, r7
 80064be:	f7ff ff1b 	bl	80062f8 <get_eit_entry>
 80064c2:	3409      	adds	r4, #9
 80064c4:	fa5f fa84 	uxtb.w	sl, r4
 80064c8:	4605      	mov	r5, r0
 80064ca:	2800      	cmp	r0, #0
 80064cc:	d0d4      	beq.n	8006478 <unwind_phase2_forced+0x40>
 80064ce:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 80064d0:	6473      	str	r3, [r6, #68]	; 0x44
 80064d2:	463a      	mov	r2, r7
 80064d4:	e9cd 6900 	strd	r6, r9, [sp]
 80064d8:	463b      	mov	r3, r7
 80064da:	f04a 0110 	orr.w	r1, sl, #16
 80064de:	2001      	movs	r0, #1
 80064e0:	47c0      	blx	r8
 80064e2:	b100      	cbz	r0, 80064e6 <unwind_phase2_forced+0xae>
 80064e4:	2509      	movs	r5, #9
 80064e6:	4628      	mov	r0, r5
 80064e8:	f50d 7d72 	add.w	sp, sp, #968	; 0x3c8
 80064ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80064f0:	2d07      	cmp	r5, #7
 80064f2:	d1f7      	bne.n	80064e4 <unwind_phase2_forced+0xac>
 80064f4:	4620      	mov	r0, r4
 80064f6:	6c31      	ldr	r1, [r6, #64]	; 0x40
 80064f8:	f7ff ff7e 	bl	80063f8 <_Unwind_DebugHook>
 80064fc:	a803      	add	r0, sp, #12
 80064fe:	f000 fbaf 	bl	8006c60 <__restore_core_regs>
 8006502:	bf00      	nop

08006504 <_Unwind_GetCFA>:
 8006504:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8006506:	4770      	bx	lr

08006508 <__gnu_Unwind_RaiseException>:
 8006508:	b5f0      	push	{r4, r5, r6, r7, lr}
 800650a:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 800650c:	640b      	str	r3, [r1, #64]	; 0x40
 800650e:	f101 0c04 	add.w	ip, r1, #4
 8006512:	460e      	mov	r6, r1
 8006514:	4605      	mov	r5, r0
 8006516:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 800651a:	b0f9      	sub	sp, #484	; 0x1e4
 800651c:	ac01      	add	r4, sp, #4
 800651e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006520:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8006524:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006526:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 800652a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800652c:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
 8006530:	f04f 37ff 	mov.w	r7, #4294967295
 8006534:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8006538:	9700      	str	r7, [sp, #0]
 800653a:	e006      	b.n	800654a <__gnu_Unwind_RaiseException+0x42>
 800653c:	692b      	ldr	r3, [r5, #16]
 800653e:	466a      	mov	r2, sp
 8006540:	4629      	mov	r1, r5
 8006542:	4798      	blx	r3
 8006544:	2808      	cmp	r0, #8
 8006546:	4604      	mov	r4, r0
 8006548:	d108      	bne.n	800655c <__gnu_Unwind_RaiseException+0x54>
 800654a:	9910      	ldr	r1, [sp, #64]	; 0x40
 800654c:	4628      	mov	r0, r5
 800654e:	f7ff fed3 	bl	80062f8 <get_eit_entry>
 8006552:	2800      	cmp	r0, #0
 8006554:	d0f2      	beq.n	800653c <__gnu_Unwind_RaiseException+0x34>
 8006556:	2009      	movs	r0, #9
 8006558:	b079      	add	sp, #484	; 0x1e4
 800655a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800655c:	4668      	mov	r0, sp
 800655e:	f7ff ff17 	bl	8006390 <restore_non_core_regs>
 8006562:	2c06      	cmp	r4, #6
 8006564:	d1f7      	bne.n	8006556 <__gnu_Unwind_RaiseException+0x4e>
 8006566:	4631      	mov	r1, r6
 8006568:	4628      	mov	r0, r5
 800656a:	f7ff ff47 	bl	80063fc <unwind_phase2>
 800656e:	bf00      	nop

08006570 <__gnu_Unwind_ForcedUnwind>:
 8006570:	60c1      	str	r1, [r0, #12]
 8006572:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8006574:	6182      	str	r2, [r0, #24]
 8006576:	6419      	str	r1, [r3, #64]	; 0x40
 8006578:	2200      	movs	r2, #0
 800657a:	4619      	mov	r1, r3
 800657c:	e75c      	b.n	8006438 <unwind_phase2_forced>
 800657e:	bf00      	nop

08006580 <__gnu_Unwind_Resume>:
 8006580:	b570      	push	{r4, r5, r6, lr}
 8006582:	68c6      	ldr	r6, [r0, #12]
 8006584:	6943      	ldr	r3, [r0, #20]
 8006586:	640b      	str	r3, [r1, #64]	; 0x40
 8006588:	b9ae      	cbnz	r6, 80065b6 <__gnu_Unwind_Resume+0x36>
 800658a:	6903      	ldr	r3, [r0, #16]
 800658c:	460a      	mov	r2, r1
 800658e:	4604      	mov	r4, r0
 8006590:	460d      	mov	r5, r1
 8006592:	4601      	mov	r1, r0
 8006594:	2002      	movs	r0, #2
 8006596:	4798      	blx	r3
 8006598:	2807      	cmp	r0, #7
 800659a:	d005      	beq.n	80065a8 <__gnu_Unwind_Resume+0x28>
 800659c:	2808      	cmp	r0, #8
 800659e:	d10f      	bne.n	80065c0 <__gnu_Unwind_Resume+0x40>
 80065a0:	4629      	mov	r1, r5
 80065a2:	4620      	mov	r0, r4
 80065a4:	f7ff ff2a 	bl	80063fc <unwind_phase2>
 80065a8:	4630      	mov	r0, r6
 80065aa:	6c29      	ldr	r1, [r5, #64]	; 0x40
 80065ac:	f7ff ff24 	bl	80063f8 <_Unwind_DebugHook>
 80065b0:	1d28      	adds	r0, r5, #4
 80065b2:	f000 fb55 	bl	8006c60 <__restore_core_regs>
 80065b6:	2201      	movs	r2, #1
 80065b8:	f7ff ff3e 	bl	8006438 <unwind_phase2_forced>
 80065bc:	f004 ff98 	bl	800b4f0 <abort>
 80065c0:	f004 ff96 	bl	800b4f0 <abort>

080065c4 <__gnu_Unwind_Resume_or_Rethrow>:
 80065c4:	68c2      	ldr	r2, [r0, #12]
 80065c6:	b11a      	cbz	r2, 80065d0 <__gnu_Unwind_Resume_or_Rethrow+0xc>
 80065c8:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 80065ca:	640a      	str	r2, [r1, #64]	; 0x40
 80065cc:	2200      	movs	r2, #0
 80065ce:	e733      	b.n	8006438 <unwind_phase2_forced>
 80065d0:	e79a      	b.n	8006508 <__gnu_Unwind_RaiseException>
 80065d2:	bf00      	nop

080065d4 <_Unwind_Complete>:
 80065d4:	4770      	bx	lr
 80065d6:	bf00      	nop

080065d8 <_Unwind_DeleteException>:
 80065d8:	6883      	ldr	r3, [r0, #8]
 80065da:	4601      	mov	r1, r0
 80065dc:	b10b      	cbz	r3, 80065e2 <_Unwind_DeleteException+0xa>
 80065de:	2001      	movs	r0, #1
 80065e0:	4718      	bx	r3
 80065e2:	4770      	bx	lr

080065e4 <_Unwind_VRS_Get>:
 80065e4:	2901      	cmp	r1, #1
 80065e6:	d012      	beq.n	800660e <_Unwind_VRS_Get+0x2a>
 80065e8:	d809      	bhi.n	80065fe <_Unwind_VRS_Get+0x1a>
 80065ea:	b973      	cbnz	r3, 800660a <_Unwind_VRS_Get+0x26>
 80065ec:	2a0f      	cmp	r2, #15
 80065ee:	d80c      	bhi.n	800660a <_Unwind_VRS_Get+0x26>
 80065f0:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80065f4:	4618      	mov	r0, r3
 80065f6:	6853      	ldr	r3, [r2, #4]
 80065f8:	9a00      	ldr	r2, [sp, #0]
 80065fa:	6013      	str	r3, [r2, #0]
 80065fc:	4770      	bx	lr
 80065fe:	3903      	subs	r1, #3
 8006600:	2901      	cmp	r1, #1
 8006602:	bf94      	ite	ls
 8006604:	2001      	movls	r0, #1
 8006606:	2002      	movhi	r0, #2
 8006608:	4770      	bx	lr
 800660a:	2002      	movs	r0, #2
 800660c:	4770      	bx	lr
 800660e:	4608      	mov	r0, r1
 8006610:	4770      	bx	lr
 8006612:	bf00      	nop

08006614 <_Unwind_GetGR>:
 8006614:	b500      	push	{lr}
 8006616:	b085      	sub	sp, #20
 8006618:	460a      	mov	r2, r1
 800661a:	2300      	movs	r3, #0
 800661c:	a903      	add	r1, sp, #12
 800661e:	9100      	str	r1, [sp, #0]
 8006620:	4619      	mov	r1, r3
 8006622:	f7ff ffdf 	bl	80065e4 <_Unwind_VRS_Get>
 8006626:	9803      	ldr	r0, [sp, #12]
 8006628:	b005      	add	sp, #20
 800662a:	f85d fb04 	ldr.w	pc, [sp], #4
 800662e:	bf00      	nop

08006630 <_Unwind_VRS_Set>:
 8006630:	2901      	cmp	r1, #1
 8006632:	d012      	beq.n	800665a <_Unwind_VRS_Set+0x2a>
 8006634:	d809      	bhi.n	800664a <_Unwind_VRS_Set+0x1a>
 8006636:	b973      	cbnz	r3, 8006656 <_Unwind_VRS_Set+0x26>
 8006638:	2a0f      	cmp	r2, #15
 800663a:	d80c      	bhi.n	8006656 <_Unwind_VRS_Set+0x26>
 800663c:	9900      	ldr	r1, [sp, #0]
 800663e:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8006642:	6809      	ldr	r1, [r1, #0]
 8006644:	6051      	str	r1, [r2, #4]
 8006646:	4618      	mov	r0, r3
 8006648:	4770      	bx	lr
 800664a:	3903      	subs	r1, #3
 800664c:	2901      	cmp	r1, #1
 800664e:	bf94      	ite	ls
 8006650:	2001      	movls	r0, #1
 8006652:	2002      	movhi	r0, #2
 8006654:	4770      	bx	lr
 8006656:	2002      	movs	r0, #2
 8006658:	4770      	bx	lr
 800665a:	4608      	mov	r0, r1
 800665c:	4770      	bx	lr
 800665e:	bf00      	nop

08006660 <_Unwind_SetGR>:
 8006660:	b510      	push	{r4, lr}
 8006662:	b084      	sub	sp, #16
 8006664:	2300      	movs	r3, #0
 8006666:	ac03      	add	r4, sp, #12
 8006668:	9203      	str	r2, [sp, #12]
 800666a:	9400      	str	r4, [sp, #0]
 800666c:	460a      	mov	r2, r1
 800666e:	4619      	mov	r1, r3
 8006670:	f7ff ffde 	bl	8006630 <_Unwind_VRS_Set>
 8006674:	b004      	add	sp, #16
 8006676:	bd10      	pop	{r4, pc}

08006678 <__gnu_Unwind_Backtrace>:
 8006678:	b570      	push	{r4, r5, r6, lr}
 800667a:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 800667c:	6413      	str	r3, [r2, #64]	; 0x40
 800667e:	f102 0c04 	add.w	ip, r2, #4
 8006682:	4605      	mov	r5, r0
 8006684:	460c      	mov	r4, r1
 8006686:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 800668a:	f5ad 7d0e 	sub.w	sp, sp, #568	; 0x238
 800668e:	f10d 0e5c 	add.w	lr, sp, #92	; 0x5c
 8006692:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 8006696:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 800669a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800669e:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 80066a2:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 80066a6:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
 80066aa:	f04f 36ff 	mov.w	r6, #4294967295
 80066ae:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
 80066b2:	9616      	str	r6, [sp, #88]	; 0x58
 80066b4:	e010      	b.n	80066d8 <__gnu_Unwind_Backtrace+0x60>
 80066b6:	f7ff ffd3 	bl	8006660 <_Unwind_SetGR>
 80066ba:	4621      	mov	r1, r4
 80066bc:	a816      	add	r0, sp, #88	; 0x58
 80066be:	47a8      	blx	r5
 80066c0:	4603      	mov	r3, r0
 80066c2:	aa16      	add	r2, sp, #88	; 0x58
 80066c4:	4669      	mov	r1, sp
 80066c6:	2008      	movs	r0, #8
 80066c8:	b983      	cbnz	r3, 80066ec <__gnu_Unwind_Backtrace+0x74>
 80066ca:	9b04      	ldr	r3, [sp, #16]
 80066cc:	4798      	blx	r3
 80066ce:	2805      	cmp	r0, #5
 80066d0:	4606      	mov	r6, r0
 80066d2:	d00c      	beq.n	80066ee <__gnu_Unwind_Backtrace+0x76>
 80066d4:	2809      	cmp	r0, #9
 80066d6:	d009      	beq.n	80066ec <__gnu_Unwind_Backtrace+0x74>
 80066d8:	9926      	ldr	r1, [sp, #152]	; 0x98
 80066da:	4668      	mov	r0, sp
 80066dc:	f7ff fe0c 	bl	80062f8 <get_eit_entry>
 80066e0:	4603      	mov	r3, r0
 80066e2:	466a      	mov	r2, sp
 80066e4:	210c      	movs	r1, #12
 80066e6:	a816      	add	r0, sp, #88	; 0x58
 80066e8:	2b00      	cmp	r3, #0
 80066ea:	d0e4      	beq.n	80066b6 <__gnu_Unwind_Backtrace+0x3e>
 80066ec:	2609      	movs	r6, #9
 80066ee:	a816      	add	r0, sp, #88	; 0x58
 80066f0:	f7ff fe4e 	bl	8006390 <restore_non_core_regs>
 80066f4:	4630      	mov	r0, r6
 80066f6:	f50d 7d0e 	add.w	sp, sp, #568	; 0x238
 80066fa:	bd70      	pop	{r4, r5, r6, pc}

080066fc <__gnu_unwind_pr_common>:
 80066fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006700:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
 8006702:	b089      	sub	sp, #36	; 0x24
 8006704:	461e      	mov	r6, r3
 8006706:	f854 3b04 	ldr.w	r3, [r4], #4
 800670a:	9406      	str	r4, [sp, #24]
 800670c:	460d      	mov	r5, r1
 800670e:	4617      	mov	r7, r2
 8006710:	f000 0803 	and.w	r8, r0, #3
 8006714:	2e00      	cmp	r6, #0
 8006716:	d079      	beq.n	800680c <__gnu_unwind_pr_common+0x110>
 8006718:	0c1a      	lsrs	r2, r3, #16
 800671a:	f88d 201d 	strb.w	r2, [sp, #29]
 800671e:	041b      	lsls	r3, r3, #16
 8006720:	b2d2      	uxtb	r2, r2
 8006722:	9305      	str	r3, [sp, #20]
 8006724:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8006728:	2302      	movs	r3, #2
 800672a:	f88d 301c 	strb.w	r3, [sp, #28]
 800672e:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 8006730:	f1b8 0f02 	cmp.w	r8, #2
 8006734:	bf08      	it	eq
 8006736:	6bac      	ldreq	r4, [r5, #56]	; 0x38
 8006738:	f013 0301 	ands.w	r3, r3, #1
 800673c:	d00c      	beq.n	8006758 <__gnu_unwind_pr_common+0x5c>
 800673e:	a905      	add	r1, sp, #20
 8006740:	4638      	mov	r0, r7
 8006742:	f000 fb8f 	bl	8006e64 <__gnu_unwind_execute>
 8006746:	b918      	cbnz	r0, 8006750 <__gnu_unwind_pr_common+0x54>
 8006748:	2008      	movs	r0, #8
 800674a:	b009      	add	sp, #36	; 0x24
 800674c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006750:	2009      	movs	r0, #9
 8006752:	b009      	add	sp, #36	; 0x24
 8006754:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006758:	f8d4 a000 	ldr.w	sl, [r4]
 800675c:	f1ba 0f00 	cmp.w	sl, #0
 8006760:	d0ed      	beq.n	800673e <__gnu_unwind_pr_common+0x42>
 8006762:	9301      	str	r3, [sp, #4]
 8006764:	f000 0308 	and.w	r3, r0, #8
 8006768:	9302      	str	r3, [sp, #8]
 800676a:	2e02      	cmp	r6, #2
 800676c:	d04a      	beq.n	8006804 <__gnu_unwind_pr_common+0x108>
 800676e:	f8b4 a000 	ldrh.w	sl, [r4]
 8006772:	f8b4 9002 	ldrh.w	r9, [r4, #2]
 8006776:	3404      	adds	r4, #4
 8006778:	6cab      	ldr	r3, [r5, #72]	; 0x48
 800677a:	f029 0b01 	bic.w	fp, r9, #1
 800677e:	210f      	movs	r1, #15
 8006780:	4638      	mov	r0, r7
 8006782:	449b      	add	fp, r3
 8006784:	f7ff ff46 	bl	8006614 <_Unwind_GetGR>
 8006788:	4583      	cmp	fp, r0
 800678a:	d839      	bhi.n	8006800 <__gnu_unwind_pr_common+0x104>
 800678c:	f02a 0201 	bic.w	r2, sl, #1
 8006790:	445a      	add	r2, fp
 8006792:	4282      	cmp	r2, r0
 8006794:	bf94      	ite	ls
 8006796:	2200      	movls	r2, #0
 8006798:	2201      	movhi	r2, #1
 800679a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 800679e:	f003 0302 	and.w	r3, r3, #2
 80067a2:	f00a 0a01 	and.w	sl, sl, #1
 80067a6:	ea43 030a 	orr.w	r3, r3, sl
 80067aa:	2b01      	cmp	r3, #1
 80067ac:	d04b      	beq.n	8006846 <__gnu_unwind_pr_common+0x14a>
 80067ae:	2b02      	cmp	r3, #2
 80067b0:	d032      	beq.n	8006818 <__gnu_unwind_pr_common+0x11c>
 80067b2:	2b00      	cmp	r3, #0
 80067b4:	d1cc      	bne.n	8006750 <__gnu_unwind_pr_common+0x54>
 80067b6:	f1b8 0f00 	cmp.w	r8, #0
 80067ba:	d002      	beq.n	80067c2 <__gnu_unwind_pr_common+0xc6>
 80067bc:	2a00      	cmp	r2, #0
 80067be:	f040 80cd 	bne.w	800695c <__gnu_unwind_pr_common+0x260>
 80067c2:	3404      	adds	r4, #4
 80067c4:	f8d4 a000 	ldr.w	sl, [r4]
 80067c8:	f1ba 0f00 	cmp.w	sl, #0
 80067cc:	d1cd      	bne.n	800676a <__gnu_unwind_pr_common+0x6e>
 80067ce:	a905      	add	r1, sp, #20
 80067d0:	4638      	mov	r0, r7
 80067d2:	f000 fb47 	bl	8006e64 <__gnu_unwind_execute>
 80067d6:	2800      	cmp	r0, #0
 80067d8:	d1ba      	bne.n	8006750 <__gnu_unwind_pr_common+0x54>
 80067da:	9b01      	ldr	r3, [sp, #4]
 80067dc:	2b00      	cmp	r3, #0
 80067de:	d0b3      	beq.n	8006748 <__gnu_unwind_pr_common+0x4c>
 80067e0:	210f      	movs	r1, #15
 80067e2:	4638      	mov	r0, r7
 80067e4:	f7ff ff16 	bl	8006614 <_Unwind_GetGR>
 80067e8:	210e      	movs	r1, #14
 80067ea:	4602      	mov	r2, r0
 80067ec:	4638      	mov	r0, r7
 80067ee:	f7ff ff37 	bl	8006660 <_Unwind_SetGR>
 80067f2:	4638      	mov	r0, r7
 80067f4:	4a6a      	ldr	r2, [pc, #424]	; (80069a0 <__gnu_unwind_pr_common+0x2a4>)
 80067f6:	210f      	movs	r1, #15
 80067f8:	f7ff ff32 	bl	8006660 <_Unwind_SetGR>
 80067fc:	2007      	movs	r0, #7
 80067fe:	e7a8      	b.n	8006752 <__gnu_unwind_pr_common+0x56>
 8006800:	2200      	movs	r2, #0
 8006802:	e7ca      	b.n	800679a <__gnu_unwind_pr_common+0x9e>
 8006804:	f8d4 9004 	ldr.w	r9, [r4, #4]
 8006808:	3408      	adds	r4, #8
 800680a:	e7b5      	b.n	8006778 <__gnu_unwind_pr_common+0x7c>
 800680c:	021b      	lsls	r3, r3, #8
 800680e:	9305      	str	r3, [sp, #20]
 8006810:	f88d 601d 	strb.w	r6, [sp, #29]
 8006814:	2303      	movs	r3, #3
 8006816:	e788      	b.n	800672a <__gnu_unwind_pr_common+0x2e>
 8006818:	f8d4 9000 	ldr.w	r9, [r4]
 800681c:	f029 4b00 	bic.w	fp, r9, #2147483648	; 0x80000000
 8006820:	f1b8 0f00 	cmp.w	r8, #0
 8006824:	d146      	bne.n	80068b4 <__gnu_unwind_pr_common+0x1b8>
 8006826:	b12a      	cbz	r2, 8006834 <__gnu_unwind_pr_common+0x138>
 8006828:	9b02      	ldr	r3, [sp, #8]
 800682a:	2b00      	cmp	r3, #0
 800682c:	d05b      	beq.n	80068e6 <__gnu_unwind_pr_common+0x1ea>
 800682e:	f1bb 0f00 	cmp.w	fp, #0
 8006832:	d073      	beq.n	800691c <__gnu_unwind_pr_common+0x220>
 8006834:	f1b9 0f00 	cmp.w	r9, #0
 8006838:	da00      	bge.n	800683c <__gnu_unwind_pr_common+0x140>
 800683a:	3404      	adds	r4, #4
 800683c:	f10b 0b01 	add.w	fp, fp, #1
 8006840:	eb04 048b 	add.w	r4, r4, fp, lsl #2
 8006844:	e7be      	b.n	80067c4 <__gnu_unwind_pr_common+0xc8>
 8006846:	f1b8 0f00 	cmp.w	r8, #0
 800684a:	d119      	bne.n	8006880 <__gnu_unwind_pr_common+0x184>
 800684c:	b1b2      	cbz	r2, 800687c <__gnu_unwind_pr_common+0x180>
 800684e:	6861      	ldr	r1, [r4, #4]
 8006850:	6822      	ldr	r2, [r4, #0]
 8006852:	1c88      	adds	r0, r1, #2
 8006854:	ea4f 72d2 	mov.w	r2, r2, lsr #31
 8006858:	f43f af7a 	beq.w	8006750 <__gnu_unwind_pr_common+0x54>
 800685c:	f105 0358 	add.w	r3, r5, #88	; 0x58
 8006860:	3101      	adds	r1, #1
 8006862:	9304      	str	r3, [sp, #16]
 8006864:	f000 808e 	beq.w	8006984 <__gnu_unwind_pr_common+0x288>
 8006868:	1d20      	adds	r0, r4, #4
 800686a:	f7ff fdbf 	bl	80063ec <_Unwind_decode_typeinfo_ptr.constprop.0>
 800686e:	ab04      	add	r3, sp, #16
 8006870:	4601      	mov	r1, r0
 8006872:	4628      	mov	r0, r5
 8006874:	f003 fd36 	bl	800a2e4 <__cxa_type_match>
 8006878:	2800      	cmp	r0, #0
 800687a:	d159      	bne.n	8006930 <__gnu_unwind_pr_common+0x234>
 800687c:	3408      	adds	r4, #8
 800687e:	e7a1      	b.n	80067c4 <__gnu_unwind_pr_common+0xc8>
 8006880:	210d      	movs	r1, #13
 8006882:	4638      	mov	r0, r7
 8006884:	f8d5 9020 	ldr.w	r9, [r5, #32]
 8006888:	f7ff fec4 	bl	8006614 <_Unwind_GetGR>
 800688c:	4581      	cmp	r9, r0
 800688e:	d1f5      	bne.n	800687c <__gnu_unwind_pr_common+0x180>
 8006890:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8006892:	429c      	cmp	r4, r3
 8006894:	d1f2      	bne.n	800687c <__gnu_unwind_pr_common+0x180>
 8006896:	4620      	mov	r0, r4
 8006898:	f7ff fce2 	bl	8006260 <selfrel_offset31>
 800689c:	210f      	movs	r1, #15
 800689e:	4602      	mov	r2, r0
 80068a0:	4638      	mov	r0, r7
 80068a2:	f7ff fedd 	bl	8006660 <_Unwind_SetGR>
 80068a6:	4638      	mov	r0, r7
 80068a8:	462a      	mov	r2, r5
 80068aa:	2100      	movs	r1, #0
 80068ac:	f7ff fed8 	bl	8006660 <_Unwind_SetGR>
 80068b0:	2007      	movs	r0, #7
 80068b2:	e74e      	b.n	8006752 <__gnu_unwind_pr_common+0x56>
 80068b4:	210d      	movs	r1, #13
 80068b6:	4638      	mov	r0, r7
 80068b8:	f8d5 a020 	ldr.w	sl, [r5, #32]
 80068bc:	f7ff feaa 	bl	8006614 <_Unwind_GetGR>
 80068c0:	4582      	cmp	sl, r0
 80068c2:	d1b7      	bne.n	8006834 <__gnu_unwind_pr_common+0x138>
 80068c4:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80068c6:	429c      	cmp	r4, r3
 80068c8:	d1b4      	bne.n	8006834 <__gnu_unwind_pr_common+0x138>
 80068ca:	2304      	movs	r3, #4
 80068cc:	2200      	movs	r2, #0
 80068ce:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
 80068d2:	18e3      	adds	r3, r4, r3
 80068d4:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
 80068d8:	636b      	str	r3, [r5, #52]	; 0x34
 80068da:	6823      	ldr	r3, [r4, #0]
 80068dc:	2b00      	cmp	r3, #0
 80068de:	db59      	blt.n	8006994 <__gnu_unwind_pr_common+0x298>
 80068e0:	2301      	movs	r3, #1
 80068e2:	9301      	str	r3, [sp, #4]
 80068e4:	e7aa      	b.n	800683c <__gnu_unwind_pr_common+0x140>
 80068e6:	4699      	mov	r9, r3
 80068e8:	f105 0358 	add.w	r3, r5, #88	; 0x58
 80068ec:	f8cd 800c 	str.w	r8, [sp, #12]
 80068f0:	f104 0a04 	add.w	sl, r4, #4
 80068f4:	46b0      	mov	r8, r6
 80068f6:	461e      	mov	r6, r3
 80068f8:	e00e      	b.n	8006918 <__gnu_unwind_pr_common+0x21c>
 80068fa:	4650      	mov	r0, sl
 80068fc:	9604      	str	r6, [sp, #16]
 80068fe:	f7ff fd75 	bl	80063ec <_Unwind_decode_typeinfo_ptr.constprop.0>
 8006902:	2200      	movs	r2, #0
 8006904:	4601      	mov	r1, r0
 8006906:	ab04      	add	r3, sp, #16
 8006908:	4628      	mov	r0, r5
 800690a:	f109 0901 	add.w	r9, r9, #1
 800690e:	f10a 0a04 	add.w	sl, sl, #4
 8006912:	f003 fce7 	bl	800a2e4 <__cxa_type_match>
 8006916:	b9d8      	cbnz	r0, 8006950 <__gnu_unwind_pr_common+0x254>
 8006918:	45d9      	cmp	r9, fp
 800691a:	d1ee      	bne.n	80068fa <__gnu_unwind_pr_common+0x1fe>
 800691c:	210d      	movs	r1, #13
 800691e:	4638      	mov	r0, r7
 8006920:	f7ff fe78 	bl	8006614 <_Unwind_GetGR>
 8006924:	9b04      	ldr	r3, [sp, #16]
 8006926:	6228      	str	r0, [r5, #32]
 8006928:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
 800692c:	2006      	movs	r0, #6
 800692e:	e710      	b.n	8006752 <__gnu_unwind_pr_common+0x56>
 8006930:	4681      	mov	r9, r0
 8006932:	210d      	movs	r1, #13
 8006934:	4638      	mov	r0, r7
 8006936:	f7ff fe6d 	bl	8006614 <_Unwind_GetGR>
 800693a:	f1b9 0f02 	cmp.w	r9, #2
 800693e:	bf04      	itt	eq
 8006940:	462b      	moveq	r3, r5
 8006942:	9a04      	ldreq	r2, [sp, #16]
 8006944:	6228      	str	r0, [r5, #32]
 8006946:	bf14      	ite	ne
 8006948:	9b04      	ldrne	r3, [sp, #16]
 800694a:	f843 2f2c 	streq.w	r2, [r3, #44]!
 800694e:	e7eb      	b.n	8006928 <__gnu_unwind_pr_common+0x22c>
 8006950:	4646      	mov	r6, r8
 8006952:	f8d4 9000 	ldr.w	r9, [r4]
 8006956:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800695a:	e76b      	b.n	8006834 <__gnu_unwind_pr_common+0x138>
 800695c:	4620      	mov	r0, r4
 800695e:	f7ff fc7f 	bl	8006260 <selfrel_offset31>
 8006962:	3404      	adds	r4, #4
 8006964:	4602      	mov	r2, r0
 8006966:	63ac      	str	r4, [r5, #56]	; 0x38
 8006968:	4628      	mov	r0, r5
 800696a:	4614      	mov	r4, r2
 800696c:	f003 fd12 	bl	800a394 <__cxa_begin_cleanup>
 8006970:	2800      	cmp	r0, #0
 8006972:	f43f aeed 	beq.w	8006750 <__gnu_unwind_pr_common+0x54>
 8006976:	4638      	mov	r0, r7
 8006978:	4622      	mov	r2, r4
 800697a:	210f      	movs	r1, #15
 800697c:	f7ff fe70 	bl	8006660 <_Unwind_SetGR>
 8006980:	2007      	movs	r0, #7
 8006982:	e6e6      	b.n	8006752 <__gnu_unwind_pr_common+0x56>
 8006984:	210d      	movs	r1, #13
 8006986:	4638      	mov	r0, r7
 8006988:	9301      	str	r3, [sp, #4]
 800698a:	f7ff fe43 	bl	8006614 <_Unwind_GetGR>
 800698e:	9b01      	ldr	r3, [sp, #4]
 8006990:	6228      	str	r0, [r5, #32]
 8006992:	e7c9      	b.n	8006928 <__gnu_unwind_pr_common+0x22c>
 8006994:	f10b 0001 	add.w	r0, fp, #1
 8006998:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 800699c:	e77c      	b.n	8006898 <__gnu_unwind_pr_common+0x19c>
 800699e:	bf00      	nop
 80069a0:	0800b3a5 	.word	0x0800b3a5

080069a4 <__aeabi_unwind_cpp_pr0>:
 80069a4:	2300      	movs	r3, #0
 80069a6:	e6a9      	b.n	80066fc <__gnu_unwind_pr_common>

080069a8 <__aeabi_unwind_cpp_pr1>:
 80069a8:	2301      	movs	r3, #1
 80069aa:	e6a7      	b.n	80066fc <__gnu_unwind_pr_common>

080069ac <__aeabi_unwind_cpp_pr2>:
 80069ac:	2302      	movs	r3, #2
 80069ae:	e6a5      	b.n	80066fc <__gnu_unwind_pr_common>

080069b0 <_Unwind_VRS_Pop>:
 80069b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80069b4:	4606      	mov	r6, r0
 80069b6:	b0c3      	sub	sp, #268	; 0x10c
 80069b8:	4691      	mov	r9, r2
 80069ba:	461c      	mov	r4, r3
 80069bc:	2904      	cmp	r1, #4
 80069be:	f200 809b 	bhi.w	8006af8 <_Unwind_VRS_Pop+0x148>
 80069c2:	e8df f001 	tbb	[pc, r1]
 80069c6:	567b      	.short	0x567b
 80069c8:	2e99      	.short	0x2e99
 80069ca:	03          	.byte	0x03
 80069cb:	00          	.byte	0x00
 80069cc:	2c00      	cmp	r4, #0
 80069ce:	f040 8093 	bne.w	8006af8 <_Unwind_VRS_Pop+0x148>
 80069d2:	2a10      	cmp	r2, #16
 80069d4:	f200 8090 	bhi.w	8006af8 <_Unwind_VRS_Pop+0x148>
 80069d8:	6803      	ldr	r3, [r0, #0]
 80069da:	06dc      	lsls	r4, r3, #27
 80069dc:	f100 80f3 	bmi.w	8006bc6 <_Unwind_VRS_Pop+0x216>
 80069e0:	af20      	add	r7, sp, #128	; 0x80
 80069e2:	4638      	mov	r0, r7
 80069e4:	f000 f9ae 	bl	8006d44 <__gnu_Unwind_Save_WMMXC>
 80069e8:	6bb4      	ldr	r4, [r6, #56]	; 0x38
 80069ea:	4639      	mov	r1, r7
 80069ec:	2300      	movs	r3, #0
 80069ee:	f04f 0c01 	mov.w	ip, #1
 80069f2:	fa0c f203 	lsl.w	r2, ip, r3
 80069f6:	ea12 0f09 	tst.w	r2, r9
 80069fa:	4620      	mov	r0, r4
 80069fc:	f103 0301 	add.w	r3, r3, #1
 8006a00:	d003      	beq.n	8006a0a <_Unwind_VRS_Pop+0x5a>
 8006a02:	f850 2b04 	ldr.w	r2, [r0], #4
 8006a06:	600a      	str	r2, [r1, #0]
 8006a08:	4604      	mov	r4, r0
 8006a0a:	2b04      	cmp	r3, #4
 8006a0c:	f101 0104 	add.w	r1, r1, #4
 8006a10:	d1ef      	bne.n	80069f2 <_Unwind_VRS_Pop+0x42>
 8006a12:	4638      	mov	r0, r7
 8006a14:	63b4      	str	r4, [r6, #56]	; 0x38
 8006a16:	f000 f98b 	bl	8006d30 <__gnu_Unwind_Restore_WMMXC>
 8006a1a:	2000      	movs	r0, #0
 8006a1c:	b043      	add	sp, #268	; 0x10c
 8006a1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006a22:	2c03      	cmp	r4, #3
 8006a24:	d168      	bne.n	8006af8 <_Unwind_VRS_Pop+0x148>
 8006a26:	b294      	uxth	r4, r2
 8006a28:	eb04 4312 	add.w	r3, r4, r2, lsr #16
 8006a2c:	2b10      	cmp	r3, #16
 8006a2e:	ea4f 4912 	mov.w	r9, r2, lsr #16
 8006a32:	d861      	bhi.n	8006af8 <_Unwind_VRS_Pop+0x148>
 8006a34:	6803      	ldr	r3, [r0, #0]
 8006a36:	071d      	lsls	r5, r3, #28
 8006a38:	f100 80cd 	bmi.w	8006bd6 <_Unwind_VRS_Pop+0x226>
 8006a3c:	af20      	add	r7, sp, #128	; 0x80
 8006a3e:	4638      	mov	r0, r7
 8006a40:	f000 f954 	bl	8006cec <__gnu_Unwind_Save_WMMXD>
 8006a44:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 8006a46:	eb07 01c9 	add.w	r1, r7, r9, lsl #3
 8006a4a:	b154      	cbz	r4, 8006a62 <_Unwind_VRS_Pop+0xb2>
 8006a4c:	460b      	mov	r3, r1
 8006a4e:	1ad0      	subs	r0, r2, r3
 8006a50:	eb01 01c4 	add.w	r1, r1, r4, lsl #3
 8006a54:	00e4      	lsls	r4, r4, #3
 8006a56:	581d      	ldr	r5, [r3, r0]
 8006a58:	f843 5b04 	str.w	r5, [r3], #4
 8006a5c:	428b      	cmp	r3, r1
 8006a5e:	d1fa      	bne.n	8006a56 <_Unwind_VRS_Pop+0xa6>
 8006a60:	4422      	add	r2, r4
 8006a62:	4638      	mov	r0, r7
 8006a64:	63b2      	str	r2, [r6, #56]	; 0x38
 8006a66:	f000 f91f 	bl	8006ca8 <__gnu_Unwind_Restore_WMMXD>
 8006a6a:	2000      	movs	r0, #0
 8006a6c:	b043      	add	sp, #268	; 0x10c
 8006a6e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006a72:	2c01      	cmp	r4, #1
 8006a74:	ea4f 4812 	mov.w	r8, r2, lsr #16
 8006a78:	fa1f f982 	uxth.w	r9, r2
 8006a7c:	d038      	beq.n	8006af0 <_Unwind_VRS_Pop+0x140>
 8006a7e:	2c05      	cmp	r4, #5
 8006a80:	d13a      	bne.n	8006af8 <_Unwind_VRS_Pop+0x148>
 8006a82:	eb08 0309 	add.w	r3, r8, r9
 8006a86:	2b20      	cmp	r3, #32
 8006a88:	d836      	bhi.n	8006af8 <_Unwind_VRS_Pop+0x148>
 8006a8a:	f1b8 0f0f 	cmp.w	r8, #15
 8006a8e:	d976      	bls.n	8006b7e <_Unwind_VRS_Pop+0x1ce>
 8006a90:	f1b9 0f00 	cmp.w	r9, #0
 8006a94:	f040 8083 	bne.w	8006b9e <_Unwind_VRS_Pop+0x1ee>
 8006a98:	2b0f      	cmp	r3, #15
 8006a9a:	d80b      	bhi.n	8006ab4 <_Unwind_VRS_Pop+0x104>
 8006a9c:	6833      	ldr	r3, [r6, #0]
 8006a9e:	07d8      	lsls	r0, r3, #31
 8006aa0:	d508      	bpl.n	8006ab4 <_Unwind_VRS_Pop+0x104>
 8006aa2:	4630      	mov	r0, r6
 8006aa4:	f023 0301 	bic.w	r3, r3, #1
 8006aa8:	f043 0302 	orr.w	r3, r3, #2
 8006aac:	f840 3b48 	str.w	r3, [r0], #72
 8006ab0:	f000 f8ee 	bl	8006c90 <__gnu_Unwind_Save_VFP_D>
 8006ab4:	2000      	movs	r0, #0
 8006ab6:	b043      	add	sp, #268	; 0x10c
 8006ab8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006abc:	b9e4      	cbnz	r4, 8006af8 <_Unwind_VRS_Pop+0x148>
 8006abe:	6b87      	ldr	r7, [r0, #56]	; 0x38
 8006ac0:	4623      	mov	r3, r4
 8006ac2:	fa1f fc82 	uxth.w	ip, r2
 8006ac6:	2001      	movs	r0, #1
 8006ac8:	1d34      	adds	r4, r6, #4
 8006aca:	fa00 f203 	lsl.w	r2, r0, r3
 8006ace:	ea12 0f0c 	tst.w	r2, ip
 8006ad2:	4639      	mov	r1, r7
 8006ad4:	d004      	beq.n	8006ae0 <_Unwind_VRS_Pop+0x130>
 8006ad6:	f851 2b04 	ldr.w	r2, [r1], #4
 8006ada:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
 8006ade:	460f      	mov	r7, r1
 8006ae0:	3301      	adds	r3, #1
 8006ae2:	2b10      	cmp	r3, #16
 8006ae4:	d1f1      	bne.n	8006aca <_Unwind_VRS_Pop+0x11a>
 8006ae6:	f419 5000 	ands.w	r0, r9, #8192	; 0x2000
 8006aea:	d1e3      	bne.n	8006ab4 <_Unwind_VRS_Pop+0x104>
 8006aec:	63b7      	str	r7, [r6, #56]	; 0x38
 8006aee:	e004      	b.n	8006afa <_Unwind_VRS_Pop+0x14a>
 8006af0:	eb08 0309 	add.w	r3, r8, r9
 8006af4:	2b10      	cmp	r3, #16
 8006af6:	d903      	bls.n	8006b00 <_Unwind_VRS_Pop+0x150>
 8006af8:	2002      	movs	r0, #2
 8006afa:	b043      	add	sp, #268	; 0x10c
 8006afc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006b00:	f1b8 0f0f 	cmp.w	r8, #15
 8006b04:	d8f8      	bhi.n	8006af8 <_Unwind_VRS_Pop+0x148>
 8006b06:	6833      	ldr	r3, [r6, #0]
 8006b08:	07da      	lsls	r2, r3, #31
 8006b0a:	d506      	bpl.n	8006b1a <_Unwind_VRS_Pop+0x16a>
 8006b0c:	4630      	mov	r0, r6
 8006b0e:	f023 0303 	bic.w	r3, r3, #3
 8006b12:	f840 3b48 	str.w	r3, [r0], #72
 8006b16:	f000 f8b3 	bl	8006c80 <__gnu_Unwind_Save_VFP>
 8006b1a:	af20      	add	r7, sp, #128	; 0x80
 8006b1c:	4638      	mov	r0, r7
 8006b1e:	464d      	mov	r5, r9
 8006b20:	f000 f8ae 	bl	8006c80 <__gnu_Unwind_Save_VFP>
 8006b24:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 8006b26:	2d00      	cmp	r5, #0
 8006b28:	d05e      	beq.n	8006be8 <_Unwind_VRS_Pop+0x238>
 8006b2a:	f04f 0900 	mov.w	r9, #0
 8006b2e:	eb07 01c8 	add.w	r1, r7, r8, lsl #3
 8006b32:	eb02 03c5 	add.w	r3, r2, r5, lsl #3
 8006b36:	3904      	subs	r1, #4
 8006b38:	f852 0b04 	ldr.w	r0, [r2], #4
 8006b3c:	f841 0f04 	str.w	r0, [r1, #4]!
 8006b40:	429a      	cmp	r2, r3
 8006b42:	d1f9      	bne.n	8006b38 <_Unwind_VRS_Pop+0x188>
 8006b44:	f1b9 0f00 	cmp.w	r9, #0
 8006b48:	d054      	beq.n	8006bf4 <_Unwind_VRS_Pop+0x244>
 8006b4a:	466f      	mov	r7, sp
 8006b4c:	4641      	mov	r1, r8
 8006b4e:	2910      	cmp	r1, #16
 8006b50:	bf38      	it	cc
 8006b52:	2110      	movcc	r1, #16
 8006b54:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
 8006b58:	3984      	subs	r1, #132	; 0x84
 8006b5a:	eb03 02c9 	add.w	r2, r3, r9, lsl #3
 8006b5e:	f853 5b04 	ldr.w	r5, [r3], #4
 8006b62:	f841 5f04 	str.w	r5, [r1, #4]!
 8006b66:	429a      	cmp	r2, r3
 8006b68:	d1f9      	bne.n	8006b5e <_Unwind_VRS_Pop+0x1ae>
 8006b6a:	2c01      	cmp	r4, #1
 8006b6c:	d03b      	beq.n	8006be6 <_Unwind_VRS_Pop+0x236>
 8006b6e:	f1b8 0f0f 	cmp.w	r8, #15
 8006b72:	63b2      	str	r2, [r6, #56]	; 0x38
 8006b74:	d958      	bls.n	8006c28 <_Unwind_VRS_Pop+0x278>
 8006b76:	4638      	mov	r0, r7
 8006b78:	f000 f88e 	bl	8006c98 <__gnu_Unwind_Restore_VFP_D_16_to_31>
 8006b7c:	e79a      	b.n	8006ab4 <_Unwind_VRS_Pop+0x104>
 8006b7e:	2b10      	cmp	r3, #16
 8006b80:	d954      	bls.n	8006c2c <_Unwind_VRS_Pop+0x27c>
 8006b82:	6832      	ldr	r2, [r6, #0]
 8006b84:	07d7      	lsls	r7, r2, #31
 8006b86:	f1a3 0910 	sub.w	r9, r3, #16
 8006b8a:	d509      	bpl.n	8006ba0 <_Unwind_VRS_Pop+0x1f0>
 8006b8c:	f022 0301 	bic.w	r3, r2, #1
 8006b90:	4630      	mov	r0, r6
 8006b92:	f043 0302 	orr.w	r3, r3, #2
 8006b96:	f840 3b48 	str.w	r3, [r0], #72
 8006b9a:	f000 f879 	bl	8006c90 <__gnu_Unwind_Save_VFP_D>
 8006b9e:	6832      	ldr	r2, [r6, #0]
 8006ba0:	0753      	lsls	r3, r2, #29
 8006ba2:	d439      	bmi.n	8006c18 <_Unwind_VRS_Pop+0x268>
 8006ba4:	f1b8 0f0f 	cmp.w	r8, #15
 8006ba8:	d802      	bhi.n	8006bb0 <_Unwind_VRS_Pop+0x200>
 8006baa:	a820      	add	r0, sp, #128	; 0x80
 8006bac:	f000 f870 	bl	8006c90 <__gnu_Unwind_Save_VFP_D>
 8006bb0:	466f      	mov	r7, sp
 8006bb2:	4638      	mov	r0, r7
 8006bb4:	f1c8 0510 	rsb	r5, r8, #16
 8006bb8:	f000 f872 	bl	8006ca0 <__gnu_Unwind_Save_VFP_D_16_to_31>
 8006bbc:	2d00      	cmp	r5, #0
 8006bbe:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 8006bc0:	dd28      	ble.n	8006c14 <_Unwind_VRS_Pop+0x264>
 8006bc2:	af20      	add	r7, sp, #128	; 0x80
 8006bc4:	e7b3      	b.n	8006b2e <_Unwind_VRS_Pop+0x17e>
 8006bc6:	f023 0310 	bic.w	r3, r3, #16
 8006bca:	6003      	str	r3, [r0, #0]
 8006bcc:	f500 70e8 	add.w	r0, r0, #464	; 0x1d0
 8006bd0:	f000 f8b8 	bl	8006d44 <__gnu_Unwind_Save_WMMXC>
 8006bd4:	e704      	b.n	80069e0 <_Unwind_VRS_Pop+0x30>
 8006bd6:	f023 0308 	bic.w	r3, r3, #8
 8006bda:	6003      	str	r3, [r0, #0]
 8006bdc:	f500 70a8 	add.w	r0, r0, #336	; 0x150
 8006be0:	f000 f884 	bl	8006cec <__gnu_Unwind_Save_WMMXD>
 8006be4:	e72a      	b.n	8006a3c <_Unwind_VRS_Pop+0x8c>
 8006be6:	af20      	add	r7, sp, #128	; 0x80
 8006be8:	3204      	adds	r2, #4
 8006bea:	63b2      	str	r2, [r6, #56]	; 0x38
 8006bec:	4638      	mov	r0, r7
 8006bee:	f000 f843 	bl	8006c78 <__gnu_Unwind_Restore_VFP>
 8006bf2:	e75f      	b.n	8006ab4 <_Unwind_VRS_Pop+0x104>
 8006bf4:	2c01      	cmp	r4, #1
 8006bf6:	d0f7      	beq.n	8006be8 <_Unwind_VRS_Pop+0x238>
 8006bf8:	f1b8 0f0f 	cmp.w	r8, #15
 8006bfc:	63b2      	str	r2, [r6, #56]	; 0x38
 8006bfe:	f63f af59 	bhi.w	8006ab4 <_Unwind_VRS_Pop+0x104>
 8006c02:	4638      	mov	r0, r7
 8006c04:	f000 f840 	bl	8006c88 <__gnu_Unwind_Restore_VFP_D>
 8006c08:	f1b9 0f00 	cmp.w	r9, #0
 8006c0c:	f43f af52 	beq.w	8006ab4 <_Unwind_VRS_Pop+0x104>
 8006c10:	466f      	mov	r7, sp
 8006c12:	e7b0      	b.n	8006b76 <_Unwind_VRS_Pop+0x1c6>
 8006c14:	4613      	mov	r3, r2
 8006c16:	e799      	b.n	8006b4c <_Unwind_VRS_Pop+0x19c>
 8006c18:	4630      	mov	r0, r6
 8006c1a:	f022 0204 	bic.w	r2, r2, #4
 8006c1e:	f840 2bd0 	str.w	r2, [r0], #208
 8006c22:	f000 f83d 	bl	8006ca0 <__gnu_Unwind_Save_VFP_D_16_to_31>
 8006c26:	e7bd      	b.n	8006ba4 <_Unwind_VRS_Pop+0x1f4>
 8006c28:	af20      	add	r7, sp, #128	; 0x80
 8006c2a:	e7ea      	b.n	8006c02 <_Unwind_VRS_Pop+0x252>
 8006c2c:	6833      	ldr	r3, [r6, #0]
 8006c2e:	07d9      	lsls	r1, r3, #31
 8006c30:	d508      	bpl.n	8006c44 <_Unwind_VRS_Pop+0x294>
 8006c32:	f023 0301 	bic.w	r3, r3, #1
 8006c36:	4630      	mov	r0, r6
 8006c38:	f043 0302 	orr.w	r3, r3, #2
 8006c3c:	f840 3b48 	str.w	r3, [r0], #72
 8006c40:	f000 f826 	bl	8006c90 <__gnu_Unwind_Save_VFP_D>
 8006c44:	af20      	add	r7, sp, #128	; 0x80
 8006c46:	4638      	mov	r0, r7
 8006c48:	464d      	mov	r5, r9
 8006c4a:	f000 f821 	bl	8006c90 <__gnu_Unwind_Save_VFP_D>
 8006c4e:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 8006c50:	2d00      	cmp	r5, #0
 8006c52:	f47f af6a 	bne.w	8006b2a <_Unwind_VRS_Pop+0x17a>
 8006c56:	4638      	mov	r0, r7
 8006c58:	f000 f816 	bl	8006c88 <__gnu_Unwind_Restore_VFP_D>
 8006c5c:	e72a      	b.n	8006ab4 <_Unwind_VRS_Pop+0x104>
 8006c5e:	bf00      	nop

08006c60 <__restore_core_regs>:
 8006c60:	f100 0134 	add.w	r1, r0, #52	; 0x34
 8006c64:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
 8006c68:	469c      	mov	ip, r3
 8006c6a:	46a6      	mov	lr, r4
 8006c6c:	f84c 5d04 	str.w	r5, [ip, #-4]!
 8006c70:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 8006c74:	46e5      	mov	sp, ip
 8006c76:	bd00      	pop	{pc}

08006c78 <__gnu_Unwind_Restore_VFP>:
 8006c78:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
 8006c7c:	4770      	bx	lr
 8006c7e:	bf00      	nop

08006c80 <__gnu_Unwind_Save_VFP>:
 8006c80:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
 8006c84:	4770      	bx	lr
 8006c86:	bf00      	nop

08006c88 <__gnu_Unwind_Restore_VFP_D>:
 8006c88:	ec90 0b20 	vldmia	r0, {d0-d15}
 8006c8c:	4770      	bx	lr
 8006c8e:	bf00      	nop

08006c90 <__gnu_Unwind_Save_VFP_D>:
 8006c90:	ec80 0b20 	vstmia	r0, {d0-d15}
 8006c94:	4770      	bx	lr
 8006c96:	bf00      	nop

08006c98 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
 8006c98:	ecd0 0b20 	vldmia	r0, {d16-d31}
 8006c9c:	4770      	bx	lr
 8006c9e:	bf00      	nop

08006ca0 <__gnu_Unwind_Save_VFP_D_16_to_31>:
 8006ca0:	ecc0 0b20 	vstmia	r0, {d16-d31}
 8006ca4:	4770      	bx	lr
 8006ca6:	bf00      	nop

08006ca8 <__gnu_Unwind_Restore_WMMXD>:
 8006ca8:	ecf0 0102 	ldfe	f0, [r0], #8
 8006cac:	ecf0 1102 	ldfe	f1, [r0], #8
 8006cb0:	ecf0 2102 	ldfe	f2, [r0], #8
 8006cb4:	ecf0 3102 	ldfe	f3, [r0], #8
 8006cb8:	ecf0 4102 	ldfe	f4, [r0], #8
 8006cbc:	ecf0 5102 	ldfe	f5, [r0], #8
 8006cc0:	ecf0 6102 	ldfe	f6, [r0], #8
 8006cc4:	ecf0 7102 	ldfe	f7, [r0], #8
 8006cc8:	ecf0 8102 	ldfp	f0, [r0], #8
 8006ccc:	ecf0 9102 	ldfp	f1, [r0], #8
 8006cd0:	ecf0 a102 	ldfp	f2, [r0], #8
 8006cd4:	ecf0 b102 	ldfp	f3, [r0], #8
 8006cd8:	ecf0 c102 	ldfp	f4, [r0], #8
 8006cdc:	ecf0 d102 	ldfp	f5, [r0], #8
 8006ce0:	ecf0 e102 	ldfp	f6, [r0], #8
 8006ce4:	ecf0 f102 	ldfp	f7, [r0], #8
 8006ce8:	4770      	bx	lr
 8006cea:	bf00      	nop

08006cec <__gnu_Unwind_Save_WMMXD>:
 8006cec:	ece0 0102 	stfe	f0, [r0], #8
 8006cf0:	ece0 1102 	stfe	f1, [r0], #8
 8006cf4:	ece0 2102 	stfe	f2, [r0], #8
 8006cf8:	ece0 3102 	stfe	f3, [r0], #8
 8006cfc:	ece0 4102 	stfe	f4, [r0], #8
 8006d00:	ece0 5102 	stfe	f5, [r0], #8
 8006d04:	ece0 6102 	stfe	f6, [r0], #8
 8006d08:	ece0 7102 	stfe	f7, [r0], #8
 8006d0c:	ece0 8102 	stfp	f0, [r0], #8
 8006d10:	ece0 9102 	stfp	f1, [r0], #8
 8006d14:	ece0 a102 	stfp	f2, [r0], #8
 8006d18:	ece0 b102 	stfp	f3, [r0], #8
 8006d1c:	ece0 c102 	stfp	f4, [r0], #8
 8006d20:	ece0 d102 	stfp	f5, [r0], #8
 8006d24:	ece0 e102 	stfp	f6, [r0], #8
 8006d28:	ece0 f102 	stfp	f7, [r0], #8
 8006d2c:	4770      	bx	lr
 8006d2e:	bf00      	nop

08006d30 <__gnu_Unwind_Restore_WMMXC>:
 8006d30:	fcb0 8101 	ldc2	1, cr8, [r0], #4
 8006d34:	fcb0 9101 	ldc2	1, cr9, [r0], #4
 8006d38:	fcb0 a101 	ldc2	1, cr10, [r0], #4
 8006d3c:	fcb0 b101 	ldc2	1, cr11, [r0], #4
 8006d40:	4770      	bx	lr
 8006d42:	bf00      	nop

08006d44 <__gnu_Unwind_Save_WMMXC>:
 8006d44:	fca0 8101 	stc2	1, cr8, [r0], #4
 8006d48:	fca0 9101 	stc2	1, cr9, [r0], #4
 8006d4c:	fca0 a101 	stc2	1, cr10, [r0], #4
 8006d50:	fca0 b101 	stc2	1, cr11, [r0], #4
 8006d54:	4770      	bx	lr
 8006d56:	bf00      	nop

08006d58 <_Unwind_RaiseException>:
 8006d58:	46ec      	mov	ip, sp
 8006d5a:	b500      	push	{lr}
 8006d5c:	e92d 5000 	stmdb	sp!, {ip, lr}
 8006d60:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8006d64:	f04f 0300 	mov.w	r3, #0
 8006d68:	e92d 000c 	stmdb	sp!, {r2, r3}
 8006d6c:	a901      	add	r1, sp, #4
 8006d6e:	f7ff fbcb 	bl	8006508 <__gnu_Unwind_RaiseException>
 8006d72:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8006d76:	b012      	add	sp, #72	; 0x48
 8006d78:	4770      	bx	lr
 8006d7a:	bf00      	nop

08006d7c <_Unwind_Resume>:
 8006d7c:	46ec      	mov	ip, sp
 8006d7e:	b500      	push	{lr}
 8006d80:	e92d 5000 	stmdb	sp!, {ip, lr}
 8006d84:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8006d88:	f04f 0300 	mov.w	r3, #0
 8006d8c:	e92d 000c 	stmdb	sp!, {r2, r3}
 8006d90:	a901      	add	r1, sp, #4
 8006d92:	f7ff fbf5 	bl	8006580 <__gnu_Unwind_Resume>
 8006d96:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8006d9a:	b012      	add	sp, #72	; 0x48
 8006d9c:	4770      	bx	lr
 8006d9e:	bf00      	nop

08006da0 <_Unwind_Resume_or_Rethrow>:
 8006da0:	46ec      	mov	ip, sp
 8006da2:	b500      	push	{lr}
 8006da4:	e92d 5000 	stmdb	sp!, {ip, lr}
 8006da8:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8006dac:	f04f 0300 	mov.w	r3, #0
 8006db0:	e92d 000c 	stmdb	sp!, {r2, r3}
 8006db4:	a901      	add	r1, sp, #4
 8006db6:	f7ff fc05 	bl	80065c4 <__gnu_Unwind_Resume_or_Rethrow>
 8006dba:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8006dbe:	b012      	add	sp, #72	; 0x48
 8006dc0:	4770      	bx	lr
 8006dc2:	bf00      	nop

08006dc4 <_Unwind_ForcedUnwind>:
 8006dc4:	46ec      	mov	ip, sp
 8006dc6:	b500      	push	{lr}
 8006dc8:	e92d 5000 	stmdb	sp!, {ip, lr}
 8006dcc:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8006dd0:	f04f 0300 	mov.w	r3, #0
 8006dd4:	e92d 000c 	stmdb	sp!, {r2, r3}
 8006dd8:	ab01      	add	r3, sp, #4
 8006dda:	f7ff fbc9 	bl	8006570 <__gnu_Unwind_ForcedUnwind>
 8006dde:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8006de2:	b012      	add	sp, #72	; 0x48
 8006de4:	4770      	bx	lr
 8006de6:	bf00      	nop

08006de8 <_Unwind_Backtrace>:
 8006de8:	46ec      	mov	ip, sp
 8006dea:	b500      	push	{lr}
 8006dec:	e92d 5000 	stmdb	sp!, {ip, lr}
 8006df0:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8006df4:	f04f 0300 	mov.w	r3, #0
 8006df8:	e92d 000c 	stmdb	sp!, {r2, r3}
 8006dfc:	aa01      	add	r2, sp, #4
 8006dfe:	f7ff fc3b 	bl	8006678 <__gnu_Unwind_Backtrace>
 8006e02:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8006e06:	b012      	add	sp, #72	; 0x48
 8006e08:	4770      	bx	lr
 8006e0a:	bf00      	nop

08006e0c <next_unwind_byte>:
 8006e0c:	7a02      	ldrb	r2, [r0, #8]
 8006e0e:	4603      	mov	r3, r0
 8006e10:	b97a      	cbnz	r2, 8006e32 <next_unwind_byte+0x26>
 8006e12:	7a42      	ldrb	r2, [r0, #9]
 8006e14:	b1a2      	cbz	r2, 8006e40 <next_unwind_byte+0x34>
 8006e16:	6841      	ldr	r1, [r0, #4]
 8006e18:	3a01      	subs	r2, #1
 8006e1a:	b410      	push	{r4}
 8006e1c:	7242      	strb	r2, [r0, #9]
 8006e1e:	6808      	ldr	r0, [r1, #0]
 8006e20:	2203      	movs	r2, #3
 8006e22:	1d0c      	adds	r4, r1, #4
 8006e24:	721a      	strb	r2, [r3, #8]
 8006e26:	0202      	lsls	r2, r0, #8
 8006e28:	605c      	str	r4, [r3, #4]
 8006e2a:	0e00      	lsrs	r0, r0, #24
 8006e2c:	bc10      	pop	{r4}
 8006e2e:	601a      	str	r2, [r3, #0]
 8006e30:	4770      	bx	lr
 8006e32:	6800      	ldr	r0, [r0, #0]
 8006e34:	3a01      	subs	r2, #1
 8006e36:	721a      	strb	r2, [r3, #8]
 8006e38:	0202      	lsls	r2, r0, #8
 8006e3a:	601a      	str	r2, [r3, #0]
 8006e3c:	0e00      	lsrs	r0, r0, #24
 8006e3e:	4770      	bx	lr
 8006e40:	20b0      	movs	r0, #176	; 0xb0
 8006e42:	4770      	bx	lr

08006e44 <_Unwind_GetGR.constprop.0>:
 8006e44:	b500      	push	{lr}
 8006e46:	b085      	sub	sp, #20
 8006e48:	2300      	movs	r3, #0
 8006e4a:	aa03      	add	r2, sp, #12
 8006e4c:	9200      	str	r2, [sp, #0]
 8006e4e:	4619      	mov	r1, r3
 8006e50:	220c      	movs	r2, #12
 8006e52:	f7ff fbc7 	bl	80065e4 <_Unwind_VRS_Get>
 8006e56:	9803      	ldr	r0, [sp, #12]
 8006e58:	b005      	add	sp, #20
 8006e5a:	f85d fb04 	ldr.w	pc, [sp], #4
 8006e5e:	bf00      	nop

08006e60 <unwind_UCB_from_context>:
 8006e60:	e7f0      	b.n	8006e44 <_Unwind_GetGR.constprop.0>
 8006e62:	bf00      	nop

08006e64 <__gnu_unwind_execute>:
 8006e64:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006e68:	b085      	sub	sp, #20
 8006e6a:	4607      	mov	r7, r0
 8006e6c:	460e      	mov	r6, r1
 8006e6e:	f04f 0800 	mov.w	r8, #0
 8006e72:	ad03      	add	r5, sp, #12
 8006e74:	4630      	mov	r0, r6
 8006e76:	f7ff ffc9 	bl	8006e0c <next_unwind_byte>
 8006e7a:	28b0      	cmp	r0, #176	; 0xb0
 8006e7c:	4604      	mov	r4, r0
 8006e7e:	f000 80cb 	beq.w	8007018 <__gnu_unwind_execute+0x1b4>
 8006e82:	0603      	lsls	r3, r0, #24
 8006e84:	d540      	bpl.n	8006f08 <__gnu_unwind_execute+0xa4>
 8006e86:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
 8006e8a:	2b80      	cmp	r3, #128	; 0x80
 8006e8c:	d056      	beq.n	8006f3c <__gnu_unwind_execute+0xd8>
 8006e8e:	2bb0      	cmp	r3, #176	; 0xb0
 8006e90:	d07d      	beq.n	8006f8e <__gnu_unwind_execute+0x12a>
 8006e92:	d81c      	bhi.n	8006ece <__gnu_unwind_execute+0x6a>
 8006e94:	2b90      	cmp	r3, #144	; 0x90
 8006e96:	f000 8093 	beq.w	8006fc0 <__gnu_unwind_execute+0x15c>
 8006e9a:	2ba0      	cmp	r3, #160	; 0xa0
 8006e9c:	d113      	bne.n	8006ec6 <__gnu_unwind_execute+0x62>
 8006e9e:	43c3      	mvns	r3, r0
 8006ea0:	f003 0307 	and.w	r3, r3, #7
 8006ea4:	f44f 627f 	mov.w	r2, #4080	; 0xff0
 8006ea8:	411a      	asrs	r2, r3
 8006eaa:	0701      	lsls	r1, r0, #28
 8006eac:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
 8006eb0:	f04f 0300 	mov.w	r3, #0
 8006eb4:	bf48      	it	mi
 8006eb6:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
 8006eba:	4619      	mov	r1, r3
 8006ebc:	4638      	mov	r0, r7
 8006ebe:	f7ff fd77 	bl	80069b0 <_Unwind_VRS_Pop>
 8006ec2:	2800      	cmp	r0, #0
 8006ec4:	d0d6      	beq.n	8006e74 <__gnu_unwind_execute+0x10>
 8006ec6:	2009      	movs	r0, #9
 8006ec8:	b005      	add	sp, #20
 8006eca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006ece:	2bc0      	cmp	r3, #192	; 0xc0
 8006ed0:	d14b      	bne.n	8006f6a <__gnu_unwind_execute+0x106>
 8006ed2:	28c6      	cmp	r0, #198	; 0xc6
 8006ed4:	f000 8089 	beq.w	8006fea <__gnu_unwind_execute+0x186>
 8006ed8:	28c7      	cmp	r0, #199	; 0xc7
 8006eda:	f000 80a2 	beq.w	8007022 <__gnu_unwind_execute+0x1be>
 8006ede:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 8006ee2:	2bc0      	cmp	r3, #192	; 0xc0
 8006ee4:	f000 80bc 	beq.w	8007060 <__gnu_unwind_execute+0x1fc>
 8006ee8:	28c8      	cmp	r0, #200	; 0xc8
 8006eea:	f000 80bf 	beq.w	800706c <__gnu_unwind_execute+0x208>
 8006eee:	28c9      	cmp	r0, #201	; 0xc9
 8006ef0:	d1e9      	bne.n	8006ec6 <__gnu_unwind_execute+0x62>
 8006ef2:	4630      	mov	r0, r6
 8006ef4:	f7ff ff8a 	bl	8006e0c <next_unwind_byte>
 8006ef8:	0302      	lsls	r2, r0, #12
 8006efa:	f000 000f 	and.w	r0, r0, #15
 8006efe:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
 8006f02:	3001      	adds	r0, #1
 8006f04:	4302      	orrs	r2, r0
 8006f06:	e039      	b.n	8006f7c <__gnu_unwind_execute+0x118>
 8006f08:	0083      	lsls	r3, r0, #2
 8006f0a:	b2db      	uxtb	r3, r3
 8006f0c:	f103 0904 	add.w	r9, r3, #4
 8006f10:	2300      	movs	r3, #0
 8006f12:	4619      	mov	r1, r3
 8006f14:	9500      	str	r5, [sp, #0]
 8006f16:	220d      	movs	r2, #13
 8006f18:	4638      	mov	r0, r7
 8006f1a:	f7ff fb63 	bl	80065e4 <_Unwind_VRS_Get>
 8006f1e:	9b03      	ldr	r3, [sp, #12]
 8006f20:	0660      	lsls	r0, r4, #25
 8006f22:	bf4c      	ite	mi
 8006f24:	eba3 0309 	submi.w	r3, r3, r9
 8006f28:	444b      	addpl	r3, r9
 8006f2a:	9303      	str	r3, [sp, #12]
 8006f2c:	2300      	movs	r3, #0
 8006f2e:	9500      	str	r5, [sp, #0]
 8006f30:	220d      	movs	r2, #13
 8006f32:	4619      	mov	r1, r3
 8006f34:	4638      	mov	r0, r7
 8006f36:	f7ff fb7b 	bl	8006630 <_Unwind_VRS_Set>
 8006f3a:	e79b      	b.n	8006e74 <__gnu_unwind_execute+0x10>
 8006f3c:	0204      	lsls	r4, r0, #8
 8006f3e:	4630      	mov	r0, r6
 8006f40:	f7ff ff64 	bl	8006e0c <next_unwind_byte>
 8006f44:	4320      	orrs	r0, r4
 8006f46:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8006f4a:	d0bc      	beq.n	8006ec6 <__gnu_unwind_execute+0x62>
 8006f4c:	0104      	lsls	r4, r0, #4
 8006f4e:	2300      	movs	r3, #0
 8006f50:	b2a2      	uxth	r2, r4
 8006f52:	4619      	mov	r1, r3
 8006f54:	4638      	mov	r0, r7
 8006f56:	f7ff fd2b 	bl	80069b0 <_Unwind_VRS_Pop>
 8006f5a:	2800      	cmp	r0, #0
 8006f5c:	d1b3      	bne.n	8006ec6 <__gnu_unwind_execute+0x62>
 8006f5e:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8006f62:	bf18      	it	ne
 8006f64:	f04f 0801 	movne.w	r8, #1
 8006f68:	e784      	b.n	8006e74 <__gnu_unwind_execute+0x10>
 8006f6a:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 8006f6e:	2bd0      	cmp	r3, #208	; 0xd0
 8006f70:	d1a9      	bne.n	8006ec6 <__gnu_unwind_execute+0x62>
 8006f72:	f000 0207 	and.w	r2, r0, #7
 8006f76:	3201      	adds	r2, #1
 8006f78:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8006f7c:	2305      	movs	r3, #5
 8006f7e:	2101      	movs	r1, #1
 8006f80:	4638      	mov	r0, r7
 8006f82:	f7ff fd15 	bl	80069b0 <_Unwind_VRS_Pop>
 8006f86:	2800      	cmp	r0, #0
 8006f88:	f43f af74 	beq.w	8006e74 <__gnu_unwind_execute+0x10>
 8006f8c:	e79b      	b.n	8006ec6 <__gnu_unwind_execute+0x62>
 8006f8e:	28b1      	cmp	r0, #177	; 0xb1
 8006f90:	d037      	beq.n	8007002 <__gnu_unwind_execute+0x19e>
 8006f92:	28b2      	cmp	r0, #178	; 0xb2
 8006f94:	f000 8087 	beq.w	80070a6 <__gnu_unwind_execute+0x242>
 8006f98:	28b3      	cmp	r0, #179	; 0xb3
 8006f9a:	d056      	beq.n	800704a <__gnu_unwind_execute+0x1e6>
 8006f9c:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
 8006fa0:	2bb4      	cmp	r3, #180	; 0xb4
 8006fa2:	d090      	beq.n	8006ec6 <__gnu_unwind_execute+0x62>
 8006fa4:	f000 0207 	and.w	r2, r0, #7
 8006fa8:	3201      	adds	r2, #1
 8006faa:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8006fae:	2301      	movs	r3, #1
 8006fb0:	4619      	mov	r1, r3
 8006fb2:	4638      	mov	r0, r7
 8006fb4:	f7ff fcfc 	bl	80069b0 <_Unwind_VRS_Pop>
 8006fb8:	2800      	cmp	r0, #0
 8006fba:	f43f af5b 	beq.w	8006e74 <__gnu_unwind_execute+0x10>
 8006fbe:	e782      	b.n	8006ec6 <__gnu_unwind_execute+0x62>
 8006fc0:	f000 030d 	and.w	r3, r0, #13
 8006fc4:	2b0d      	cmp	r3, #13
 8006fc6:	f43f af7e 	beq.w	8006ec6 <__gnu_unwind_execute+0x62>
 8006fca:	2300      	movs	r3, #0
 8006fcc:	f000 020f 	and.w	r2, r0, #15
 8006fd0:	4619      	mov	r1, r3
 8006fd2:	9500      	str	r5, [sp, #0]
 8006fd4:	4638      	mov	r0, r7
 8006fd6:	f7ff fb05 	bl	80065e4 <_Unwind_VRS_Get>
 8006fda:	2300      	movs	r3, #0
 8006fdc:	9500      	str	r5, [sp, #0]
 8006fde:	220d      	movs	r2, #13
 8006fe0:	4619      	mov	r1, r3
 8006fe2:	4638      	mov	r0, r7
 8006fe4:	f7ff fb24 	bl	8006630 <_Unwind_VRS_Set>
 8006fe8:	e744      	b.n	8006e74 <__gnu_unwind_execute+0x10>
 8006fea:	4630      	mov	r0, r6
 8006fec:	f7ff ff0e 	bl	8006e0c <next_unwind_byte>
 8006ff0:	0302      	lsls	r2, r0, #12
 8006ff2:	f000 000f 	and.w	r0, r0, #15
 8006ff6:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
 8006ffa:	3001      	adds	r0, #1
 8006ffc:	4302      	orrs	r2, r0
 8006ffe:	2303      	movs	r3, #3
 8007000:	e7d6      	b.n	8006fb0 <__gnu_unwind_execute+0x14c>
 8007002:	4630      	mov	r0, r6
 8007004:	f7ff ff02 	bl	8006e0c <next_unwind_byte>
 8007008:	4602      	mov	r2, r0
 800700a:	2800      	cmp	r0, #0
 800700c:	f43f af5b 	beq.w	8006ec6 <__gnu_unwind_execute+0x62>
 8007010:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 8007014:	d0cc      	beq.n	8006fb0 <__gnu_unwind_execute+0x14c>
 8007016:	e756      	b.n	8006ec6 <__gnu_unwind_execute+0x62>
 8007018:	f1b8 0f00 	cmp.w	r8, #0
 800701c:	d032      	beq.n	8007084 <__gnu_unwind_execute+0x220>
 800701e:	2000      	movs	r0, #0
 8007020:	e752      	b.n	8006ec8 <__gnu_unwind_execute+0x64>
 8007022:	4630      	mov	r0, r6
 8007024:	f7ff fef2 	bl	8006e0c <next_unwind_byte>
 8007028:	4602      	mov	r2, r0
 800702a:	2800      	cmp	r0, #0
 800702c:	f43f af4b 	beq.w	8006ec6 <__gnu_unwind_execute+0x62>
 8007030:	f010 0ff0 	tst.w	r0, #240	; 0xf0
 8007034:	f47f af47 	bne.w	8006ec6 <__gnu_unwind_execute+0x62>
 8007038:	2300      	movs	r3, #0
 800703a:	2104      	movs	r1, #4
 800703c:	4638      	mov	r0, r7
 800703e:	f7ff fcb7 	bl	80069b0 <_Unwind_VRS_Pop>
 8007042:	2800      	cmp	r0, #0
 8007044:	f43f af16 	beq.w	8006e74 <__gnu_unwind_execute+0x10>
 8007048:	e73d      	b.n	8006ec6 <__gnu_unwind_execute+0x62>
 800704a:	4630      	mov	r0, r6
 800704c:	f7ff fede 	bl	8006e0c <next_unwind_byte>
 8007050:	0302      	lsls	r2, r0, #12
 8007052:	f000 000f 	and.w	r0, r0, #15
 8007056:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
 800705a:	3001      	adds	r0, #1
 800705c:	4302      	orrs	r2, r0
 800705e:	e7a6      	b.n	8006fae <__gnu_unwind_execute+0x14a>
 8007060:	f000 020f 	and.w	r2, r0, #15
 8007064:	3201      	adds	r2, #1
 8007066:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
 800706a:	e7c8      	b.n	8006ffe <__gnu_unwind_execute+0x19a>
 800706c:	4630      	mov	r0, r6
 800706e:	f7ff fecd 	bl	8006e0c <next_unwind_byte>
 8007072:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
 8007076:	f000 030f 	and.w	r3, r0, #15
 800707a:	3210      	adds	r2, #16
 800707c:	3301      	adds	r3, #1
 800707e:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
 8007082:	e77b      	b.n	8006f7c <__gnu_unwind_execute+0x118>
 8007084:	ac03      	add	r4, sp, #12
 8007086:	4643      	mov	r3, r8
 8007088:	220e      	movs	r2, #14
 800708a:	4641      	mov	r1, r8
 800708c:	9400      	str	r4, [sp, #0]
 800708e:	4638      	mov	r0, r7
 8007090:	f7ff faa8 	bl	80065e4 <_Unwind_VRS_Get>
 8007094:	9400      	str	r4, [sp, #0]
 8007096:	4643      	mov	r3, r8
 8007098:	220f      	movs	r2, #15
 800709a:	4641      	mov	r1, r8
 800709c:	4638      	mov	r0, r7
 800709e:	f7ff fac7 	bl	8006630 <_Unwind_VRS_Set>
 80070a2:	4640      	mov	r0, r8
 80070a4:	e710      	b.n	8006ec8 <__gnu_unwind_execute+0x64>
 80070a6:	2300      	movs	r3, #0
 80070a8:	220d      	movs	r2, #13
 80070aa:	4619      	mov	r1, r3
 80070ac:	9500      	str	r5, [sp, #0]
 80070ae:	4638      	mov	r0, r7
 80070b0:	f7ff fa98 	bl	80065e4 <_Unwind_VRS_Get>
 80070b4:	4630      	mov	r0, r6
 80070b6:	f7ff fea9 	bl	8006e0c <next_unwind_byte>
 80070ba:	0602      	lsls	r2, r0, #24
 80070bc:	9c03      	ldr	r4, [sp, #12]
 80070be:	f04f 0902 	mov.w	r9, #2
 80070c2:	d50c      	bpl.n	80070de <__gnu_unwind_execute+0x27a>
 80070c4:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80070c8:	fa00 f009 	lsl.w	r0, r0, r9
 80070cc:	4404      	add	r4, r0
 80070ce:	4630      	mov	r0, r6
 80070d0:	9403      	str	r4, [sp, #12]
 80070d2:	f7ff fe9b 	bl	8006e0c <next_unwind_byte>
 80070d6:	0603      	lsls	r3, r0, #24
 80070d8:	f109 0907 	add.w	r9, r9, #7
 80070dc:	d4f2      	bmi.n	80070c4 <__gnu_unwind_execute+0x260>
 80070de:	f000 037f 	and.w	r3, r0, #127	; 0x7f
 80070e2:	fa03 f309 	lsl.w	r3, r3, r9
 80070e6:	f504 7401 	add.w	r4, r4, #516	; 0x204
 80070ea:	4423      	add	r3, r4
 80070ec:	e71d      	b.n	8006f2a <__gnu_unwind_execute+0xc6>
 80070ee:	bf00      	nop

080070f0 <__gnu_unwind_frame>:
 80070f0:	b510      	push	{r4, lr}
 80070f2:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 80070f4:	6853      	ldr	r3, [r2, #4]
 80070f6:	b084      	sub	sp, #16
 80070f8:	f04f 0c03 	mov.w	ip, #3
 80070fc:	3208      	adds	r2, #8
 80070fe:	021c      	lsls	r4, r3, #8
 8007100:	4608      	mov	r0, r1
 8007102:	0e1b      	lsrs	r3, r3, #24
 8007104:	a901      	add	r1, sp, #4
 8007106:	9401      	str	r4, [sp, #4]
 8007108:	9202      	str	r2, [sp, #8]
 800710a:	f88d c00c 	strb.w	ip, [sp, #12]
 800710e:	f88d 300d 	strb.w	r3, [sp, #13]
 8007112:	f7ff fea7 	bl	8006e64 <__gnu_unwind_execute>
 8007116:	b004      	add	sp, #16
 8007118:	bd10      	pop	{r4, pc}
 800711a:	bf00      	nop

0800711c <_Unwind_GetRegionStart>:
 800711c:	b508      	push	{r3, lr}
 800711e:	f7ff fe9f 	bl	8006e60 <unwind_UCB_from_context>
 8007122:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8007124:	bd08      	pop	{r3, pc}
 8007126:	bf00      	nop

08007128 <_Unwind_GetLanguageSpecificData>:
 8007128:	b508      	push	{r3, lr}
 800712a:	f7ff fe99 	bl	8006e60 <unwind_UCB_from_context>
 800712e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8007130:	79c3      	ldrb	r3, [r0, #7]
 8007132:	3302      	adds	r3, #2
 8007134:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8007138:	bd08      	pop	{r3, pc}
 800713a:	bf00      	nop

0800713c <_ZN6Logger5printEPKc>:
private:
    static const uint16_t LOG_BUFFER_SIZE = 1024U;
    static LogPriority priority;
    static UART_HandleTypeDef *mHuart;
    static char mBuffer[LOG_BUFFER_SIZE];
    static void print(const char *pMessage)
 800713c:	b590      	push	{r4, r7, lr}
 800713e:	b083      	sub	sp, #12
 8007140:	af00      	add	r7, sp, #0
 8007142:	6078      	str	r0, [r7, #4]
    {
        HAL_UART_Transmit(mHuart, (uint8_t*) const_cast<char*>(pMessage),
 8007144:	4b08      	ldr	r3, [pc, #32]	; (8007168 <_ZN6Logger5printEPKc+0x2c>)
 8007146:	681c      	ldr	r4, [r3, #0]
                strlen(pMessage), 1000);
 8007148:	6878      	ldr	r0, [r7, #4]
 800714a:	f7ff f881 	bl	8006250 <strlen>
 800714e:	4603      	mov	r3, r0
        HAL_UART_Transmit(mHuart, (uint8_t*) const_cast<char*>(pMessage),
 8007150:	b29a      	uxth	r2, r3
 8007152:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8007156:	6879      	ldr	r1, [r7, #4]
 8007158:	4620      	mov	r0, r4
 800715a:	f002 fb17 	bl	800978c <HAL_UART_Transmit>
    }
 800715e:	bf00      	nop
 8007160:	370c      	adds	r7, #12
 8007162:	46bd      	mov	sp, r7
 8007164:	bd90      	pop	{r4, r7, pc}
 8007166:	bf00      	nop
 8007168:	20000000 	.word	0x20000000

0800716c <_Z13setReadPeriodh>:
/* USER CODE BEGIN PFP */

uint8_t gReadPeriod {10U};

void setReadPeriod(const uint8_t readPeriod)
{
 800716c:	b590      	push	{r4, r7, lr}
 800716e:	b083      	sub	sp, #12
 8007170:	af00      	add	r7, sp, #0
 8007172:	4603      	mov	r3, r0
 8007174:	71fb      	strb	r3, [r7, #7]
    if (readPeriod == 0 || readPeriod > 255U)
 8007176:	79fb      	ldrb	r3, [r7, #7]
 8007178:	2b00      	cmp	r3, #0
 800717a:	d10d      	bne.n	8007198 <_Z13setReadPeriodh+0x2c>
    {
        throw std::invalid_argument {"read period is invalid"};
 800717c:	2008      	movs	r0, #8
 800717e:	f003 f86f 	bl	800a260 <__cxa_allocate_exception>
 8007182:	4603      	mov	r3, r0
 8007184:	461c      	mov	r4, r3
 8007186:	490a      	ldr	r1, [pc, #40]	; (80071b0 <_Z13setReadPeriodh+0x44>)
 8007188:	4620      	mov	r0, r4
 800718a:	f004 f82d 	bl	800b1e8 <_ZNSt16invalid_argumentC1EPKc>
 800718e:	4a09      	ldr	r2, [pc, #36]	; (80071b4 <_Z13setReadPeriodh+0x48>)
 8007190:	4909      	ldr	r1, [pc, #36]	; (80071b8 <_Z13setReadPeriodh+0x4c>)
 8007192:	4620      	mov	r0, r4
 8007194:	f003 fd9c 	bl	800acd0 <__cxa_throw>
    }

    gReadPeriod = readPeriod;
 8007198:	4a08      	ldr	r2, [pc, #32]	; (80071bc <_Z13setReadPeriodh+0x50>)
 800719a:	79fb      	ldrb	r3, [r7, #7]
 800719c:	7013      	strb	r3, [r2, #0]
}
 800719e:	e004      	b.n	80071aa <_Z13setReadPeriodh+0x3e>
        throw std::invalid_argument {"read period is invalid"};
 80071a0:	4620      	mov	r0, r4
 80071a2:	f003 f875 	bl	800a290 <__cxa_free_exception>
 80071a6:	f003 f897 	bl	800a2d8 <__cxa_end_cleanup>
}
 80071aa:	370c      	adds	r7, #12
 80071ac:	46bd      	mov	sp, r7
 80071ae:	bd90      	pop	{r4, r7, pc}
 80071b0:	0800c820 	.word	0x0800c820
 80071b4:	0800b051 	.word	0x0800b051
 80071b8:	0800d338 	.word	0x0800d338
 80071bc:	20000004 	.word	0x20000004

080071c0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80071c0:	b580      	push	{r7, lr}
 80071c2:	b084      	sub	sp, #16
 80071c4:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80071c6:	f000 fb05 	bl	80077d4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80071ca:	f000 f855 	bl	8007278 <_Z18SystemClock_Configv>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80071ce:	f000 f8f5 	bl	80073bc <_ZL12MX_GPIO_Initv>
  MX_USART2_UART_Init();
 80071d2:	f000 f8bf 	bl	8007354 <_ZL19MX_USART2_UART_Initv>
  /* USER CODE BEGIN 2 */
  try {
      setReadPeriod(20);
 80071d6:	2014      	movs	r0, #20
 80071d8:	f7ff ffc8 	bl	800716c <_Z13setReadPeriodh>
      LOGI("%d", gReadPeriod);
 80071dc:	4b21      	ldr	r3, [pc, #132]	; (8007264 <main+0xa4>)
 80071de:	781b      	ldrb	r3, [r3, #0]
 80071e0:	9300      	str	r3, [sp, #0]
 80071e2:	4b21      	ldr	r3, [pc, #132]	; (8007268 <main+0xa8>)
 80071e4:	226a      	movs	r2, #106	; 0x6a
 80071e6:	4921      	ldr	r1, [pc, #132]	; (800726c <main+0xac>)
 80071e8:	4821      	ldr	r0, [pc, #132]	; (8007270 <main+0xb0>)
 80071ea:	f000 f905 	bl	80073f8 <_ZN6Logger5InforIJPKciS2_hEEEvS2_DpT_>
      setReadPeriod(0);
 80071ee:	2000      	movs	r0, #0
 80071f0:	f7ff ffbc 	bl	800716c <_Z13setReadPeriodh>
      LOGI("%d", gReadPeriod);
 80071f4:	4b1b      	ldr	r3, [pc, #108]	; (8007264 <main+0xa4>)
 80071f6:	781b      	ldrb	r3, [r3, #0]
 80071f8:	9300      	str	r3, [sp, #0]
 80071fa:	4b1b      	ldr	r3, [pc, #108]	; (8007268 <main+0xa8>)
 80071fc:	226c      	movs	r2, #108	; 0x6c
 80071fe:	491b      	ldr	r1, [pc, #108]	; (800726c <main+0xac>)
 8007200:	481b      	ldr	r0, [pc, #108]	; (8007270 <main+0xb0>)
 8007202:	f000 f8f9 	bl	80073f8 <_ZN6Logger5InforIJPKciS2_hEEEvS2_DpT_>
      setReadPeriod(100);
 8007206:	2064      	movs	r0, #100	; 0x64
 8007208:	f7ff ffb0 	bl	800716c <_Z13setReadPeriodh>
      LOGI("%d", gReadPeriod);
 800720c:	4b15      	ldr	r3, [pc, #84]	; (8007264 <main+0xa4>)
 800720e:	781b      	ldrb	r3, [r3, #0]
 8007210:	9300      	str	r3, [sp, #0]
 8007212:	4b15      	ldr	r3, [pc, #84]	; (8007268 <main+0xa8>)
 8007214:	226e      	movs	r2, #110	; 0x6e
 8007216:	4915      	ldr	r1, [pc, #84]	; (800726c <main+0xac>)
 8007218:	4815      	ldr	r0, [pc, #84]	; (8007270 <main+0xb0>)
 800721a:	f000 f8ed 	bl	80073f8 <_ZN6Logger5InforIJPKciS2_hEEEvS2_DpT_>
  }
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 800721e:	e7fe      	b.n	800721e <main+0x5e>
  } catch (const std::invalid_argument& e) {
 8007220:	4602      	mov	r2, r0
 8007222:	460b      	mov	r3, r1
 8007224:	2b01      	cmp	r3, #1
 8007226:	d001      	beq.n	800722c <main+0x6c>
 8007228:	f003 f856 	bl	800a2d8 <__cxa_end_cleanup>
 800722c:	4613      	mov	r3, r2
 800722e:	4618      	mov	r0, r3
 8007230:	f003 f91a 	bl	800a468 <__cxa_begin_catch>
 8007234:	4603      	mov	r3, r0
 8007236:	607b      	str	r3, [r7, #4]
      LOGE("Exception: %s", e.what());
 8007238:	687a      	ldr	r2, [r7, #4]
 800723a:	687b      	ldr	r3, [r7, #4]
 800723c:	681b      	ldr	r3, [r3, #0]
 800723e:	3308      	adds	r3, #8
 8007240:	681b      	ldr	r3, [r3, #0]
 8007242:	4610      	mov	r0, r2
 8007244:	4798      	blx	r3
 8007246:	4603      	mov	r3, r0
 8007248:	9300      	str	r3, [sp, #0]
 800724a:	4b07      	ldr	r3, [pc, #28]	; (8007268 <main+0xa8>)
 800724c:	2270      	movs	r2, #112	; 0x70
 800724e:	4907      	ldr	r1, [pc, #28]	; (800726c <main+0xac>)
 8007250:	4808      	ldr	r0, [pc, #32]	; (8007274 <main+0xb4>)
 8007252:	f000 f8ff 	bl	8007454 <_ZN6Logger5ErrorIJPKciS2_S2_EEEvS2_DpT_>
  }
 8007256:	f003 f945 	bl	800a4e4 <__cxa_end_catch>
 800725a:	e7e0      	b.n	800721e <main+0x5e>
 800725c:	f003 f942 	bl	800a4e4 <__cxa_end_catch>
 8007260:	f003 f83a 	bl	800a2d8 <__cxa_end_cleanup>
 8007264:	20000004 	.word	0x20000004
 8007268:	0800c838 	.word	0x0800c838
 800726c:	0800c840 	.word	0x0800c840
 8007270:	0800c84c 	.word	0x0800c84c
 8007274:	0800c85c 	.word	0x0800c85c

08007278 <_Z18SystemClock_Configv>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8007278:	b580      	push	{r7, lr}
 800727a:	b0a6      	sub	sp, #152	; 0x98
 800727c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800727e:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8007282:	2228      	movs	r2, #40	; 0x28
 8007284:	2100      	movs	r1, #0
 8007286:	4618      	mov	r0, r3
 8007288:	f004 fd5a 	bl	800bd40 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800728c:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8007290:	2200      	movs	r2, #0
 8007292:	601a      	str	r2, [r3, #0]
 8007294:	605a      	str	r2, [r3, #4]
 8007296:	609a      	str	r2, [r3, #8]
 8007298:	60da      	str	r2, [r3, #12]
 800729a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 800729c:	1d3b      	adds	r3, r7, #4
 800729e:	2258      	movs	r2, #88	; 0x58
 80072a0:	2100      	movs	r1, #0
 80072a2:	4618      	mov	r0, r3
 80072a4:	f004 fd4c 	bl	800bd40 <memset>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80072a8:	2302      	movs	r3, #2
 80072aa:	673b      	str	r3, [r7, #112]	; 0x70
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80072ac:	2301      	movs	r3, #1
 80072ae:	67fb      	str	r3, [r7, #124]	; 0x7c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80072b0:	2310      	movs	r3, #16
 80072b2:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80072b6:	2302      	movs	r3, #2
 80072b8:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80072bc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80072c0:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 80072c4:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 80072c8:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
  RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 80072cc:	2300      	movs	r3, #0
 80072ce:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80072d2:	f107 0370 	add.w	r3, r7, #112	; 0x70
 80072d6:	4618      	mov	r0, r3
 80072d8:	f000 fd52 	bl	8007d80 <HAL_RCC_OscConfig>
 80072dc:	4603      	mov	r3, r0
 80072de:	2b00      	cmp	r3, #0
 80072e0:	bf14      	ite	ne
 80072e2:	2301      	movne	r3, #1
 80072e4:	2300      	moveq	r3, #0
 80072e6:	b2db      	uxtb	r3, r3
 80072e8:	2b00      	cmp	r3, #0
 80072ea:	d001      	beq.n	80072f0 <_Z18SystemClock_Configv+0x78>
  {
    Error_Handler();
 80072ec:	f000 f87e 	bl	80073ec <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80072f0:	230f      	movs	r3, #15
 80072f2:	65fb      	str	r3, [r7, #92]	; 0x5c
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80072f4:	2302      	movs	r3, #2
 80072f6:	663b      	str	r3, [r7, #96]	; 0x60
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80072f8:	2300      	movs	r3, #0
 80072fa:	667b      	str	r3, [r7, #100]	; 0x64
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80072fc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8007300:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8007302:	2300      	movs	r3, #0
 8007304:	66fb      	str	r3, [r7, #108]	; 0x6c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8007306:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800730a:	2102      	movs	r1, #2
 800730c:	4618      	mov	r0, r3
 800730e:	f001 fd97 	bl	8008e40 <HAL_RCC_ClockConfig>
 8007312:	4603      	mov	r3, r0
 8007314:	2b00      	cmp	r3, #0
 8007316:	bf14      	ite	ne
 8007318:	2301      	movne	r3, #1
 800731a:	2300      	moveq	r3, #0
 800731c:	b2db      	uxtb	r3, r3
 800731e:	2b00      	cmp	r3, #0
 8007320:	d001      	beq.n	8007326 <_Z18SystemClock_Configv+0xae>
  {
    Error_Handler();
 8007322:	f000 f863 	bl	80073ec <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 8007326:	2302      	movs	r3, #2
 8007328:	607b      	str	r3, [r7, #4]
  PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 800732a:	2300      	movs	r3, #0
 800732c:	613b      	str	r3, [r7, #16]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800732e:	1d3b      	adds	r3, r7, #4
 8007330:	4618      	mov	r0, r3
 8007332:	f001 ffbd 	bl	80092b0 <HAL_RCCEx_PeriphCLKConfig>
 8007336:	4603      	mov	r3, r0
 8007338:	2b00      	cmp	r3, #0
 800733a:	bf14      	ite	ne
 800733c:	2301      	movne	r3, #1
 800733e:	2300      	moveq	r3, #0
 8007340:	b2db      	uxtb	r3, r3
 8007342:	2b00      	cmp	r3, #0
 8007344:	d001      	beq.n	800734a <_Z18SystemClock_Configv+0xd2>
  {
    Error_Handler();
 8007346:	f000 f851 	bl	80073ec <Error_Handler>
  }
}
 800734a:	bf00      	nop
 800734c:	3798      	adds	r7, #152	; 0x98
 800734e:	46bd      	mov	sp, r7
 8007350:	bd80      	pop	{r7, pc}
	...

08007354 <_ZL19MX_USART2_UART_Initv>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8007354:	b580      	push	{r7, lr}
 8007356:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8007358:	4b16      	ldr	r3, [pc, #88]	; (80073b4 <_ZL19MX_USART2_UART_Initv+0x60>)
 800735a:	4a17      	ldr	r2, [pc, #92]	; (80073b8 <_ZL19MX_USART2_UART_Initv+0x64>)
 800735c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 38400;
 800735e:	4b15      	ldr	r3, [pc, #84]	; (80073b4 <_ZL19MX_USART2_UART_Initv+0x60>)
 8007360:	f44f 4216 	mov.w	r2, #38400	; 0x9600
 8007364:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8007366:	4b13      	ldr	r3, [pc, #76]	; (80073b4 <_ZL19MX_USART2_UART_Initv+0x60>)
 8007368:	2200      	movs	r2, #0
 800736a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800736c:	4b11      	ldr	r3, [pc, #68]	; (80073b4 <_ZL19MX_USART2_UART_Initv+0x60>)
 800736e:	2200      	movs	r2, #0
 8007370:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8007372:	4b10      	ldr	r3, [pc, #64]	; (80073b4 <_ZL19MX_USART2_UART_Initv+0x60>)
 8007374:	2200      	movs	r2, #0
 8007376:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8007378:	4b0e      	ldr	r3, [pc, #56]	; (80073b4 <_ZL19MX_USART2_UART_Initv+0x60>)
 800737a:	220c      	movs	r2, #12
 800737c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800737e:	4b0d      	ldr	r3, [pc, #52]	; (80073b4 <_ZL19MX_USART2_UART_Initv+0x60>)
 8007380:	2200      	movs	r2, #0
 8007382:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8007384:	4b0b      	ldr	r3, [pc, #44]	; (80073b4 <_ZL19MX_USART2_UART_Initv+0x60>)
 8007386:	2200      	movs	r2, #0
 8007388:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 800738a:	4b0a      	ldr	r3, [pc, #40]	; (80073b4 <_ZL19MX_USART2_UART_Initv+0x60>)
 800738c:	2200      	movs	r2, #0
 800738e:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8007390:	4b08      	ldr	r3, [pc, #32]	; (80073b4 <_ZL19MX_USART2_UART_Initv+0x60>)
 8007392:	2200      	movs	r2, #0
 8007394:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8007396:	4807      	ldr	r0, [pc, #28]	; (80073b4 <_ZL19MX_USART2_UART_Initv+0x60>)
 8007398:	f002 f9aa 	bl	80096f0 <HAL_UART_Init>
 800739c:	4603      	mov	r3, r0
 800739e:	2b00      	cmp	r3, #0
 80073a0:	bf14      	ite	ne
 80073a2:	2301      	movne	r3, #1
 80073a4:	2300      	moveq	r3, #0
 80073a6:	b2db      	uxtb	r3, r3
 80073a8:	2b00      	cmp	r3, #0
 80073aa:	d001      	beq.n	80073b0 <_ZL19MX_USART2_UART_Initv+0x5c>
  {
    Error_Handler();
 80073ac:	f000 f81e 	bl	80073ec <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80073b0:	bf00      	nop
 80073b2:	bd80      	pop	{r7, pc}
 80073b4:	20000498 	.word	0x20000498
 80073b8:	40004400 	.word	0x40004400

080073bc <_ZL12MX_GPIO_Initv>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80073bc:	b480      	push	{r7}
 80073be:	b083      	sub	sp, #12
 80073c0:	af00      	add	r7, sp, #0
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80073c2:	4b09      	ldr	r3, [pc, #36]	; (80073e8 <_ZL12MX_GPIO_Initv+0x2c>)
 80073c4:	695b      	ldr	r3, [r3, #20]
 80073c6:	4a08      	ldr	r2, [pc, #32]	; (80073e8 <_ZL12MX_GPIO_Initv+0x2c>)
 80073c8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80073cc:	6153      	str	r3, [r2, #20]
 80073ce:	4b06      	ldr	r3, [pc, #24]	; (80073e8 <_ZL12MX_GPIO_Initv+0x2c>)
 80073d0:	695b      	ldr	r3, [r3, #20]
 80073d2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80073d6:	607b      	str	r3, [r7, #4]
 80073d8:	687b      	ldr	r3, [r7, #4]

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80073da:	bf00      	nop
 80073dc:	370c      	adds	r7, #12
 80073de:	46bd      	mov	sp, r7
 80073e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073e4:	4770      	bx	lr
 80073e6:	bf00      	nop
 80073e8:	40021000 	.word	0x40021000

080073ec <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80073ec:	b480      	push	{r7}
 80073ee:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80073f0:	b672      	cpsid	i
}
 80073f2:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80073f4:	e7fe      	b.n	80073f4 <Error_Handler+0x8>
	...

080073f8 <_ZN6Logger5InforIJPKciS2_hEEEvS2_DpT_>:
	static void Infor(const char *message, Args ... args)
 80073f8:	b580      	push	{r7, lr}
 80073fa:	b088      	sub	sp, #32
 80073fc:	af04      	add	r7, sp, #16
 80073fe:	60f8      	str	r0, [r7, #12]
 8007400:	60b9      	str	r1, [r7, #8]
 8007402:	607a      	str	r2, [r7, #4]
 8007404:	603b      	str	r3, [r7, #0]
		if (priority <= LogPriority::LOG_PRIORITY_INFO)
 8007406:	4b0f      	ldr	r3, [pc, #60]	; (8007444 <_ZN6Logger5InforIJPKciS2_hEEEvS2_DpT_+0x4c>)
 8007408:	681b      	ldr	r3, [r3, #0]
 800740a:	2b01      	cmp	r3, #1
 800740c:	dc15      	bgt.n	800743a <_ZN6Logger5InforIJPKciS2_hEEEvS2_DpT_+0x42>
			print("[INFO]\t");
 800740e:	480e      	ldr	r0, [pc, #56]	; (8007448 <_ZN6Logger5InforIJPKciS2_hEEEvS2_DpT_+0x50>)
 8007410:	f7ff fe94 	bl	800713c <_ZN6Logger5printEPKc>
			snprintf(mBuffer, LOG_BUFFER_SIZE, message, args...);
 8007414:	7e3b      	ldrb	r3, [r7, #24]
 8007416:	9302      	str	r3, [sp, #8]
 8007418:	683b      	ldr	r3, [r7, #0]
 800741a:	9301      	str	r3, [sp, #4]
 800741c:	687b      	ldr	r3, [r7, #4]
 800741e:	9300      	str	r3, [sp, #0]
 8007420:	68bb      	ldr	r3, [r7, #8]
 8007422:	68fa      	ldr	r2, [r7, #12]
 8007424:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8007428:	4808      	ldr	r0, [pc, #32]	; (800744c <_ZN6Logger5InforIJPKciS2_hEEEvS2_DpT_+0x54>)
 800742a:	f004 fb33 	bl	800ba94 <sniprintf>
			print(mBuffer);
 800742e:	4807      	ldr	r0, [pc, #28]	; (800744c <_ZN6Logger5InforIJPKciS2_hEEEvS2_DpT_+0x54>)
 8007430:	f7ff fe84 	bl	800713c <_ZN6Logger5printEPKc>
			print("\n");
 8007434:	4806      	ldr	r0, [pc, #24]	; (8007450 <_ZN6Logger5InforIJPKciS2_hEEEvS2_DpT_+0x58>)
 8007436:	f7ff fe81 	bl	800713c <_ZN6Logger5printEPKc>
	}
 800743a:	bf00      	nop
 800743c:	3710      	adds	r7, #16
 800743e:	46bd      	mov	sp, r7
 8007440:	bd80      	pop	{r7, pc}
 8007442:	bf00      	nop
 8007444:	20000094 	.word	0x20000094
 8007448:	0800c878 	.word	0x0800c878
 800744c:	20000098 	.word	0x20000098
 8007450:	0800c880 	.word	0x0800c880

08007454 <_ZN6Logger5ErrorIJPKciS2_S2_EEEvS2_DpT_>:
	static void Error(const char *message, Args ... args)
 8007454:	b580      	push	{r7, lr}
 8007456:	b088      	sub	sp, #32
 8007458:	af04      	add	r7, sp, #16
 800745a:	60f8      	str	r0, [r7, #12]
 800745c:	60b9      	str	r1, [r7, #8]
 800745e:	607a      	str	r2, [r7, #4]
 8007460:	603b      	str	r3, [r7, #0]
		if (priority <= LogPriority::LOG_PRIORITY_ERROR)
 8007462:	4b0f      	ldr	r3, [pc, #60]	; (80074a0 <_ZN6Logger5ErrorIJPKciS2_S2_EEEvS2_DpT_+0x4c>)
 8007464:	681b      	ldr	r3, [r3, #0]
 8007466:	2b03      	cmp	r3, #3
 8007468:	dc15      	bgt.n	8007496 <_ZN6Logger5ErrorIJPKciS2_S2_EEEvS2_DpT_+0x42>
			print("[ERROR]\t");
 800746a:	480e      	ldr	r0, [pc, #56]	; (80074a4 <_ZN6Logger5ErrorIJPKciS2_S2_EEEvS2_DpT_+0x50>)
 800746c:	f7ff fe66 	bl	800713c <_ZN6Logger5printEPKc>
			snprintf(mBuffer, LOG_BUFFER_SIZE, message, args...);
 8007470:	69bb      	ldr	r3, [r7, #24]
 8007472:	9302      	str	r3, [sp, #8]
 8007474:	683b      	ldr	r3, [r7, #0]
 8007476:	9301      	str	r3, [sp, #4]
 8007478:	687b      	ldr	r3, [r7, #4]
 800747a:	9300      	str	r3, [sp, #0]
 800747c:	68bb      	ldr	r3, [r7, #8]
 800747e:	68fa      	ldr	r2, [r7, #12]
 8007480:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8007484:	4808      	ldr	r0, [pc, #32]	; (80074a8 <_ZN6Logger5ErrorIJPKciS2_S2_EEEvS2_DpT_+0x54>)
 8007486:	f004 fb05 	bl	800ba94 <sniprintf>
			print(mBuffer);
 800748a:	4807      	ldr	r0, [pc, #28]	; (80074a8 <_ZN6Logger5ErrorIJPKciS2_S2_EEEvS2_DpT_+0x54>)
 800748c:	f7ff fe56 	bl	800713c <_ZN6Logger5printEPKc>
			print("\n");
 8007490:	4806      	ldr	r0, [pc, #24]	; (80074ac <_ZN6Logger5ErrorIJPKciS2_S2_EEEvS2_DpT_+0x58>)
 8007492:	f7ff fe53 	bl	800713c <_ZN6Logger5printEPKc>
	}
 8007496:	bf00      	nop
 8007498:	3710      	adds	r7, #16
 800749a:	46bd      	mov	sp, r7
 800749c:	bd80      	pop	{r7, pc}
 800749e:	bf00      	nop
 80074a0:	20000094 	.word	0x20000094
 80074a4:	0800c884 	.word	0x0800c884
 80074a8:	20000098 	.word	0x20000098
 80074ac:	0800c880 	.word	0x0800c880

080074b0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80074b0:	b480      	push	{r7}
 80074b2:	b083      	sub	sp, #12
 80074b4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80074b6:	4b0f      	ldr	r3, [pc, #60]	; (80074f4 <HAL_MspInit+0x44>)
 80074b8:	699b      	ldr	r3, [r3, #24]
 80074ba:	4a0e      	ldr	r2, [pc, #56]	; (80074f4 <HAL_MspInit+0x44>)
 80074bc:	f043 0301 	orr.w	r3, r3, #1
 80074c0:	6193      	str	r3, [r2, #24]
 80074c2:	4b0c      	ldr	r3, [pc, #48]	; (80074f4 <HAL_MspInit+0x44>)
 80074c4:	699b      	ldr	r3, [r3, #24]
 80074c6:	f003 0301 	and.w	r3, r3, #1
 80074ca:	607b      	str	r3, [r7, #4]
 80074cc:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80074ce:	4b09      	ldr	r3, [pc, #36]	; (80074f4 <HAL_MspInit+0x44>)
 80074d0:	69db      	ldr	r3, [r3, #28]
 80074d2:	4a08      	ldr	r2, [pc, #32]	; (80074f4 <HAL_MspInit+0x44>)
 80074d4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80074d8:	61d3      	str	r3, [r2, #28]
 80074da:	4b06      	ldr	r3, [pc, #24]	; (80074f4 <HAL_MspInit+0x44>)
 80074dc:	69db      	ldr	r3, [r3, #28]
 80074de:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80074e2:	603b      	str	r3, [r7, #0]
 80074e4:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80074e6:	bf00      	nop
 80074e8:	370c      	adds	r7, #12
 80074ea:	46bd      	mov	sp, r7
 80074ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074f0:	4770      	bx	lr
 80074f2:	bf00      	nop
 80074f4:	40021000 	.word	0x40021000

080074f8 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80074f8:	b580      	push	{r7, lr}
 80074fa:	b08a      	sub	sp, #40	; 0x28
 80074fc:	af00      	add	r7, sp, #0
 80074fe:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8007500:	f107 0314 	add.w	r3, r7, #20
 8007504:	2200      	movs	r2, #0
 8007506:	601a      	str	r2, [r3, #0]
 8007508:	605a      	str	r2, [r3, #4]
 800750a:	609a      	str	r2, [r3, #8]
 800750c:	60da      	str	r2, [r3, #12]
 800750e:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART2)
 8007510:	687b      	ldr	r3, [r7, #4]
 8007512:	681b      	ldr	r3, [r3, #0]
 8007514:	4a17      	ldr	r2, [pc, #92]	; (8007574 <HAL_UART_MspInit+0x7c>)
 8007516:	4293      	cmp	r3, r2
 8007518:	d128      	bne.n	800756c <HAL_UART_MspInit+0x74>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 800751a:	4b17      	ldr	r3, [pc, #92]	; (8007578 <HAL_UART_MspInit+0x80>)
 800751c:	69db      	ldr	r3, [r3, #28]
 800751e:	4a16      	ldr	r2, [pc, #88]	; (8007578 <HAL_UART_MspInit+0x80>)
 8007520:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007524:	61d3      	str	r3, [r2, #28]
 8007526:	4b14      	ldr	r3, [pc, #80]	; (8007578 <HAL_UART_MspInit+0x80>)
 8007528:	69db      	ldr	r3, [r3, #28]
 800752a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800752e:	613b      	str	r3, [r7, #16]
 8007530:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8007532:	4b11      	ldr	r3, [pc, #68]	; (8007578 <HAL_UART_MspInit+0x80>)
 8007534:	695b      	ldr	r3, [r3, #20]
 8007536:	4a10      	ldr	r2, [pc, #64]	; (8007578 <HAL_UART_MspInit+0x80>)
 8007538:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800753c:	6153      	str	r3, [r2, #20]
 800753e:	4b0e      	ldr	r3, [pc, #56]	; (8007578 <HAL_UART_MspInit+0x80>)
 8007540:	695b      	ldr	r3, [r3, #20]
 8007542:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007546:	60fb      	str	r3, [r7, #12]
 8007548:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 800754a:	230c      	movs	r3, #12
 800754c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800754e:	2302      	movs	r3, #2
 8007550:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8007552:	2300      	movs	r3, #0
 8007554:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8007556:	2303      	movs	r3, #3
 8007558:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 800755a:	2307      	movs	r3, #7
 800755c:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800755e:	f107 0314 	add.w	r3, r7, #20
 8007562:	4619      	mov	r1, r3
 8007564:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8007568:	f000 fa80 	bl	8007a6c <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 800756c:	bf00      	nop
 800756e:	3728      	adds	r7, #40	; 0x28
 8007570:	46bd      	mov	sp, r7
 8007572:	bd80      	pop	{r7, pc}
 8007574:	40004400 	.word	0x40004400
 8007578:	40021000 	.word	0x40021000

0800757c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800757c:	b480      	push	{r7}
 800757e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8007580:	e7fe      	b.n	8007580 <NMI_Handler+0x4>

08007582 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8007582:	b480      	push	{r7}
 8007584:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8007586:	e7fe      	b.n	8007586 <HardFault_Handler+0x4>

08007588 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8007588:	b480      	push	{r7}
 800758a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800758c:	e7fe      	b.n	800758c <MemManage_Handler+0x4>

0800758e <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800758e:	b480      	push	{r7}
 8007590:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8007592:	e7fe      	b.n	8007592 <BusFault_Handler+0x4>

08007594 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8007594:	b480      	push	{r7}
 8007596:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8007598:	e7fe      	b.n	8007598 <UsageFault_Handler+0x4>

0800759a <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800759a:	b480      	push	{r7}
 800759c:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800759e:	bf00      	nop
 80075a0:	46bd      	mov	sp, r7
 80075a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075a6:	4770      	bx	lr

080075a8 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80075a8:	b480      	push	{r7}
 80075aa:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80075ac:	bf00      	nop
 80075ae:	46bd      	mov	sp, r7
 80075b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075b4:	4770      	bx	lr

080075b6 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80075b6:	b480      	push	{r7}
 80075b8:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80075ba:	bf00      	nop
 80075bc:	46bd      	mov	sp, r7
 80075be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075c2:	4770      	bx	lr

080075c4 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80075c4:	b580      	push	{r7, lr}
 80075c6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80075c8:	f000 f94a 	bl	8007860 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80075cc:	bf00      	nop
 80075ce:	bd80      	pop	{r7, pc}

080075d0 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80075d0:	b480      	push	{r7}
 80075d2:	af00      	add	r7, sp, #0
  return 1;
 80075d4:	2301      	movs	r3, #1
}
 80075d6:	4618      	mov	r0, r3
 80075d8:	46bd      	mov	sp, r7
 80075da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075de:	4770      	bx	lr

080075e0 <_kill>:

int _kill(int pid, int sig)
{
 80075e0:	b580      	push	{r7, lr}
 80075e2:	b082      	sub	sp, #8
 80075e4:	af00      	add	r7, sp, #0
 80075e6:	6078      	str	r0, [r7, #4]
 80075e8:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80075ea:	f004 fc5d 	bl	800bea8 <__errno>
 80075ee:	4603      	mov	r3, r0
 80075f0:	2216      	movs	r2, #22
 80075f2:	601a      	str	r2, [r3, #0]
  return -1;
 80075f4:	f04f 33ff 	mov.w	r3, #4294967295
}
 80075f8:	4618      	mov	r0, r3
 80075fa:	3708      	adds	r7, #8
 80075fc:	46bd      	mov	sp, r7
 80075fe:	bd80      	pop	{r7, pc}

08007600 <_exit>:

void _exit (int status)
{
 8007600:	b580      	push	{r7, lr}
 8007602:	b082      	sub	sp, #8
 8007604:	af00      	add	r7, sp, #0
 8007606:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8007608:	f04f 31ff 	mov.w	r1, #4294967295
 800760c:	6878      	ldr	r0, [r7, #4]
 800760e:	f7ff ffe7 	bl	80075e0 <_kill>
  while (1) {}    /* Make sure we hang here */
 8007612:	e7fe      	b.n	8007612 <_exit+0x12>

08007614 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8007614:	b580      	push	{r7, lr}
 8007616:	b086      	sub	sp, #24
 8007618:	af00      	add	r7, sp, #0
 800761a:	60f8      	str	r0, [r7, #12]
 800761c:	60b9      	str	r1, [r7, #8]
 800761e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8007620:	2300      	movs	r3, #0
 8007622:	617b      	str	r3, [r7, #20]
 8007624:	e00a      	b.n	800763c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8007626:	f3af 8000 	nop.w
 800762a:	4601      	mov	r1, r0
 800762c:	68bb      	ldr	r3, [r7, #8]
 800762e:	1c5a      	adds	r2, r3, #1
 8007630:	60ba      	str	r2, [r7, #8]
 8007632:	b2ca      	uxtb	r2, r1
 8007634:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8007636:	697b      	ldr	r3, [r7, #20]
 8007638:	3301      	adds	r3, #1
 800763a:	617b      	str	r3, [r7, #20]
 800763c:	697a      	ldr	r2, [r7, #20]
 800763e:	687b      	ldr	r3, [r7, #4]
 8007640:	429a      	cmp	r2, r3
 8007642:	dbf0      	blt.n	8007626 <_read+0x12>
  }

  return len;
 8007644:	687b      	ldr	r3, [r7, #4]
}
 8007646:	4618      	mov	r0, r3
 8007648:	3718      	adds	r7, #24
 800764a:	46bd      	mov	sp, r7
 800764c:	bd80      	pop	{r7, pc}

0800764e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800764e:	b580      	push	{r7, lr}
 8007650:	b086      	sub	sp, #24
 8007652:	af00      	add	r7, sp, #0
 8007654:	60f8      	str	r0, [r7, #12]
 8007656:	60b9      	str	r1, [r7, #8]
 8007658:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800765a:	2300      	movs	r3, #0
 800765c:	617b      	str	r3, [r7, #20]
 800765e:	e009      	b.n	8007674 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8007660:	68bb      	ldr	r3, [r7, #8]
 8007662:	1c5a      	adds	r2, r3, #1
 8007664:	60ba      	str	r2, [r7, #8]
 8007666:	781b      	ldrb	r3, [r3, #0]
 8007668:	4618      	mov	r0, r3
 800766a:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800766e:	697b      	ldr	r3, [r7, #20]
 8007670:	3301      	adds	r3, #1
 8007672:	617b      	str	r3, [r7, #20]
 8007674:	697a      	ldr	r2, [r7, #20]
 8007676:	687b      	ldr	r3, [r7, #4]
 8007678:	429a      	cmp	r2, r3
 800767a:	dbf1      	blt.n	8007660 <_write+0x12>
  }
  return len;
 800767c:	687b      	ldr	r3, [r7, #4]
}
 800767e:	4618      	mov	r0, r3
 8007680:	3718      	adds	r7, #24
 8007682:	46bd      	mov	sp, r7
 8007684:	bd80      	pop	{r7, pc}

08007686 <_close>:

int _close(int file)
{
 8007686:	b480      	push	{r7}
 8007688:	b083      	sub	sp, #12
 800768a:	af00      	add	r7, sp, #0
 800768c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800768e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8007692:	4618      	mov	r0, r3
 8007694:	370c      	adds	r7, #12
 8007696:	46bd      	mov	sp, r7
 8007698:	f85d 7b04 	ldr.w	r7, [sp], #4
 800769c:	4770      	bx	lr

0800769e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800769e:	b480      	push	{r7}
 80076a0:	b083      	sub	sp, #12
 80076a2:	af00      	add	r7, sp, #0
 80076a4:	6078      	str	r0, [r7, #4]
 80076a6:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80076a8:	683b      	ldr	r3, [r7, #0]
 80076aa:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80076ae:	605a      	str	r2, [r3, #4]
  return 0;
 80076b0:	2300      	movs	r3, #0
}
 80076b2:	4618      	mov	r0, r3
 80076b4:	370c      	adds	r7, #12
 80076b6:	46bd      	mov	sp, r7
 80076b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076bc:	4770      	bx	lr

080076be <_isatty>:

int _isatty(int file)
{
 80076be:	b480      	push	{r7}
 80076c0:	b083      	sub	sp, #12
 80076c2:	af00      	add	r7, sp, #0
 80076c4:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80076c6:	2301      	movs	r3, #1
}
 80076c8:	4618      	mov	r0, r3
 80076ca:	370c      	adds	r7, #12
 80076cc:	46bd      	mov	sp, r7
 80076ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076d2:	4770      	bx	lr

080076d4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80076d4:	b480      	push	{r7}
 80076d6:	b085      	sub	sp, #20
 80076d8:	af00      	add	r7, sp, #0
 80076da:	60f8      	str	r0, [r7, #12]
 80076dc:	60b9      	str	r1, [r7, #8]
 80076de:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80076e0:	2300      	movs	r3, #0
}
 80076e2:	4618      	mov	r0, r3
 80076e4:	3714      	adds	r7, #20
 80076e6:	46bd      	mov	sp, r7
 80076e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076ec:	4770      	bx	lr
	...

080076f0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80076f0:	b580      	push	{r7, lr}
 80076f2:	b086      	sub	sp, #24
 80076f4:	af00      	add	r7, sp, #0
 80076f6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80076f8:	4a14      	ldr	r2, [pc, #80]	; (800774c <_sbrk+0x5c>)
 80076fa:	4b15      	ldr	r3, [pc, #84]	; (8007750 <_sbrk+0x60>)
 80076fc:	1ad3      	subs	r3, r2, r3
 80076fe:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8007700:	697b      	ldr	r3, [r7, #20]
 8007702:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8007704:	4b13      	ldr	r3, [pc, #76]	; (8007754 <_sbrk+0x64>)
 8007706:	681b      	ldr	r3, [r3, #0]
 8007708:	2b00      	cmp	r3, #0
 800770a:	d102      	bne.n	8007712 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800770c:	4b11      	ldr	r3, [pc, #68]	; (8007754 <_sbrk+0x64>)
 800770e:	4a12      	ldr	r2, [pc, #72]	; (8007758 <_sbrk+0x68>)
 8007710:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8007712:	4b10      	ldr	r3, [pc, #64]	; (8007754 <_sbrk+0x64>)
 8007714:	681a      	ldr	r2, [r3, #0]
 8007716:	687b      	ldr	r3, [r7, #4]
 8007718:	4413      	add	r3, r2
 800771a:	693a      	ldr	r2, [r7, #16]
 800771c:	429a      	cmp	r2, r3
 800771e:	d207      	bcs.n	8007730 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8007720:	f004 fbc2 	bl	800bea8 <__errno>
 8007724:	4603      	mov	r3, r0
 8007726:	220c      	movs	r2, #12
 8007728:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800772a:	f04f 33ff 	mov.w	r3, #4294967295
 800772e:	e009      	b.n	8007744 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8007730:	4b08      	ldr	r3, [pc, #32]	; (8007754 <_sbrk+0x64>)
 8007732:	681b      	ldr	r3, [r3, #0]
 8007734:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8007736:	4b07      	ldr	r3, [pc, #28]	; (8007754 <_sbrk+0x64>)
 8007738:	681a      	ldr	r2, [r3, #0]
 800773a:	687b      	ldr	r3, [r7, #4]
 800773c:	4413      	add	r3, r2
 800773e:	4a05      	ldr	r2, [pc, #20]	; (8007754 <_sbrk+0x64>)
 8007740:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8007742:	68fb      	ldr	r3, [r7, #12]
}
 8007744:	4618      	mov	r0, r3
 8007746:	3718      	adds	r7, #24
 8007748:	46bd      	mov	sp, r7
 800774a:	bd80      	pop	{r7, pc}
 800774c:	20010000 	.word	0x20010000
 8007750:	00000400 	.word	0x00000400
 8007754:	20000520 	.word	0x20000520
 8007758:	200006a8 	.word	0x200006a8

0800775c <SystemInit>:
  * @brief  Setup the microcontroller system
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800775c:	b480      	push	{r7}
 800775e:	af00      	add	r7, sp, #0
/* FPU settings --------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8007760:	4b06      	ldr	r3, [pc, #24]	; (800777c <SystemInit+0x20>)
 8007762:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8007766:	4a05      	ldr	r2, [pc, #20]	; (800777c <SystemInit+0x20>)
 8007768:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800776c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8007770:	bf00      	nop
 8007772:	46bd      	mov	sp, r7
 8007774:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007778:	4770      	bx	lr
 800777a:	bf00      	nop
 800777c:	e000ed00 	.word	0xe000ed00

08007780 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* Atollic update: set stack pointer */
 8007780:	f8df d034 	ldr.w	sp, [pc, #52]	; 80077b8 <LoopForever+0x2>
  
/* Call the clock system initialization function.*/
    bl  SystemInit
 8007784:	f7ff ffea 	bl	800775c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8007788:	480c      	ldr	r0, [pc, #48]	; (80077bc <LoopForever+0x6>)
  ldr r1, =_edata
 800778a:	490d      	ldr	r1, [pc, #52]	; (80077c0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800778c:	4a0d      	ldr	r2, [pc, #52]	; (80077c4 <LoopForever+0xe>)
  movs r3, #0
 800778e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8007790:	e002      	b.n	8007798 <LoopCopyDataInit>

08007792 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8007792:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8007794:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8007796:	3304      	adds	r3, #4

08007798 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8007798:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800779a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800779c:	d3f9      	bcc.n	8007792 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800779e:	4a0a      	ldr	r2, [pc, #40]	; (80077c8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80077a0:	4c0a      	ldr	r4, [pc, #40]	; (80077cc <LoopForever+0x16>)
  movs r3, #0
 80077a2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80077a4:	e001      	b.n	80077aa <LoopFillZerobss>

080077a6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80077a6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80077a8:	3204      	adds	r2, #4

080077aa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80077aa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80077ac:	d3fb      	bcc.n	80077a6 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 80077ae:	f004 fb81 	bl	800beb4 <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 80077b2:	f7ff fd05 	bl	80071c0 <main>

080077b6 <LoopForever>:

LoopForever:
    b LoopForever
 80077b6:	e7fe      	b.n	80077b6 <LoopForever>
  ldr   sp, =_estack    /* Atollic update: set stack pointer */
 80077b8:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 80077bc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80077c0:	20000078 	.word	0x20000078
  ldr r2, =_sidata
 80077c4:	0800e254 	.word	0x0800e254
  ldr r2, =_sbss
 80077c8:	20000078 	.word	0x20000078
  ldr r4, =_ebss
 80077cc:	200006a8 	.word	0x200006a8

080077d0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 80077d0:	e7fe      	b.n	80077d0 <ADC1_2_IRQHandler>
	...

080077d4 <HAL_Init>:
  *         In the default implementation,Systick is used as source of time base.
  *       The tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80077d4:	b580      	push	{r7, lr}
 80077d6:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch */
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80077d8:	4b08      	ldr	r3, [pc, #32]	; (80077fc <HAL_Init+0x28>)
 80077da:	681b      	ldr	r3, [r3, #0]
 80077dc:	4a07      	ldr	r2, [pc, #28]	; (80077fc <HAL_Init+0x28>)
 80077de:	f043 0310 	orr.w	r3, r3, #16
 80077e2:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80077e4:	2003      	movs	r0, #3
 80077e6:	f000 f90d 	bl	8007a04 <HAL_NVIC_SetPriorityGrouping>

  /* Enable systick and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80077ea:	200f      	movs	r0, #15
 80077ec:	f000 f808 	bl	8007800 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80077f0:	f7ff fe5e 	bl	80074b0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80077f4:	2300      	movs	r3, #0
}
 80077f6:	4618      	mov	r0, r3
 80077f8:	bd80      	pop	{r7, pc}
 80077fa:	bf00      	nop
 80077fc:	40022000 	.word	0x40022000

08007800 <HAL_InitTick>:
  *         implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8007800:	b580      	push	{r7, lr}
 8007802:	b082      	sub	sp, #8
 8007804:	af00      	add	r7, sp, #0
 8007806:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8007808:	4b12      	ldr	r3, [pc, #72]	; (8007854 <HAL_InitTick+0x54>)
 800780a:	681a      	ldr	r2, [r3, #0]
 800780c:	4b12      	ldr	r3, [pc, #72]	; (8007858 <HAL_InitTick+0x58>)
 800780e:	781b      	ldrb	r3, [r3, #0]
 8007810:	4619      	mov	r1, r3
 8007812:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8007816:	fbb3 f3f1 	udiv	r3, r3, r1
 800781a:	fbb2 f3f3 	udiv	r3, r2, r3
 800781e:	4618      	mov	r0, r3
 8007820:	f000 f918 	bl	8007a54 <HAL_SYSTICK_Config>
 8007824:	4603      	mov	r3, r0
 8007826:	2b00      	cmp	r3, #0
 8007828:	d001      	beq.n	800782e <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 800782a:	2301      	movs	r3, #1
 800782c:	e00e      	b.n	800784c <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800782e:	687b      	ldr	r3, [r7, #4]
 8007830:	2b0f      	cmp	r3, #15
 8007832:	d80a      	bhi.n	800784a <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8007834:	2200      	movs	r2, #0
 8007836:	6879      	ldr	r1, [r7, #4]
 8007838:	f04f 30ff 	mov.w	r0, #4294967295
 800783c:	f000 f8ed 	bl	8007a1a <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8007840:	4a06      	ldr	r2, [pc, #24]	; (800785c <HAL_InitTick+0x5c>)
 8007842:	687b      	ldr	r3, [r7, #4]
 8007844:	6013      	str	r3, [r2, #0]
  else
  {
    return HAL_ERROR;
  }
   /* Return function status */
  return HAL_OK;
 8007846:	2300      	movs	r3, #0
 8007848:	e000      	b.n	800784c <HAL_InitTick+0x4c>
    return HAL_ERROR;
 800784a:	2301      	movs	r3, #1
}
 800784c:	4618      	mov	r0, r3
 800784e:	3708      	adds	r7, #8
 8007850:	46bd      	mov	sp, r7
 8007852:	bd80      	pop	{r7, pc}
 8007854:	20000008 	.word	0x20000008
 8007858:	20000010 	.word	0x20000010
 800785c:	2000000c 	.word	0x2000000c

08007860 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *         implementations  in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8007860:	b480      	push	{r7}
 8007862:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8007864:	4b06      	ldr	r3, [pc, #24]	; (8007880 <HAL_IncTick+0x20>)
 8007866:	781b      	ldrb	r3, [r3, #0]
 8007868:	461a      	mov	r2, r3
 800786a:	4b06      	ldr	r3, [pc, #24]	; (8007884 <HAL_IncTick+0x24>)
 800786c:	681b      	ldr	r3, [r3, #0]
 800786e:	4413      	add	r3, r2
 8007870:	4a04      	ldr	r2, [pc, #16]	; (8007884 <HAL_IncTick+0x24>)
 8007872:	6013      	str	r3, [r2, #0]
}
 8007874:	bf00      	nop
 8007876:	46bd      	mov	sp, r7
 8007878:	f85d 7b04 	ldr.w	r7, [sp], #4
 800787c:	4770      	bx	lr
 800787e:	bf00      	nop
 8007880:	20000010 	.word	0x20000010
 8007884:	20000524 	.word	0x20000524

08007888 <HAL_GetTick>:
  * @note   The function is declared as __Weak  to be overwritten  in case of other 
  *         implementations  in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8007888:	b480      	push	{r7}
 800788a:	af00      	add	r7, sp, #0
  return uwTick;  
 800788c:	4b03      	ldr	r3, [pc, #12]	; (800789c <HAL_GetTick+0x14>)
 800788e:	681b      	ldr	r3, [r3, #0]
}
 8007890:	4618      	mov	r0, r3
 8007892:	46bd      	mov	sp, r7
 8007894:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007898:	4770      	bx	lr
 800789a:	bf00      	nop
 800789c:	20000524 	.word	0x20000524

080078a0 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80078a0:	b480      	push	{r7}
 80078a2:	b085      	sub	sp, #20
 80078a4:	af00      	add	r7, sp, #0
 80078a6:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80078a8:	687b      	ldr	r3, [r7, #4]
 80078aa:	f003 0307 	and.w	r3, r3, #7
 80078ae:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80078b0:	4b0c      	ldr	r3, [pc, #48]	; (80078e4 <__NVIC_SetPriorityGrouping+0x44>)
 80078b2:	68db      	ldr	r3, [r3, #12]
 80078b4:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80078b6:	68ba      	ldr	r2, [r7, #8]
 80078b8:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80078bc:	4013      	ands	r3, r2
 80078be:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80078c0:	68fb      	ldr	r3, [r7, #12]
 80078c2:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80078c4:	68bb      	ldr	r3, [r7, #8]
 80078c6:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80078c8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80078cc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80078d0:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80078d2:	4a04      	ldr	r2, [pc, #16]	; (80078e4 <__NVIC_SetPriorityGrouping+0x44>)
 80078d4:	68bb      	ldr	r3, [r7, #8]
 80078d6:	60d3      	str	r3, [r2, #12]
}
 80078d8:	bf00      	nop
 80078da:	3714      	adds	r7, #20
 80078dc:	46bd      	mov	sp, r7
 80078de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078e2:	4770      	bx	lr
 80078e4:	e000ed00 	.word	0xe000ed00

080078e8 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 80078e8:	b480      	push	{r7}
 80078ea:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80078ec:	4b04      	ldr	r3, [pc, #16]	; (8007900 <__NVIC_GetPriorityGrouping+0x18>)
 80078ee:	68db      	ldr	r3, [r3, #12]
 80078f0:	0a1b      	lsrs	r3, r3, #8
 80078f2:	f003 0307 	and.w	r3, r3, #7
}
 80078f6:	4618      	mov	r0, r3
 80078f8:	46bd      	mov	sp, r7
 80078fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078fe:	4770      	bx	lr
 8007900:	e000ed00 	.word	0xe000ed00

08007904 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8007904:	b480      	push	{r7}
 8007906:	b083      	sub	sp, #12
 8007908:	af00      	add	r7, sp, #0
 800790a:	4603      	mov	r3, r0
 800790c:	6039      	str	r1, [r7, #0]
 800790e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8007910:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007914:	2b00      	cmp	r3, #0
 8007916:	db0a      	blt.n	800792e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007918:	683b      	ldr	r3, [r7, #0]
 800791a:	b2da      	uxtb	r2, r3
 800791c:	490c      	ldr	r1, [pc, #48]	; (8007950 <__NVIC_SetPriority+0x4c>)
 800791e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8007922:	0112      	lsls	r2, r2, #4
 8007924:	b2d2      	uxtb	r2, r2
 8007926:	440b      	add	r3, r1
 8007928:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 800792c:	e00a      	b.n	8007944 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800792e:	683b      	ldr	r3, [r7, #0]
 8007930:	b2da      	uxtb	r2, r3
 8007932:	4908      	ldr	r1, [pc, #32]	; (8007954 <__NVIC_SetPriority+0x50>)
 8007934:	79fb      	ldrb	r3, [r7, #7]
 8007936:	f003 030f 	and.w	r3, r3, #15
 800793a:	3b04      	subs	r3, #4
 800793c:	0112      	lsls	r2, r2, #4
 800793e:	b2d2      	uxtb	r2, r2
 8007940:	440b      	add	r3, r1
 8007942:	761a      	strb	r2, [r3, #24]
}
 8007944:	bf00      	nop
 8007946:	370c      	adds	r7, #12
 8007948:	46bd      	mov	sp, r7
 800794a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800794e:	4770      	bx	lr
 8007950:	e000e100 	.word	0xe000e100
 8007954:	e000ed00 	.word	0xe000ed00

08007958 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8007958:	b480      	push	{r7}
 800795a:	b089      	sub	sp, #36	; 0x24
 800795c:	af00      	add	r7, sp, #0
 800795e:	60f8      	str	r0, [r7, #12]
 8007960:	60b9      	str	r1, [r7, #8]
 8007962:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8007964:	68fb      	ldr	r3, [r7, #12]
 8007966:	f003 0307 	and.w	r3, r3, #7
 800796a:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800796c:	69fb      	ldr	r3, [r7, #28]
 800796e:	f1c3 0307 	rsb	r3, r3, #7
 8007972:	2b04      	cmp	r3, #4
 8007974:	bf28      	it	cs
 8007976:	2304      	movcs	r3, #4
 8007978:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800797a:	69fb      	ldr	r3, [r7, #28]
 800797c:	3304      	adds	r3, #4
 800797e:	2b06      	cmp	r3, #6
 8007980:	d902      	bls.n	8007988 <NVIC_EncodePriority+0x30>
 8007982:	69fb      	ldr	r3, [r7, #28]
 8007984:	3b03      	subs	r3, #3
 8007986:	e000      	b.n	800798a <NVIC_EncodePriority+0x32>
 8007988:	2300      	movs	r3, #0
 800798a:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800798c:	f04f 32ff 	mov.w	r2, #4294967295
 8007990:	69bb      	ldr	r3, [r7, #24]
 8007992:	fa02 f303 	lsl.w	r3, r2, r3
 8007996:	43da      	mvns	r2, r3
 8007998:	68bb      	ldr	r3, [r7, #8]
 800799a:	401a      	ands	r2, r3
 800799c:	697b      	ldr	r3, [r7, #20]
 800799e:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80079a0:	f04f 31ff 	mov.w	r1, #4294967295
 80079a4:	697b      	ldr	r3, [r7, #20]
 80079a6:	fa01 f303 	lsl.w	r3, r1, r3
 80079aa:	43d9      	mvns	r1, r3
 80079ac:	687b      	ldr	r3, [r7, #4]
 80079ae:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80079b0:	4313      	orrs	r3, r2
         );
}
 80079b2:	4618      	mov	r0, r3
 80079b4:	3724      	adds	r7, #36	; 0x24
 80079b6:	46bd      	mov	sp, r7
 80079b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079bc:	4770      	bx	lr
	...

080079c0 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80079c0:	b580      	push	{r7, lr}
 80079c2:	b082      	sub	sp, #8
 80079c4:	af00      	add	r7, sp, #0
 80079c6:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80079c8:	687b      	ldr	r3, [r7, #4]
 80079ca:	3b01      	subs	r3, #1
 80079cc:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80079d0:	d301      	bcc.n	80079d6 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 80079d2:	2301      	movs	r3, #1
 80079d4:	e00f      	b.n	80079f6 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80079d6:	4a0a      	ldr	r2, [pc, #40]	; (8007a00 <SysTick_Config+0x40>)
 80079d8:	687b      	ldr	r3, [r7, #4]
 80079da:	3b01      	subs	r3, #1
 80079dc:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 80079de:	210f      	movs	r1, #15
 80079e0:	f04f 30ff 	mov.w	r0, #4294967295
 80079e4:	f7ff ff8e 	bl	8007904 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80079e8:	4b05      	ldr	r3, [pc, #20]	; (8007a00 <SysTick_Config+0x40>)
 80079ea:	2200      	movs	r2, #0
 80079ec:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80079ee:	4b04      	ldr	r3, [pc, #16]	; (8007a00 <SysTick_Config+0x40>)
 80079f0:	2207      	movs	r2, #7
 80079f2:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80079f4:	2300      	movs	r3, #0
}
 80079f6:	4618      	mov	r0, r3
 80079f8:	3708      	adds	r7, #8
 80079fa:	46bd      	mov	sp, r7
 80079fc:	bd80      	pop	{r7, pc}
 80079fe:	bf00      	nop
 8007a00:	e000e010 	.word	0xe000e010

08007a04 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8007a04:	b580      	push	{r7, lr}
 8007a06:	b082      	sub	sp, #8
 8007a08:	af00      	add	r7, sp, #0
 8007a0a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8007a0c:	6878      	ldr	r0, [r7, #4]
 8007a0e:	f7ff ff47 	bl	80078a0 <__NVIC_SetPriorityGrouping>
}
 8007a12:	bf00      	nop
 8007a14:	3708      	adds	r7, #8
 8007a16:	46bd      	mov	sp, r7
 8007a18:	bd80      	pop	{r7, pc}

08007a1a <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15 as described in the table CORTEX_NVIC_Priority_Table
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8007a1a:	b580      	push	{r7, lr}
 8007a1c:	b086      	sub	sp, #24
 8007a1e:	af00      	add	r7, sp, #0
 8007a20:	4603      	mov	r3, r0
 8007a22:	60b9      	str	r1, [r7, #8]
 8007a24:	607a      	str	r2, [r7, #4]
 8007a26:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8007a28:	2300      	movs	r3, #0
 8007a2a:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8007a2c:	f7ff ff5c 	bl	80078e8 <__NVIC_GetPriorityGrouping>
 8007a30:	4603      	mov	r3, r0
 8007a32:	617b      	str	r3, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8007a34:	687a      	ldr	r2, [r7, #4]
 8007a36:	68b9      	ldr	r1, [r7, #8]
 8007a38:	6978      	ldr	r0, [r7, #20]
 8007a3a:	f7ff ff8d 	bl	8007958 <NVIC_EncodePriority>
 8007a3e:	4602      	mov	r2, r0
 8007a40:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8007a44:	4611      	mov	r1, r2
 8007a46:	4618      	mov	r0, r3
 8007a48:	f7ff ff5c 	bl	8007904 <__NVIC_SetPriority>
}
 8007a4c:	bf00      	nop
 8007a4e:	3718      	adds	r7, #24
 8007a50:	46bd      	mov	sp, r7
 8007a52:	bd80      	pop	{r7, pc}

08007a54 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8007a54:	b580      	push	{r7, lr}
 8007a56:	b082      	sub	sp, #8
 8007a58:	af00      	add	r7, sp, #0
 8007a5a:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8007a5c:	6878      	ldr	r0, [r7, #4]
 8007a5e:	f7ff ffaf 	bl	80079c0 <SysTick_Config>
 8007a62:	4603      	mov	r3, r0
}
 8007a64:	4618      	mov	r0, r3
 8007a66:	3708      	adds	r7, #8
 8007a68:	46bd      	mov	sp, r7
 8007a6a:	bd80      	pop	{r7, pc}

08007a6c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8007a6c:	b480      	push	{r7}
 8007a6e:	b087      	sub	sp, #28
 8007a70:	af00      	add	r7, sp, #0
 8007a72:	6078      	str	r0, [r7, #4]
 8007a74:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 8007a76:	2300      	movs	r3, #0
 8007a78:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8007a7a:	e160      	b.n	8007d3e <HAL_GPIO_Init+0x2d2>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8007a7c:	683b      	ldr	r3, [r7, #0]
 8007a7e:	681a      	ldr	r2, [r3, #0]
 8007a80:	2101      	movs	r1, #1
 8007a82:	697b      	ldr	r3, [r7, #20]
 8007a84:	fa01 f303 	lsl.w	r3, r1, r3
 8007a88:	4013      	ands	r3, r2
 8007a8a:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00u)
 8007a8c:	68fb      	ldr	r3, [r7, #12]
 8007a8e:	2b00      	cmp	r3, #0
 8007a90:	f000 8152 	beq.w	8007d38 <HAL_GPIO_Init+0x2cc>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8007a94:	683b      	ldr	r3, [r7, #0]
 8007a96:	685b      	ldr	r3, [r3, #4]
 8007a98:	f003 0303 	and.w	r3, r3, #3
 8007a9c:	2b01      	cmp	r3, #1
 8007a9e:	d005      	beq.n	8007aac <HAL_GPIO_Init+0x40>
 8007aa0:	683b      	ldr	r3, [r7, #0]
 8007aa2:	685b      	ldr	r3, [r3, #4]
 8007aa4:	f003 0303 	and.w	r3, r3, #3
 8007aa8:	2b02      	cmp	r3, #2
 8007aaa:	d130      	bne.n	8007b0e <HAL_GPIO_Init+0xa2>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8007aac:	687b      	ldr	r3, [r7, #4]
 8007aae:	689b      	ldr	r3, [r3, #8]
 8007ab0:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 8007ab2:	697b      	ldr	r3, [r7, #20]
 8007ab4:	005b      	lsls	r3, r3, #1
 8007ab6:	2203      	movs	r2, #3
 8007ab8:	fa02 f303 	lsl.w	r3, r2, r3
 8007abc:	43db      	mvns	r3, r3
 8007abe:	693a      	ldr	r2, [r7, #16]
 8007ac0:	4013      	ands	r3, r2
 8007ac2:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2u));
 8007ac4:	683b      	ldr	r3, [r7, #0]
 8007ac6:	68da      	ldr	r2, [r3, #12]
 8007ac8:	697b      	ldr	r3, [r7, #20]
 8007aca:	005b      	lsls	r3, r3, #1
 8007acc:	fa02 f303 	lsl.w	r3, r2, r3
 8007ad0:	693a      	ldr	r2, [r7, #16]
 8007ad2:	4313      	orrs	r3, r2
 8007ad4:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 8007ad6:	687b      	ldr	r3, [r7, #4]
 8007ad8:	693a      	ldr	r2, [r7, #16]
 8007ada:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8007adc:	687b      	ldr	r3, [r7, #4]
 8007ade:	685b      	ldr	r3, [r3, #4]
 8007ae0:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8007ae2:	2201      	movs	r2, #1
 8007ae4:	697b      	ldr	r3, [r7, #20]
 8007ae6:	fa02 f303 	lsl.w	r3, r2, r3
 8007aea:	43db      	mvns	r3, r3
 8007aec:	693a      	ldr	r2, [r7, #16]
 8007aee:	4013      	ands	r3, r2
 8007af0:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8007af2:	683b      	ldr	r3, [r7, #0]
 8007af4:	685b      	ldr	r3, [r3, #4]
 8007af6:	091b      	lsrs	r3, r3, #4
 8007af8:	f003 0201 	and.w	r2, r3, #1
 8007afc:	697b      	ldr	r3, [r7, #20]
 8007afe:	fa02 f303 	lsl.w	r3, r2, r3
 8007b02:	693a      	ldr	r2, [r7, #16]
 8007b04:	4313      	orrs	r3, r2
 8007b06:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 8007b08:	687b      	ldr	r3, [r7, #4]
 8007b0a:	693a      	ldr	r2, [r7, #16]
 8007b0c:	605a      	str	r2, [r3, #4]
      }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8007b0e:	683b      	ldr	r3, [r7, #0]
 8007b10:	685b      	ldr	r3, [r3, #4]
 8007b12:	f003 0303 	and.w	r3, r3, #3
 8007b16:	2b03      	cmp	r3, #3
 8007b18:	d017      	beq.n	8007b4a <HAL_GPIO_Init+0xde>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8007b1a:	687b      	ldr	r3, [r7, #4]
 8007b1c:	68db      	ldr	r3, [r3, #12]
 8007b1e:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 8007b20:	697b      	ldr	r3, [r7, #20]
 8007b22:	005b      	lsls	r3, r3, #1
 8007b24:	2203      	movs	r2, #3
 8007b26:	fa02 f303 	lsl.w	r3, r2, r3
 8007b2a:	43db      	mvns	r3, r3
 8007b2c:	693a      	ldr	r2, [r7, #16]
 8007b2e:	4013      	ands	r3, r2
 8007b30:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Pull) << (position * 2u));
 8007b32:	683b      	ldr	r3, [r7, #0]
 8007b34:	689a      	ldr	r2, [r3, #8]
 8007b36:	697b      	ldr	r3, [r7, #20]
 8007b38:	005b      	lsls	r3, r3, #1
 8007b3a:	fa02 f303 	lsl.w	r3, r2, r3
 8007b3e:	693a      	ldr	r2, [r7, #16]
 8007b40:	4313      	orrs	r3, r2
 8007b42:	613b      	str	r3, [r7, #16]
        GPIOx->PUPDR = temp;
 8007b44:	687b      	ldr	r3, [r7, #4]
 8007b46:	693a      	ldr	r2, [r7, #16]
 8007b48:	60da      	str	r2, [r3, #12]
      }

      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8007b4a:	683b      	ldr	r3, [r7, #0]
 8007b4c:	685b      	ldr	r3, [r3, #4]
 8007b4e:	f003 0303 	and.w	r3, r3, #3
 8007b52:	2b02      	cmp	r3, #2
 8007b54:	d123      	bne.n	8007b9e <HAL_GPIO_Init+0x132>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3u];
 8007b56:	697b      	ldr	r3, [r7, #20]
 8007b58:	08da      	lsrs	r2, r3, #3
 8007b5a:	687b      	ldr	r3, [r7, #4]
 8007b5c:	3208      	adds	r2, #8
 8007b5e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8007b62:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8007b64:	697b      	ldr	r3, [r7, #20]
 8007b66:	f003 0307 	and.w	r3, r3, #7
 8007b6a:	009b      	lsls	r3, r3, #2
 8007b6c:	220f      	movs	r2, #15
 8007b6e:	fa02 f303 	lsl.w	r3, r2, r3
 8007b72:	43db      	mvns	r3, r3
 8007b74:	693a      	ldr	r2, [r7, #16]
 8007b76:	4013      	ands	r3, r2
 8007b78:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8007b7a:	683b      	ldr	r3, [r7, #0]
 8007b7c:	691a      	ldr	r2, [r3, #16]
 8007b7e:	697b      	ldr	r3, [r7, #20]
 8007b80:	f003 0307 	and.w	r3, r3, #7
 8007b84:	009b      	lsls	r3, r3, #2
 8007b86:	fa02 f303 	lsl.w	r3, r2, r3
 8007b8a:	693a      	ldr	r2, [r7, #16]
 8007b8c:	4313      	orrs	r3, r2
 8007b8e:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3u] = temp;
 8007b90:	697b      	ldr	r3, [r7, #20]
 8007b92:	08da      	lsrs	r2, r3, #3
 8007b94:	687b      	ldr	r3, [r7, #4]
 8007b96:	3208      	adds	r2, #8
 8007b98:	6939      	ldr	r1, [r7, #16]
 8007b9a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8007b9e:	687b      	ldr	r3, [r7, #4]
 8007ba0:	681b      	ldr	r3, [r3, #0]
 8007ba2:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 8007ba4:	697b      	ldr	r3, [r7, #20]
 8007ba6:	005b      	lsls	r3, r3, #1
 8007ba8:	2203      	movs	r2, #3
 8007baa:	fa02 f303 	lsl.w	r3, r2, r3
 8007bae:	43db      	mvns	r3, r3
 8007bb0:	693a      	ldr	r2, [r7, #16]
 8007bb2:	4013      	ands	r3, r2
 8007bb4:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8007bb6:	683b      	ldr	r3, [r7, #0]
 8007bb8:	685b      	ldr	r3, [r3, #4]
 8007bba:	f003 0203 	and.w	r2, r3, #3
 8007bbe:	697b      	ldr	r3, [r7, #20]
 8007bc0:	005b      	lsls	r3, r3, #1
 8007bc2:	fa02 f303 	lsl.w	r3, r2, r3
 8007bc6:	693a      	ldr	r2, [r7, #16]
 8007bc8:	4313      	orrs	r3, r2
 8007bca:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 8007bcc:	687b      	ldr	r3, [r7, #4]
 8007bce:	693a      	ldr	r2, [r7, #16]
 8007bd0:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8007bd2:	683b      	ldr	r3, [r7, #0]
 8007bd4:	685b      	ldr	r3, [r3, #4]
 8007bd6:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8007bda:	2b00      	cmp	r3, #0
 8007bdc:	f000 80ac 	beq.w	8007d38 <HAL_GPIO_Init+0x2cc>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8007be0:	4b5e      	ldr	r3, [pc, #376]	; (8007d5c <HAL_GPIO_Init+0x2f0>)
 8007be2:	699b      	ldr	r3, [r3, #24]
 8007be4:	4a5d      	ldr	r2, [pc, #372]	; (8007d5c <HAL_GPIO_Init+0x2f0>)
 8007be6:	f043 0301 	orr.w	r3, r3, #1
 8007bea:	6193      	str	r3, [r2, #24]
 8007bec:	4b5b      	ldr	r3, [pc, #364]	; (8007d5c <HAL_GPIO_Init+0x2f0>)
 8007bee:	699b      	ldr	r3, [r3, #24]
 8007bf0:	f003 0301 	and.w	r3, r3, #1
 8007bf4:	60bb      	str	r3, [r7, #8]
 8007bf6:	68bb      	ldr	r3, [r7, #8]

        temp = SYSCFG->EXTICR[position >> 2u];
 8007bf8:	4a59      	ldr	r2, [pc, #356]	; (8007d60 <HAL_GPIO_Init+0x2f4>)
 8007bfa:	697b      	ldr	r3, [r7, #20]
 8007bfc:	089b      	lsrs	r3, r3, #2
 8007bfe:	3302      	adds	r3, #2
 8007c00:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8007c04:	613b      	str	r3, [r7, #16]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8007c06:	697b      	ldr	r3, [r7, #20]
 8007c08:	f003 0303 	and.w	r3, r3, #3
 8007c0c:	009b      	lsls	r3, r3, #2
 8007c0e:	220f      	movs	r2, #15
 8007c10:	fa02 f303 	lsl.w	r3, r2, r3
 8007c14:	43db      	mvns	r3, r3
 8007c16:	693a      	ldr	r2, [r7, #16]
 8007c18:	4013      	ands	r3, r2
 8007c1a:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8007c1c:	687b      	ldr	r3, [r7, #4]
 8007c1e:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 8007c22:	d025      	beq.n	8007c70 <HAL_GPIO_Init+0x204>
 8007c24:	687b      	ldr	r3, [r7, #4]
 8007c26:	4a4f      	ldr	r2, [pc, #316]	; (8007d64 <HAL_GPIO_Init+0x2f8>)
 8007c28:	4293      	cmp	r3, r2
 8007c2a:	d01f      	beq.n	8007c6c <HAL_GPIO_Init+0x200>
 8007c2c:	687b      	ldr	r3, [r7, #4]
 8007c2e:	4a4e      	ldr	r2, [pc, #312]	; (8007d68 <HAL_GPIO_Init+0x2fc>)
 8007c30:	4293      	cmp	r3, r2
 8007c32:	d019      	beq.n	8007c68 <HAL_GPIO_Init+0x1fc>
 8007c34:	687b      	ldr	r3, [r7, #4]
 8007c36:	4a4d      	ldr	r2, [pc, #308]	; (8007d6c <HAL_GPIO_Init+0x300>)
 8007c38:	4293      	cmp	r3, r2
 8007c3a:	d013      	beq.n	8007c64 <HAL_GPIO_Init+0x1f8>
 8007c3c:	687b      	ldr	r3, [r7, #4]
 8007c3e:	4a4c      	ldr	r2, [pc, #304]	; (8007d70 <HAL_GPIO_Init+0x304>)
 8007c40:	4293      	cmp	r3, r2
 8007c42:	d00d      	beq.n	8007c60 <HAL_GPIO_Init+0x1f4>
 8007c44:	687b      	ldr	r3, [r7, #4]
 8007c46:	4a4b      	ldr	r2, [pc, #300]	; (8007d74 <HAL_GPIO_Init+0x308>)
 8007c48:	4293      	cmp	r3, r2
 8007c4a:	d007      	beq.n	8007c5c <HAL_GPIO_Init+0x1f0>
 8007c4c:	687b      	ldr	r3, [r7, #4]
 8007c4e:	4a4a      	ldr	r2, [pc, #296]	; (8007d78 <HAL_GPIO_Init+0x30c>)
 8007c50:	4293      	cmp	r3, r2
 8007c52:	d101      	bne.n	8007c58 <HAL_GPIO_Init+0x1ec>
 8007c54:	2306      	movs	r3, #6
 8007c56:	e00c      	b.n	8007c72 <HAL_GPIO_Init+0x206>
 8007c58:	2307      	movs	r3, #7
 8007c5a:	e00a      	b.n	8007c72 <HAL_GPIO_Init+0x206>
 8007c5c:	2305      	movs	r3, #5
 8007c5e:	e008      	b.n	8007c72 <HAL_GPIO_Init+0x206>
 8007c60:	2304      	movs	r3, #4
 8007c62:	e006      	b.n	8007c72 <HAL_GPIO_Init+0x206>
 8007c64:	2303      	movs	r3, #3
 8007c66:	e004      	b.n	8007c72 <HAL_GPIO_Init+0x206>
 8007c68:	2302      	movs	r3, #2
 8007c6a:	e002      	b.n	8007c72 <HAL_GPIO_Init+0x206>
 8007c6c:	2301      	movs	r3, #1
 8007c6e:	e000      	b.n	8007c72 <HAL_GPIO_Init+0x206>
 8007c70:	2300      	movs	r3, #0
 8007c72:	697a      	ldr	r2, [r7, #20]
 8007c74:	f002 0203 	and.w	r2, r2, #3
 8007c78:	0092      	lsls	r2, r2, #2
 8007c7a:	4093      	lsls	r3, r2
 8007c7c:	693a      	ldr	r2, [r7, #16]
 8007c7e:	4313      	orrs	r3, r2
 8007c80:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2u] = temp;
 8007c82:	4937      	ldr	r1, [pc, #220]	; (8007d60 <HAL_GPIO_Init+0x2f4>)
 8007c84:	697b      	ldr	r3, [r7, #20]
 8007c86:	089b      	lsrs	r3, r3, #2
 8007c88:	3302      	adds	r3, #2
 8007c8a:	693a      	ldr	r2, [r7, #16]
 8007c8c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8007c90:	4b3a      	ldr	r3, [pc, #232]	; (8007d7c <HAL_GPIO_Init+0x310>)
 8007c92:	689b      	ldr	r3, [r3, #8]
 8007c94:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8007c96:	68fb      	ldr	r3, [r7, #12]
 8007c98:	43db      	mvns	r3, r3
 8007c9a:	693a      	ldr	r2, [r7, #16]
 8007c9c:	4013      	ands	r3, r2
 8007c9e:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8007ca0:	683b      	ldr	r3, [r7, #0]
 8007ca2:	685b      	ldr	r3, [r3, #4]
 8007ca4:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8007ca8:	2b00      	cmp	r3, #0
 8007caa:	d003      	beq.n	8007cb4 <HAL_GPIO_Init+0x248>
        {
          temp |= iocurrent;
 8007cac:	693a      	ldr	r2, [r7, #16]
 8007cae:	68fb      	ldr	r3, [r7, #12]
 8007cb0:	4313      	orrs	r3, r2
 8007cb2:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR = temp;
 8007cb4:	4a31      	ldr	r2, [pc, #196]	; (8007d7c <HAL_GPIO_Init+0x310>)
 8007cb6:	693b      	ldr	r3, [r7, #16]
 8007cb8:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8007cba:	4b30      	ldr	r3, [pc, #192]	; (8007d7c <HAL_GPIO_Init+0x310>)
 8007cbc:	68db      	ldr	r3, [r3, #12]
 8007cbe:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8007cc0:	68fb      	ldr	r3, [r7, #12]
 8007cc2:	43db      	mvns	r3, r3
 8007cc4:	693a      	ldr	r2, [r7, #16]
 8007cc6:	4013      	ands	r3, r2
 8007cc8:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8007cca:	683b      	ldr	r3, [r7, #0]
 8007ccc:	685b      	ldr	r3, [r3, #4]
 8007cce:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8007cd2:	2b00      	cmp	r3, #0
 8007cd4:	d003      	beq.n	8007cde <HAL_GPIO_Init+0x272>
        {
          temp |= iocurrent;
 8007cd6:	693a      	ldr	r2, [r7, #16]
 8007cd8:	68fb      	ldr	r3, [r7, #12]
 8007cda:	4313      	orrs	r3, r2
 8007cdc:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR = temp;
 8007cde:	4a27      	ldr	r2, [pc, #156]	; (8007d7c <HAL_GPIO_Init+0x310>)
 8007ce0:	693b      	ldr	r3, [r7, #16]
 8007ce2:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 8007ce4:	4b25      	ldr	r3, [pc, #148]	; (8007d7c <HAL_GPIO_Init+0x310>)
 8007ce6:	685b      	ldr	r3, [r3, #4]
 8007ce8:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8007cea:	68fb      	ldr	r3, [r7, #12]
 8007cec:	43db      	mvns	r3, r3
 8007cee:	693a      	ldr	r2, [r7, #16]
 8007cf0:	4013      	ands	r3, r2
 8007cf2:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8007cf4:	683b      	ldr	r3, [r7, #0]
 8007cf6:	685b      	ldr	r3, [r3, #4]
 8007cf8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007cfc:	2b00      	cmp	r3, #0
 8007cfe:	d003      	beq.n	8007d08 <HAL_GPIO_Init+0x29c>
        {
          temp |= iocurrent;
 8007d00:	693a      	ldr	r2, [r7, #16]
 8007d02:	68fb      	ldr	r3, [r7, #12]
 8007d04:	4313      	orrs	r3, r2
 8007d06:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR = temp;
 8007d08:	4a1c      	ldr	r2, [pc, #112]	; (8007d7c <HAL_GPIO_Init+0x310>)
 8007d0a:	693b      	ldr	r3, [r7, #16]
 8007d0c:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8007d0e:	4b1b      	ldr	r3, [pc, #108]	; (8007d7c <HAL_GPIO_Init+0x310>)
 8007d10:	681b      	ldr	r3, [r3, #0]
 8007d12:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8007d14:	68fb      	ldr	r3, [r7, #12]
 8007d16:	43db      	mvns	r3, r3
 8007d18:	693a      	ldr	r2, [r7, #16]
 8007d1a:	4013      	ands	r3, r2
 8007d1c:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8007d1e:	683b      	ldr	r3, [r7, #0]
 8007d20:	685b      	ldr	r3, [r3, #4]
 8007d22:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8007d26:	2b00      	cmp	r3, #0
 8007d28:	d003      	beq.n	8007d32 <HAL_GPIO_Init+0x2c6>
        {
          temp |= iocurrent;
 8007d2a:	693a      	ldr	r2, [r7, #16]
 8007d2c:	68fb      	ldr	r3, [r7, #12]
 8007d2e:	4313      	orrs	r3, r2
 8007d30:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR = temp;
 8007d32:	4a12      	ldr	r2, [pc, #72]	; (8007d7c <HAL_GPIO_Init+0x310>)
 8007d34:	693b      	ldr	r3, [r7, #16]
 8007d36:	6013      	str	r3, [r2, #0]
      }
    }

    position++;
 8007d38:	697b      	ldr	r3, [r7, #20]
 8007d3a:	3301      	adds	r3, #1
 8007d3c:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8007d3e:	683b      	ldr	r3, [r7, #0]
 8007d40:	681a      	ldr	r2, [r3, #0]
 8007d42:	697b      	ldr	r3, [r7, #20]
 8007d44:	fa22 f303 	lsr.w	r3, r2, r3
 8007d48:	2b00      	cmp	r3, #0
 8007d4a:	f47f ae97 	bne.w	8007a7c <HAL_GPIO_Init+0x10>
  }
}
 8007d4e:	bf00      	nop
 8007d50:	bf00      	nop
 8007d52:	371c      	adds	r7, #28
 8007d54:	46bd      	mov	sp, r7
 8007d56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d5a:	4770      	bx	lr
 8007d5c:	40021000 	.word	0x40021000
 8007d60:	40010000 	.word	0x40010000
 8007d64:	48000400 	.word	0x48000400
 8007d68:	48000800 	.word	0x48000800
 8007d6c:	48000c00 	.word	0x48000c00
 8007d70:	48001000 	.word	0x48001000
 8007d74:	48001400 	.word	0x48001400
 8007d78:	48001800 	.word	0x48001800
 8007d7c:	40010400 	.word	0x40010400

08007d80 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8007d80:	b580      	push	{r7, lr}
 8007d82:	f5ad 7d02 	sub.w	sp, sp, #520	; 0x208
 8007d86:	af00      	add	r7, sp, #0
 8007d88:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8007d8c:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 8007d90:	6018      	str	r0, [r3, #0]
#if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
  uint32_t pll_config2;
#endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8007d92:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8007d96:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 8007d9a:	681b      	ldr	r3, [r3, #0]
 8007d9c:	2b00      	cmp	r3, #0
 8007d9e:	d102      	bne.n	8007da6 <HAL_RCC_OscConfig+0x26>
  {
    return HAL_ERROR;
 8007da0:	2301      	movs	r3, #1
 8007da2:	f001 b845 	b.w	8008e30 <HAL_RCC_OscConfig+0x10b0>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8007da6:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8007daa:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 8007dae:	681b      	ldr	r3, [r3, #0]
 8007db0:	681b      	ldr	r3, [r3, #0]
 8007db2:	f003 0301 	and.w	r3, r3, #1
 8007db6:	2b00      	cmp	r3, #0
 8007db8:	f000 8171 	beq.w	800809e <HAL_RCC_OscConfig+0x31e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 8007dbc:	4bb6      	ldr	r3, [pc, #728]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8007dbe:	685b      	ldr	r3, [r3, #4]
 8007dc0:	f003 030c 	and.w	r3, r3, #12
 8007dc4:	2b04      	cmp	r3, #4
 8007dc6:	d00c      	beq.n	8007de2 <HAL_RCC_OscConfig+0x62>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 8007dc8:	4bb3      	ldr	r3, [pc, #716]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8007dca:	685b      	ldr	r3, [r3, #4]
 8007dcc:	f003 030c 	and.w	r3, r3, #12
 8007dd0:	2b08      	cmp	r3, #8
 8007dd2:	d15c      	bne.n	8007e8e <HAL_RCC_OscConfig+0x10e>
 8007dd4:	4bb0      	ldr	r3, [pc, #704]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8007dd6:	685b      	ldr	r3, [r3, #4]
 8007dd8:	f403 33c0 	and.w	r3, r3, #98304	; 0x18000
 8007ddc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007de0:	d155      	bne.n	8007e8e <HAL_RCC_OscConfig+0x10e>
 8007de2:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8007de6:	f8c7 31f4 	str.w	r3, [r7, #500]	; 0x1f4
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8007dea:	f8d7 31f4 	ldr.w	r3, [r7, #500]	; 0x1f4
 8007dee:	fa93 f3a3 	rbit	r3, r3
 8007df2:	f8c7 31f0 	str.w	r3, [r7, #496]	; 0x1f0
    result |= value & 1U;
    s--;
  }
  result <<= s;                        /* shift when v's highest bits are zero */
#endif
  return result;
 8007df6:	f8d7 31f0 	ldr.w	r3, [r7, #496]	; 0x1f0
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8007dfa:	fab3 f383 	clz	r3, r3
 8007dfe:	b2db      	uxtb	r3, r3
 8007e00:	095b      	lsrs	r3, r3, #5
 8007e02:	b2db      	uxtb	r3, r3
 8007e04:	f043 0301 	orr.w	r3, r3, #1
 8007e08:	b2db      	uxtb	r3, r3
 8007e0a:	2b01      	cmp	r3, #1
 8007e0c:	d102      	bne.n	8007e14 <HAL_RCC_OscConfig+0x94>
 8007e0e:	4ba2      	ldr	r3, [pc, #648]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8007e10:	681b      	ldr	r3, [r3, #0]
 8007e12:	e015      	b.n	8007e40 <HAL_RCC_OscConfig+0xc0>
 8007e14:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8007e18:	f8c7 31ec 	str.w	r3, [r7, #492]	; 0x1ec
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8007e1c:	f8d7 31ec 	ldr.w	r3, [r7, #492]	; 0x1ec
 8007e20:	fa93 f3a3 	rbit	r3, r3
 8007e24:	f8c7 31e8 	str.w	r3, [r7, #488]	; 0x1e8
 8007e28:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8007e2c:	f8c7 31e4 	str.w	r3, [r7, #484]	; 0x1e4
 8007e30:	f8d7 31e4 	ldr.w	r3, [r7, #484]	; 0x1e4
 8007e34:	fa93 f3a3 	rbit	r3, r3
 8007e38:	f8c7 31e0 	str.w	r3, [r7, #480]	; 0x1e0
 8007e3c:	4b96      	ldr	r3, [pc, #600]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8007e3e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007e40:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8007e44:	f8c7 21dc 	str.w	r2, [r7, #476]	; 0x1dc
 8007e48:	f8d7 21dc 	ldr.w	r2, [r7, #476]	; 0x1dc
 8007e4c:	fa92 f2a2 	rbit	r2, r2
 8007e50:	f8c7 21d8 	str.w	r2, [r7, #472]	; 0x1d8
  return result;
 8007e54:	f8d7 21d8 	ldr.w	r2, [r7, #472]	; 0x1d8
 8007e58:	fab2 f282 	clz	r2, r2
 8007e5c:	b2d2      	uxtb	r2, r2
 8007e5e:	f042 0220 	orr.w	r2, r2, #32
 8007e62:	b2d2      	uxtb	r2, r2
 8007e64:	f002 021f 	and.w	r2, r2, #31
 8007e68:	2101      	movs	r1, #1
 8007e6a:	fa01 f202 	lsl.w	r2, r1, r2
 8007e6e:	4013      	ands	r3, r2
 8007e70:	2b00      	cmp	r3, #0
 8007e72:	f000 8113 	beq.w	800809c <HAL_RCC_OscConfig+0x31c>
 8007e76:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8007e7a:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 8007e7e:	681b      	ldr	r3, [r3, #0]
 8007e80:	685b      	ldr	r3, [r3, #4]
 8007e82:	2b00      	cmp	r3, #0
 8007e84:	f040 810a 	bne.w	800809c <HAL_RCC_OscConfig+0x31c>
      {
        return HAL_ERROR;
 8007e88:	2301      	movs	r3, #1
 8007e8a:	f000 bfd1 	b.w	8008e30 <HAL_RCC_OscConfig+0x10b0>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007e8e:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8007e92:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 8007e96:	681b      	ldr	r3, [r3, #0]
 8007e98:	685b      	ldr	r3, [r3, #4]
 8007e9a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007e9e:	d106      	bne.n	8007eae <HAL_RCC_OscConfig+0x12e>
 8007ea0:	4b7d      	ldr	r3, [pc, #500]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8007ea2:	681b      	ldr	r3, [r3, #0]
 8007ea4:	4a7c      	ldr	r2, [pc, #496]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8007ea6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007eaa:	6013      	str	r3, [r2, #0]
 8007eac:	e036      	b.n	8007f1c <HAL_RCC_OscConfig+0x19c>
 8007eae:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8007eb2:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 8007eb6:	681b      	ldr	r3, [r3, #0]
 8007eb8:	685b      	ldr	r3, [r3, #4]
 8007eba:	2b00      	cmp	r3, #0
 8007ebc:	d10c      	bne.n	8007ed8 <HAL_RCC_OscConfig+0x158>
 8007ebe:	4b76      	ldr	r3, [pc, #472]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8007ec0:	681b      	ldr	r3, [r3, #0]
 8007ec2:	4a75      	ldr	r2, [pc, #468]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8007ec4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007ec8:	6013      	str	r3, [r2, #0]
 8007eca:	4b73      	ldr	r3, [pc, #460]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8007ecc:	681b      	ldr	r3, [r3, #0]
 8007ece:	4a72      	ldr	r2, [pc, #456]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8007ed0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007ed4:	6013      	str	r3, [r2, #0]
 8007ed6:	e021      	b.n	8007f1c <HAL_RCC_OscConfig+0x19c>
 8007ed8:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8007edc:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 8007ee0:	681b      	ldr	r3, [r3, #0]
 8007ee2:	685b      	ldr	r3, [r3, #4]
 8007ee4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8007ee8:	d10c      	bne.n	8007f04 <HAL_RCC_OscConfig+0x184>
 8007eea:	4b6b      	ldr	r3, [pc, #428]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8007eec:	681b      	ldr	r3, [r3, #0]
 8007eee:	4a6a      	ldr	r2, [pc, #424]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8007ef0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8007ef4:	6013      	str	r3, [r2, #0]
 8007ef6:	4b68      	ldr	r3, [pc, #416]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8007ef8:	681b      	ldr	r3, [r3, #0]
 8007efa:	4a67      	ldr	r2, [pc, #412]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8007efc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007f00:	6013      	str	r3, [r2, #0]
 8007f02:	e00b      	b.n	8007f1c <HAL_RCC_OscConfig+0x19c>
 8007f04:	4b64      	ldr	r3, [pc, #400]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8007f06:	681b      	ldr	r3, [r3, #0]
 8007f08:	4a63      	ldr	r2, [pc, #396]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8007f0a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007f0e:	6013      	str	r3, [r2, #0]
 8007f10:	4b61      	ldr	r3, [pc, #388]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8007f12:	681b      	ldr	r3, [r3, #0]
 8007f14:	4a60      	ldr	r2, [pc, #384]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8007f16:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007f1a:	6013      	str	r3, [r2, #0]
      /* Configure the HSE predivision factor --------------------------------*/
      __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
#endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */

       /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8007f1c:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8007f20:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 8007f24:	681b      	ldr	r3, [r3, #0]
 8007f26:	685b      	ldr	r3, [r3, #4]
 8007f28:	2b00      	cmp	r3, #0
 8007f2a:	d05a      	beq.n	8007fe2 <HAL_RCC_OscConfig+0x262>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8007f2c:	f7ff fcac 	bl	8007888 <HAL_GetTick>
 8007f30:	4603      	mov	r3, r0
 8007f32:	f8c7 3200 	str.w	r3, [r7, #512]	; 0x200
        
        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007f36:	e00a      	b.n	8007f4e <HAL_RCC_OscConfig+0x1ce>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8007f38:	f7ff fca6 	bl	8007888 <HAL_GetTick>
 8007f3c:	4602      	mov	r2, r0
 8007f3e:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8007f42:	1ad3      	subs	r3, r2, r3
 8007f44:	2b64      	cmp	r3, #100	; 0x64
 8007f46:	d902      	bls.n	8007f4e <HAL_RCC_OscConfig+0x1ce>
          {
            return HAL_TIMEOUT;
 8007f48:	2303      	movs	r3, #3
 8007f4a:	f000 bf71 	b.w	8008e30 <HAL_RCC_OscConfig+0x10b0>
 8007f4e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8007f52:	f8c7 31d4 	str.w	r3, [r7, #468]	; 0x1d4
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8007f56:	f8d7 31d4 	ldr.w	r3, [r7, #468]	; 0x1d4
 8007f5a:	fa93 f3a3 	rbit	r3, r3
 8007f5e:	f8c7 31d0 	str.w	r3, [r7, #464]	; 0x1d0
  return result;
 8007f62:	f8d7 31d0 	ldr.w	r3, [r7, #464]	; 0x1d0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007f66:	fab3 f383 	clz	r3, r3
 8007f6a:	b2db      	uxtb	r3, r3
 8007f6c:	095b      	lsrs	r3, r3, #5
 8007f6e:	b2db      	uxtb	r3, r3
 8007f70:	f043 0301 	orr.w	r3, r3, #1
 8007f74:	b2db      	uxtb	r3, r3
 8007f76:	2b01      	cmp	r3, #1
 8007f78:	d102      	bne.n	8007f80 <HAL_RCC_OscConfig+0x200>
 8007f7a:	4b47      	ldr	r3, [pc, #284]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8007f7c:	681b      	ldr	r3, [r3, #0]
 8007f7e:	e015      	b.n	8007fac <HAL_RCC_OscConfig+0x22c>
 8007f80:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8007f84:	f8c7 31cc 	str.w	r3, [r7, #460]	; 0x1cc
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8007f88:	f8d7 31cc 	ldr.w	r3, [r7, #460]	; 0x1cc
 8007f8c:	fa93 f3a3 	rbit	r3, r3
 8007f90:	f8c7 31c8 	str.w	r3, [r7, #456]	; 0x1c8
 8007f94:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8007f98:	f8c7 31c4 	str.w	r3, [r7, #452]	; 0x1c4
 8007f9c:	f8d7 31c4 	ldr.w	r3, [r7, #452]	; 0x1c4
 8007fa0:	fa93 f3a3 	rbit	r3, r3
 8007fa4:	f8c7 31c0 	str.w	r3, [r7, #448]	; 0x1c0
 8007fa8:	4b3b      	ldr	r3, [pc, #236]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8007faa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007fac:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8007fb0:	f8c7 21bc 	str.w	r2, [r7, #444]	; 0x1bc
 8007fb4:	f8d7 21bc 	ldr.w	r2, [r7, #444]	; 0x1bc
 8007fb8:	fa92 f2a2 	rbit	r2, r2
 8007fbc:	f8c7 21b8 	str.w	r2, [r7, #440]	; 0x1b8
  return result;
 8007fc0:	f8d7 21b8 	ldr.w	r2, [r7, #440]	; 0x1b8
 8007fc4:	fab2 f282 	clz	r2, r2
 8007fc8:	b2d2      	uxtb	r2, r2
 8007fca:	f042 0220 	orr.w	r2, r2, #32
 8007fce:	b2d2      	uxtb	r2, r2
 8007fd0:	f002 021f 	and.w	r2, r2, #31
 8007fd4:	2101      	movs	r1, #1
 8007fd6:	fa01 f202 	lsl.w	r2, r1, r2
 8007fda:	4013      	ands	r3, r2
 8007fdc:	2b00      	cmp	r3, #0
 8007fde:	d0ab      	beq.n	8007f38 <HAL_RCC_OscConfig+0x1b8>
 8007fe0:	e05d      	b.n	800809e <HAL_RCC_OscConfig+0x31e>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8007fe2:	f7ff fc51 	bl	8007888 <HAL_GetTick>
 8007fe6:	4603      	mov	r3, r0
 8007fe8:	f8c7 3200 	str.w	r3, [r7, #512]	; 0x200
        
        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8007fec:	e00a      	b.n	8008004 <HAL_RCC_OscConfig+0x284>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8007fee:	f7ff fc4b 	bl	8007888 <HAL_GetTick>
 8007ff2:	4602      	mov	r2, r0
 8007ff4:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8007ff8:	1ad3      	subs	r3, r2, r3
 8007ffa:	2b64      	cmp	r3, #100	; 0x64
 8007ffc:	d902      	bls.n	8008004 <HAL_RCC_OscConfig+0x284>
          {
            return HAL_TIMEOUT;
 8007ffe:	2303      	movs	r3, #3
 8008000:	f000 bf16 	b.w	8008e30 <HAL_RCC_OscConfig+0x10b0>
 8008004:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8008008:	f8c7 31b4 	str.w	r3, [r7, #436]	; 0x1b4
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800800c:	f8d7 31b4 	ldr.w	r3, [r7, #436]	; 0x1b4
 8008010:	fa93 f3a3 	rbit	r3, r3
 8008014:	f8c7 31b0 	str.w	r3, [r7, #432]	; 0x1b0
  return result;
 8008018:	f8d7 31b0 	ldr.w	r3, [r7, #432]	; 0x1b0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800801c:	fab3 f383 	clz	r3, r3
 8008020:	b2db      	uxtb	r3, r3
 8008022:	095b      	lsrs	r3, r3, #5
 8008024:	b2db      	uxtb	r3, r3
 8008026:	f043 0301 	orr.w	r3, r3, #1
 800802a:	b2db      	uxtb	r3, r3
 800802c:	2b01      	cmp	r3, #1
 800802e:	d102      	bne.n	8008036 <HAL_RCC_OscConfig+0x2b6>
 8008030:	4b19      	ldr	r3, [pc, #100]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8008032:	681b      	ldr	r3, [r3, #0]
 8008034:	e015      	b.n	8008062 <HAL_RCC_OscConfig+0x2e2>
 8008036:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800803a:	f8c7 31ac 	str.w	r3, [r7, #428]	; 0x1ac
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800803e:	f8d7 31ac 	ldr.w	r3, [r7, #428]	; 0x1ac
 8008042:	fa93 f3a3 	rbit	r3, r3
 8008046:	f8c7 31a8 	str.w	r3, [r7, #424]	; 0x1a8
 800804a:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800804e:	f8c7 31a4 	str.w	r3, [r7, #420]	; 0x1a4
 8008052:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8008056:	fa93 f3a3 	rbit	r3, r3
 800805a:	f8c7 31a0 	str.w	r3, [r7, #416]	; 0x1a0
 800805e:	4b0e      	ldr	r3, [pc, #56]	; (8008098 <HAL_RCC_OscConfig+0x318>)
 8008060:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008062:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8008066:	f8c7 219c 	str.w	r2, [r7, #412]	; 0x19c
 800806a:	f8d7 219c 	ldr.w	r2, [r7, #412]	; 0x19c
 800806e:	fa92 f2a2 	rbit	r2, r2
 8008072:	f8c7 2198 	str.w	r2, [r7, #408]	; 0x198
  return result;
 8008076:	f8d7 2198 	ldr.w	r2, [r7, #408]	; 0x198
 800807a:	fab2 f282 	clz	r2, r2
 800807e:	b2d2      	uxtb	r2, r2
 8008080:	f042 0220 	orr.w	r2, r2, #32
 8008084:	b2d2      	uxtb	r2, r2
 8008086:	f002 021f 	and.w	r2, r2, #31
 800808a:	2101      	movs	r1, #1
 800808c:	fa01 f202 	lsl.w	r2, r1, r2
 8008090:	4013      	ands	r3, r2
 8008092:	2b00      	cmp	r3, #0
 8008094:	d1ab      	bne.n	8007fee <HAL_RCC_OscConfig+0x26e>
 8008096:	e002      	b.n	800809e <HAL_RCC_OscConfig+0x31e>
 8008098:	40021000 	.word	0x40021000
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800809c:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800809e:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80080a2:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 80080a6:	681b      	ldr	r3, [r3, #0]
 80080a8:	681b      	ldr	r3, [r3, #0]
 80080aa:	f003 0302 	and.w	r3, r3, #2
 80080ae:	2b00      	cmp	r3, #0
 80080b0:	f000 8181 	beq.w	80083b6 <HAL_RCC_OscConfig+0x636>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */ 
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 80080b4:	4ba8      	ldr	r3, [pc, #672]	; (8008358 <HAL_RCC_OscConfig+0x5d8>)
 80080b6:	685b      	ldr	r3, [r3, #4]
 80080b8:	f003 030c 	and.w	r3, r3, #12
 80080bc:	2b00      	cmp	r3, #0
 80080be:	d00c      	beq.n	80080da <HAL_RCC_OscConfig+0x35a>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 80080c0:	4ba5      	ldr	r3, [pc, #660]	; (8008358 <HAL_RCC_OscConfig+0x5d8>)
 80080c2:	685b      	ldr	r3, [r3, #4]
 80080c4:	f003 030c 	and.w	r3, r3, #12
 80080c8:	2b08      	cmp	r3, #8
 80080ca:	d173      	bne.n	80081b4 <HAL_RCC_OscConfig+0x434>
 80080cc:	4ba2      	ldr	r3, [pc, #648]	; (8008358 <HAL_RCC_OscConfig+0x5d8>)
 80080ce:	685b      	ldr	r3, [r3, #4]
 80080d0:	f403 33c0 	and.w	r3, r3, #98304	; 0x18000
 80080d4:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80080d8:	d16c      	bne.n	80081b4 <HAL_RCC_OscConfig+0x434>
 80080da:	2302      	movs	r3, #2
 80080dc:	f8c7 3194 	str.w	r3, [r7, #404]	; 0x194
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80080e0:	f8d7 3194 	ldr.w	r3, [r7, #404]	; 0x194
 80080e4:	fa93 f3a3 	rbit	r3, r3
 80080e8:	f8c7 3190 	str.w	r3, [r7, #400]	; 0x190
  return result;
 80080ec:	f8d7 3190 	ldr.w	r3, [r7, #400]	; 0x190
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80080f0:	fab3 f383 	clz	r3, r3
 80080f4:	b2db      	uxtb	r3, r3
 80080f6:	095b      	lsrs	r3, r3, #5
 80080f8:	b2db      	uxtb	r3, r3
 80080fa:	f043 0301 	orr.w	r3, r3, #1
 80080fe:	b2db      	uxtb	r3, r3
 8008100:	2b01      	cmp	r3, #1
 8008102:	d102      	bne.n	800810a <HAL_RCC_OscConfig+0x38a>
 8008104:	4b94      	ldr	r3, [pc, #592]	; (8008358 <HAL_RCC_OscConfig+0x5d8>)
 8008106:	681b      	ldr	r3, [r3, #0]
 8008108:	e013      	b.n	8008132 <HAL_RCC_OscConfig+0x3b2>
 800810a:	2302      	movs	r3, #2
 800810c:	f8c7 318c 	str.w	r3, [r7, #396]	; 0x18c
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8008110:	f8d7 318c 	ldr.w	r3, [r7, #396]	; 0x18c
 8008114:	fa93 f3a3 	rbit	r3, r3
 8008118:	f8c7 3188 	str.w	r3, [r7, #392]	; 0x188
 800811c:	2302      	movs	r3, #2
 800811e:	f8c7 3184 	str.w	r3, [r7, #388]	; 0x184
 8008122:	f8d7 3184 	ldr.w	r3, [r7, #388]	; 0x184
 8008126:	fa93 f3a3 	rbit	r3, r3
 800812a:	f8c7 3180 	str.w	r3, [r7, #384]	; 0x180
 800812e:	4b8a      	ldr	r3, [pc, #552]	; (8008358 <HAL_RCC_OscConfig+0x5d8>)
 8008130:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008132:	2202      	movs	r2, #2
 8008134:	f8c7 217c 	str.w	r2, [r7, #380]	; 0x17c
 8008138:	f8d7 217c 	ldr.w	r2, [r7, #380]	; 0x17c
 800813c:	fa92 f2a2 	rbit	r2, r2
 8008140:	f8c7 2178 	str.w	r2, [r7, #376]	; 0x178
  return result;
 8008144:	f8d7 2178 	ldr.w	r2, [r7, #376]	; 0x178
 8008148:	fab2 f282 	clz	r2, r2
 800814c:	b2d2      	uxtb	r2, r2
 800814e:	f042 0220 	orr.w	r2, r2, #32
 8008152:	b2d2      	uxtb	r2, r2
 8008154:	f002 021f 	and.w	r2, r2, #31
 8008158:	2101      	movs	r1, #1
 800815a:	fa01 f202 	lsl.w	r2, r1, r2
 800815e:	4013      	ands	r3, r2
 8008160:	2b00      	cmp	r3, #0
 8008162:	d00a      	beq.n	800817a <HAL_RCC_OscConfig+0x3fa>
 8008164:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008168:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 800816c:	681b      	ldr	r3, [r3, #0]
 800816e:	68db      	ldr	r3, [r3, #12]
 8008170:	2b01      	cmp	r3, #1
 8008172:	d002      	beq.n	800817a <HAL_RCC_OscConfig+0x3fa>
      {
        return HAL_ERROR;
 8008174:	2301      	movs	r3, #1
 8008176:	f000 be5b 	b.w	8008e30 <HAL_RCC_OscConfig+0x10b0>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800817a:	4b77      	ldr	r3, [pc, #476]	; (8008358 <HAL_RCC_OscConfig+0x5d8>)
 800817c:	681b      	ldr	r3, [r3, #0]
 800817e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8008182:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008186:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 800818a:	681b      	ldr	r3, [r3, #0]
 800818c:	691b      	ldr	r3, [r3, #16]
 800818e:	21f8      	movs	r1, #248	; 0xf8
 8008190:	f8c7 1174 	str.w	r1, [r7, #372]	; 0x174
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8008194:	f8d7 1174 	ldr.w	r1, [r7, #372]	; 0x174
 8008198:	fa91 f1a1 	rbit	r1, r1
 800819c:	f8c7 1170 	str.w	r1, [r7, #368]	; 0x170
  return result;
 80081a0:	f8d7 1170 	ldr.w	r1, [r7, #368]	; 0x170
 80081a4:	fab1 f181 	clz	r1, r1
 80081a8:	b2c9      	uxtb	r1, r1
 80081aa:	408b      	lsls	r3, r1
 80081ac:	496a      	ldr	r1, [pc, #424]	; (8008358 <HAL_RCC_OscConfig+0x5d8>)
 80081ae:	4313      	orrs	r3, r2
 80081b0:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80081b2:	e100      	b.n	80083b6 <HAL_RCC_OscConfig+0x636>
      }
    }
    else
    {
      /* Check the HSI State */
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 80081b4:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80081b8:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 80081bc:	681b      	ldr	r3, [r3, #0]
 80081be:	68db      	ldr	r3, [r3, #12]
 80081c0:	2b00      	cmp	r3, #0
 80081c2:	f000 8089 	beq.w	80082d8 <HAL_RCC_OscConfig+0x558>
 80081c6:	2301      	movs	r3, #1
 80081c8:	f8c7 316c 	str.w	r3, [r7, #364]	; 0x16c
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80081cc:	f8d7 316c 	ldr.w	r3, [r7, #364]	; 0x16c
 80081d0:	fa93 f3a3 	rbit	r3, r3
 80081d4:	f8c7 3168 	str.w	r3, [r7, #360]	; 0x168
  return result;
 80081d8:	f8d7 3168 	ldr.w	r3, [r7, #360]	; 0x168
      {
       /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 80081dc:	fab3 f383 	clz	r3, r3
 80081e0:	b2db      	uxtb	r3, r3
 80081e2:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 80081e6:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 80081ea:	009b      	lsls	r3, r3, #2
 80081ec:	461a      	mov	r2, r3
 80081ee:	2301      	movs	r3, #1
 80081f0:	6013      	str	r3, [r2, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80081f2:	f7ff fb49 	bl	8007888 <HAL_GetTick>
 80081f6:	4603      	mov	r3, r0
 80081f8:	f8c7 3200 	str.w	r3, [r7, #512]	; 0x200
        
        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80081fc:	e00a      	b.n	8008214 <HAL_RCC_OscConfig+0x494>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80081fe:	f7ff fb43 	bl	8007888 <HAL_GetTick>
 8008202:	4602      	mov	r2, r0
 8008204:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8008208:	1ad3      	subs	r3, r2, r3
 800820a:	2b02      	cmp	r3, #2
 800820c:	d902      	bls.n	8008214 <HAL_RCC_OscConfig+0x494>
          {
            return HAL_TIMEOUT;
 800820e:	2303      	movs	r3, #3
 8008210:	f000 be0e 	b.w	8008e30 <HAL_RCC_OscConfig+0x10b0>
 8008214:	2302      	movs	r3, #2
 8008216:	f8c7 3164 	str.w	r3, [r7, #356]	; 0x164
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800821a:	f8d7 3164 	ldr.w	r3, [r7, #356]	; 0x164
 800821e:	fa93 f3a3 	rbit	r3, r3
 8008222:	f8c7 3160 	str.w	r3, [r7, #352]	; 0x160
  return result;
 8008226:	f8d7 3160 	ldr.w	r3, [r7, #352]	; 0x160
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800822a:	fab3 f383 	clz	r3, r3
 800822e:	b2db      	uxtb	r3, r3
 8008230:	095b      	lsrs	r3, r3, #5
 8008232:	b2db      	uxtb	r3, r3
 8008234:	f043 0301 	orr.w	r3, r3, #1
 8008238:	b2db      	uxtb	r3, r3
 800823a:	2b01      	cmp	r3, #1
 800823c:	d102      	bne.n	8008244 <HAL_RCC_OscConfig+0x4c4>
 800823e:	4b46      	ldr	r3, [pc, #280]	; (8008358 <HAL_RCC_OscConfig+0x5d8>)
 8008240:	681b      	ldr	r3, [r3, #0]
 8008242:	e013      	b.n	800826c <HAL_RCC_OscConfig+0x4ec>
 8008244:	2302      	movs	r3, #2
 8008246:	f8c7 315c 	str.w	r3, [r7, #348]	; 0x15c
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800824a:	f8d7 315c 	ldr.w	r3, [r7, #348]	; 0x15c
 800824e:	fa93 f3a3 	rbit	r3, r3
 8008252:	f8c7 3158 	str.w	r3, [r7, #344]	; 0x158
 8008256:	2302      	movs	r3, #2
 8008258:	f8c7 3154 	str.w	r3, [r7, #340]	; 0x154
 800825c:	f8d7 3154 	ldr.w	r3, [r7, #340]	; 0x154
 8008260:	fa93 f3a3 	rbit	r3, r3
 8008264:	f8c7 3150 	str.w	r3, [r7, #336]	; 0x150
 8008268:	4b3b      	ldr	r3, [pc, #236]	; (8008358 <HAL_RCC_OscConfig+0x5d8>)
 800826a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800826c:	2202      	movs	r2, #2
 800826e:	f8c7 214c 	str.w	r2, [r7, #332]	; 0x14c
 8008272:	f8d7 214c 	ldr.w	r2, [r7, #332]	; 0x14c
 8008276:	fa92 f2a2 	rbit	r2, r2
 800827a:	f8c7 2148 	str.w	r2, [r7, #328]	; 0x148
  return result;
 800827e:	f8d7 2148 	ldr.w	r2, [r7, #328]	; 0x148
 8008282:	fab2 f282 	clz	r2, r2
 8008286:	b2d2      	uxtb	r2, r2
 8008288:	f042 0220 	orr.w	r2, r2, #32
 800828c:	b2d2      	uxtb	r2, r2
 800828e:	f002 021f 	and.w	r2, r2, #31
 8008292:	2101      	movs	r1, #1
 8008294:	fa01 f202 	lsl.w	r2, r1, r2
 8008298:	4013      	ands	r3, r2
 800829a:	2b00      	cmp	r3, #0
 800829c:	d0af      	beq.n	80081fe <HAL_RCC_OscConfig+0x47e>
          }
        }
                
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800829e:	4b2e      	ldr	r3, [pc, #184]	; (8008358 <HAL_RCC_OscConfig+0x5d8>)
 80082a0:	681b      	ldr	r3, [r3, #0]
 80082a2:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80082a6:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80082aa:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 80082ae:	681b      	ldr	r3, [r3, #0]
 80082b0:	691b      	ldr	r3, [r3, #16]
 80082b2:	21f8      	movs	r1, #248	; 0xf8
 80082b4:	f8c7 1144 	str.w	r1, [r7, #324]	; 0x144
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80082b8:	f8d7 1144 	ldr.w	r1, [r7, #324]	; 0x144
 80082bc:	fa91 f1a1 	rbit	r1, r1
 80082c0:	f8c7 1140 	str.w	r1, [r7, #320]	; 0x140
  return result;
 80082c4:	f8d7 1140 	ldr.w	r1, [r7, #320]	; 0x140
 80082c8:	fab1 f181 	clz	r1, r1
 80082cc:	b2c9      	uxtb	r1, r1
 80082ce:	408b      	lsls	r3, r1
 80082d0:	4921      	ldr	r1, [pc, #132]	; (8008358 <HAL_RCC_OscConfig+0x5d8>)
 80082d2:	4313      	orrs	r3, r2
 80082d4:	600b      	str	r3, [r1, #0]
 80082d6:	e06e      	b.n	80083b6 <HAL_RCC_OscConfig+0x636>
 80082d8:	2301      	movs	r3, #1
 80082da:	f8c7 313c 	str.w	r3, [r7, #316]	; 0x13c
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80082de:	f8d7 313c 	ldr.w	r3, [r7, #316]	; 0x13c
 80082e2:	fa93 f3a3 	rbit	r3, r3
 80082e6:	f8c7 3138 	str.w	r3, [r7, #312]	; 0x138
  return result;
 80082ea:	f8d7 3138 	ldr.w	r3, [r7, #312]	; 0x138
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80082ee:	fab3 f383 	clz	r3, r3
 80082f2:	b2db      	uxtb	r3, r3
 80082f4:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 80082f8:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 80082fc:	009b      	lsls	r3, r3, #2
 80082fe:	461a      	mov	r2, r3
 8008300:	2300      	movs	r3, #0
 8008302:	6013      	str	r3, [r2, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8008304:	f7ff fac0 	bl	8007888 <HAL_GetTick>
 8008308:	4603      	mov	r3, r0
 800830a:	f8c7 3200 	str.w	r3, [r7, #512]	; 0x200
        
        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800830e:	e00a      	b.n	8008326 <HAL_RCC_OscConfig+0x5a6>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8008310:	f7ff faba 	bl	8007888 <HAL_GetTick>
 8008314:	4602      	mov	r2, r0
 8008316:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 800831a:	1ad3      	subs	r3, r2, r3
 800831c:	2b02      	cmp	r3, #2
 800831e:	d902      	bls.n	8008326 <HAL_RCC_OscConfig+0x5a6>
          {
            return HAL_TIMEOUT;
 8008320:	2303      	movs	r3, #3
 8008322:	f000 bd85 	b.w	8008e30 <HAL_RCC_OscConfig+0x10b0>
 8008326:	2302      	movs	r3, #2
 8008328:	f8c7 3134 	str.w	r3, [r7, #308]	; 0x134
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800832c:	f8d7 3134 	ldr.w	r3, [r7, #308]	; 0x134
 8008330:	fa93 f3a3 	rbit	r3, r3
 8008334:	f8c7 3130 	str.w	r3, [r7, #304]	; 0x130
  return result;
 8008338:	f8d7 3130 	ldr.w	r3, [r7, #304]	; 0x130
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800833c:	fab3 f383 	clz	r3, r3
 8008340:	b2db      	uxtb	r3, r3
 8008342:	095b      	lsrs	r3, r3, #5
 8008344:	b2db      	uxtb	r3, r3
 8008346:	f043 0301 	orr.w	r3, r3, #1
 800834a:	b2db      	uxtb	r3, r3
 800834c:	2b01      	cmp	r3, #1
 800834e:	d105      	bne.n	800835c <HAL_RCC_OscConfig+0x5dc>
 8008350:	4b01      	ldr	r3, [pc, #4]	; (8008358 <HAL_RCC_OscConfig+0x5d8>)
 8008352:	681b      	ldr	r3, [r3, #0]
 8008354:	e016      	b.n	8008384 <HAL_RCC_OscConfig+0x604>
 8008356:	bf00      	nop
 8008358:	40021000 	.word	0x40021000
 800835c:	2302      	movs	r3, #2
 800835e:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8008362:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8008366:	fa93 f3a3 	rbit	r3, r3
 800836a:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 800836e:	2302      	movs	r3, #2
 8008370:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
 8008374:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 8008378:	fa93 f3a3 	rbit	r3, r3
 800837c:	f8c7 3120 	str.w	r3, [r7, #288]	; 0x120
 8008380:	4bc0      	ldr	r3, [pc, #768]	; (8008684 <HAL_RCC_OscConfig+0x904>)
 8008382:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008384:	2202      	movs	r2, #2
 8008386:	f8c7 211c 	str.w	r2, [r7, #284]	; 0x11c
 800838a:	f8d7 211c 	ldr.w	r2, [r7, #284]	; 0x11c
 800838e:	fa92 f2a2 	rbit	r2, r2
 8008392:	f8c7 2118 	str.w	r2, [r7, #280]	; 0x118
  return result;
 8008396:	f8d7 2118 	ldr.w	r2, [r7, #280]	; 0x118
 800839a:	fab2 f282 	clz	r2, r2
 800839e:	b2d2      	uxtb	r2, r2
 80083a0:	f042 0220 	orr.w	r2, r2, #32
 80083a4:	b2d2      	uxtb	r2, r2
 80083a6:	f002 021f 	and.w	r2, r2, #31
 80083aa:	2101      	movs	r1, #1
 80083ac:	fa01 f202 	lsl.w	r2, r1, r2
 80083b0:	4013      	ands	r3, r2
 80083b2:	2b00      	cmp	r3, #0
 80083b4:	d1ac      	bne.n	8008310 <HAL_RCC_OscConfig+0x590>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80083b6:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80083ba:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 80083be:	681b      	ldr	r3, [r3, #0]
 80083c0:	681b      	ldr	r3, [r3, #0]
 80083c2:	f003 0308 	and.w	r3, r3, #8
 80083c6:	2b00      	cmp	r3, #0
 80083c8:	f000 8115 	beq.w	80085f6 <HAL_RCC_OscConfig+0x876>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
    
    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 80083cc:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80083d0:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 80083d4:	681b      	ldr	r3, [r3, #0]
 80083d6:	695b      	ldr	r3, [r3, #20]
 80083d8:	2b00      	cmp	r3, #0
 80083da:	d07d      	beq.n	80084d8 <HAL_RCC_OscConfig+0x758>
 80083dc:	2301      	movs	r3, #1
 80083de:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80083e2:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80083e6:	fa93 f3a3 	rbit	r3, r3
 80083ea:	f8c7 3110 	str.w	r3, [r7, #272]	; 0x110
  return result;
 80083ee:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80083f2:	fab3 f383 	clz	r3, r3
 80083f6:	b2db      	uxtb	r3, r3
 80083f8:	461a      	mov	r2, r3
 80083fa:	4ba3      	ldr	r3, [pc, #652]	; (8008688 <HAL_RCC_OscConfig+0x908>)
 80083fc:	4413      	add	r3, r2
 80083fe:	009b      	lsls	r3, r3, #2
 8008400:	461a      	mov	r2, r3
 8008402:	2301      	movs	r3, #1
 8008404:	6013      	str	r3, [r2, #0]
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8008406:	f7ff fa3f 	bl	8007888 <HAL_GetTick>
 800840a:	4603      	mov	r3, r0
 800840c:	f8c7 3200 	str.w	r3, [r7, #512]	; 0x200
      
      /* Wait till LSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8008410:	e00a      	b.n	8008428 <HAL_RCC_OscConfig+0x6a8>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8008412:	f7ff fa39 	bl	8007888 <HAL_GetTick>
 8008416:	4602      	mov	r2, r0
 8008418:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 800841c:	1ad3      	subs	r3, r2, r3
 800841e:	2b02      	cmp	r3, #2
 8008420:	d902      	bls.n	8008428 <HAL_RCC_OscConfig+0x6a8>
        {
          return HAL_TIMEOUT;
 8008422:	2303      	movs	r3, #3
 8008424:	f000 bd04 	b.w	8008e30 <HAL_RCC_OscConfig+0x10b0>
 8008428:	2302      	movs	r3, #2
 800842a:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800842e:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8008432:	fa93 f2a3 	rbit	r2, r3
 8008436:	f507 7302 	add.w	r3, r7, #520	; 0x208
 800843a:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
 800843e:	601a      	str	r2, [r3, #0]
 8008440:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008444:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8008448:	2202      	movs	r2, #2
 800844a:	601a      	str	r2, [r3, #0]
 800844c:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008450:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8008454:	681b      	ldr	r3, [r3, #0]
 8008456:	fa93 f2a3 	rbit	r2, r3
 800845a:	f507 7302 	add.w	r3, r7, #520	; 0x208
 800845e:	f5a3 7384 	sub.w	r3, r3, #264	; 0x108
 8008462:	601a      	str	r2, [r3, #0]
 8008464:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008468:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 800846c:	2202      	movs	r2, #2
 800846e:	601a      	str	r2, [r3, #0]
 8008470:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008474:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 8008478:	681b      	ldr	r3, [r3, #0]
 800847a:	fa93 f2a3 	rbit	r2, r3
 800847e:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008482:	f5a3 7388 	sub.w	r3, r3, #272	; 0x110
 8008486:	601a      	str	r2, [r3, #0]
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8008488:	4b7e      	ldr	r3, [pc, #504]	; (8008684 <HAL_RCC_OscConfig+0x904>)
 800848a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800848c:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008490:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8008494:	2102      	movs	r1, #2
 8008496:	6019      	str	r1, [r3, #0]
 8008498:	f507 7302 	add.w	r3, r7, #520	; 0x208
 800849c:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 80084a0:	681b      	ldr	r3, [r3, #0]
 80084a2:	fa93 f1a3 	rbit	r1, r3
 80084a6:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80084aa:	f5a3 738c 	sub.w	r3, r3, #280	; 0x118
 80084ae:	6019      	str	r1, [r3, #0]
  return result;
 80084b0:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80084b4:	f5a3 738c 	sub.w	r3, r3, #280	; 0x118
 80084b8:	681b      	ldr	r3, [r3, #0]
 80084ba:	fab3 f383 	clz	r3, r3
 80084be:	b2db      	uxtb	r3, r3
 80084c0:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 80084c4:	b2db      	uxtb	r3, r3
 80084c6:	f003 031f 	and.w	r3, r3, #31
 80084ca:	2101      	movs	r1, #1
 80084cc:	fa01 f303 	lsl.w	r3, r1, r3
 80084d0:	4013      	ands	r3, r2
 80084d2:	2b00      	cmp	r3, #0
 80084d4:	d09d      	beq.n	8008412 <HAL_RCC_OscConfig+0x692>
 80084d6:	e08e      	b.n	80085f6 <HAL_RCC_OscConfig+0x876>
 80084d8:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80084dc:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 80084e0:	2201      	movs	r2, #1
 80084e2:	601a      	str	r2, [r3, #0]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80084e4:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80084e8:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 80084ec:	681b      	ldr	r3, [r3, #0]
 80084ee:	fa93 f2a3 	rbit	r2, r3
 80084f2:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80084f6:	f5a3 7390 	sub.w	r3, r3, #288	; 0x120
 80084fa:	601a      	str	r2, [r3, #0]
  return result;
 80084fc:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008500:	f5a3 7390 	sub.w	r3, r3, #288	; 0x120
 8008504:	681b      	ldr	r3, [r3, #0]
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8008506:	fab3 f383 	clz	r3, r3
 800850a:	b2db      	uxtb	r3, r3
 800850c:	461a      	mov	r2, r3
 800850e:	4b5e      	ldr	r3, [pc, #376]	; (8008688 <HAL_RCC_OscConfig+0x908>)
 8008510:	4413      	add	r3, r2
 8008512:	009b      	lsls	r3, r3, #2
 8008514:	461a      	mov	r2, r3
 8008516:	2300      	movs	r3, #0
 8008518:	6013      	str	r3, [r2, #0]
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800851a:	f7ff f9b5 	bl	8007888 <HAL_GetTick>
 800851e:	4603      	mov	r3, r0
 8008520:	f8c7 3200 	str.w	r3, [r7, #512]	; 0x200
      
      /* Wait till LSI is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8008524:	e00a      	b.n	800853c <HAL_RCC_OscConfig+0x7bc>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8008526:	f7ff f9af 	bl	8007888 <HAL_GetTick>
 800852a:	4602      	mov	r2, r0
 800852c:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8008530:	1ad3      	subs	r3, r2, r3
 8008532:	2b02      	cmp	r3, #2
 8008534:	d902      	bls.n	800853c <HAL_RCC_OscConfig+0x7bc>
        {
          return HAL_TIMEOUT;
 8008536:	2303      	movs	r3, #3
 8008538:	f000 bc7a 	b.w	8008e30 <HAL_RCC_OscConfig+0x10b0>
 800853c:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008540:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 8008544:	2202      	movs	r2, #2
 8008546:	601a      	str	r2, [r3, #0]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8008548:	f507 7302 	add.w	r3, r7, #520	; 0x208
 800854c:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 8008550:	681b      	ldr	r3, [r3, #0]
 8008552:	fa93 f2a3 	rbit	r2, r3
 8008556:	f507 7302 	add.w	r3, r7, #520	; 0x208
 800855a:	f5a3 7394 	sub.w	r3, r3, #296	; 0x128
 800855e:	601a      	str	r2, [r3, #0]
 8008560:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008564:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8008568:	2202      	movs	r2, #2
 800856a:	601a      	str	r2, [r3, #0]
 800856c:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008570:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8008574:	681b      	ldr	r3, [r3, #0]
 8008576:	fa93 f2a3 	rbit	r2, r3
 800857a:	f507 7302 	add.w	r3, r7, #520	; 0x208
 800857e:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8008582:	601a      	str	r2, [r3, #0]
 8008584:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008588:	f5a3 739a 	sub.w	r3, r3, #308	; 0x134
 800858c:	2202      	movs	r2, #2
 800858e:	601a      	str	r2, [r3, #0]
 8008590:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008594:	f5a3 739a 	sub.w	r3, r3, #308	; 0x134
 8008598:	681b      	ldr	r3, [r3, #0]
 800859a:	fa93 f2a3 	rbit	r2, r3
 800859e:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80085a2:	f5a3 739c 	sub.w	r3, r3, #312	; 0x138
 80085a6:	601a      	str	r2, [r3, #0]
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80085a8:	4b36      	ldr	r3, [pc, #216]	; (8008684 <HAL_RCC_OscConfig+0x904>)
 80085aa:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80085ac:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80085b0:	f5a3 739e 	sub.w	r3, r3, #316	; 0x13c
 80085b4:	2102      	movs	r1, #2
 80085b6:	6019      	str	r1, [r3, #0]
 80085b8:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80085bc:	f5a3 739e 	sub.w	r3, r3, #316	; 0x13c
 80085c0:	681b      	ldr	r3, [r3, #0]
 80085c2:	fa93 f1a3 	rbit	r1, r3
 80085c6:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80085ca:	f5a3 73a0 	sub.w	r3, r3, #320	; 0x140
 80085ce:	6019      	str	r1, [r3, #0]
  return result;
 80085d0:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80085d4:	f5a3 73a0 	sub.w	r3, r3, #320	; 0x140
 80085d8:	681b      	ldr	r3, [r3, #0]
 80085da:	fab3 f383 	clz	r3, r3
 80085de:	b2db      	uxtb	r3, r3
 80085e0:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 80085e4:	b2db      	uxtb	r3, r3
 80085e6:	f003 031f 	and.w	r3, r3, #31
 80085ea:	2101      	movs	r1, #1
 80085ec:	fa01 f303 	lsl.w	r3, r1, r3
 80085f0:	4013      	ands	r3, r2
 80085f2:	2b00      	cmp	r3, #0
 80085f4:	d197      	bne.n	8008526 <HAL_RCC_OscConfig+0x7a6>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80085f6:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80085fa:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 80085fe:	681b      	ldr	r3, [r3, #0]
 8008600:	681b      	ldr	r3, [r3, #0]
 8008602:	f003 0304 	and.w	r3, r3, #4
 8008606:	2b00      	cmp	r3, #0
 8008608:	f000 81a7 	beq.w	800895a <HAL_RCC_OscConfig+0xbda>
  {
    FlagStatus       pwrclkchanged = RESET;
 800860c:	2300      	movs	r3, #0
 800860e:	f887 3207 	strb.w	r3, [r7, #519]	; 0x207
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8008612:	4b1c      	ldr	r3, [pc, #112]	; (8008684 <HAL_RCC_OscConfig+0x904>)
 8008614:	69db      	ldr	r3, [r3, #28]
 8008616:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800861a:	2b00      	cmp	r3, #0
 800861c:	d116      	bne.n	800864c <HAL_RCC_OscConfig+0x8cc>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 800861e:	4b19      	ldr	r3, [pc, #100]	; (8008684 <HAL_RCC_OscConfig+0x904>)
 8008620:	69db      	ldr	r3, [r3, #28]
 8008622:	4a18      	ldr	r2, [pc, #96]	; (8008684 <HAL_RCC_OscConfig+0x904>)
 8008624:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8008628:	61d3      	str	r3, [r2, #28]
 800862a:	4b16      	ldr	r3, [pc, #88]	; (8008684 <HAL_RCC_OscConfig+0x904>)
 800862c:	69db      	ldr	r3, [r3, #28]
 800862e:	f003 5280 	and.w	r2, r3, #268435456	; 0x10000000
 8008632:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008636:	f5a3 73fe 	sub.w	r3, r3, #508	; 0x1fc
 800863a:	601a      	str	r2, [r3, #0]
 800863c:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008640:	f5a3 73fe 	sub.w	r3, r3, #508	; 0x1fc
 8008644:	681b      	ldr	r3, [r3, #0]
      pwrclkchanged = SET;
 8008646:	2301      	movs	r3, #1
 8008648:	f887 3207 	strb.w	r3, [r7, #519]	; 0x207
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800864c:	4b0f      	ldr	r3, [pc, #60]	; (800868c <HAL_RCC_OscConfig+0x90c>)
 800864e:	681b      	ldr	r3, [r3, #0]
 8008650:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008654:	2b00      	cmp	r3, #0
 8008656:	d121      	bne.n	800869c <HAL_RCC_OscConfig+0x91c>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8008658:	4b0c      	ldr	r3, [pc, #48]	; (800868c <HAL_RCC_OscConfig+0x90c>)
 800865a:	681b      	ldr	r3, [r3, #0]
 800865c:	4a0b      	ldr	r2, [pc, #44]	; (800868c <HAL_RCC_OscConfig+0x90c>)
 800865e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008662:	6013      	str	r3, [r2, #0]
      
      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8008664:	f7ff f910 	bl	8007888 <HAL_GetTick>
 8008668:	4603      	mov	r3, r0
 800866a:	f8c7 3200 	str.w	r3, [r7, #512]	; 0x200

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800866e:	e00f      	b.n	8008690 <HAL_RCC_OscConfig+0x910>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8008670:	f7ff f90a 	bl	8007888 <HAL_GetTick>
 8008674:	4602      	mov	r2, r0
 8008676:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 800867a:	1ad3      	subs	r3, r2, r3
 800867c:	2b64      	cmp	r3, #100	; 0x64
 800867e:	d907      	bls.n	8008690 <HAL_RCC_OscConfig+0x910>
        {
          return HAL_TIMEOUT;
 8008680:	2303      	movs	r3, #3
 8008682:	e3d5      	b.n	8008e30 <HAL_RCC_OscConfig+0x10b0>
 8008684:	40021000 	.word	0x40021000
 8008688:	10908120 	.word	0x10908120
 800868c:	40007000 	.word	0x40007000
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8008690:	4b8e      	ldr	r3, [pc, #568]	; (80088cc <HAL_RCC_OscConfig+0xb4c>)
 8008692:	681b      	ldr	r3, [r3, #0]
 8008694:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008698:	2b00      	cmp	r3, #0
 800869a:	d0e9      	beq.n	8008670 <HAL_RCC_OscConfig+0x8f0>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800869c:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80086a0:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 80086a4:	681b      	ldr	r3, [r3, #0]
 80086a6:	689b      	ldr	r3, [r3, #8]
 80086a8:	2b01      	cmp	r3, #1
 80086aa:	d106      	bne.n	80086ba <HAL_RCC_OscConfig+0x93a>
 80086ac:	4b88      	ldr	r3, [pc, #544]	; (80088d0 <HAL_RCC_OscConfig+0xb50>)
 80086ae:	6a1b      	ldr	r3, [r3, #32]
 80086b0:	4a87      	ldr	r2, [pc, #540]	; (80088d0 <HAL_RCC_OscConfig+0xb50>)
 80086b2:	f043 0301 	orr.w	r3, r3, #1
 80086b6:	6213      	str	r3, [r2, #32]
 80086b8:	e035      	b.n	8008726 <HAL_RCC_OscConfig+0x9a6>
 80086ba:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80086be:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 80086c2:	681b      	ldr	r3, [r3, #0]
 80086c4:	689b      	ldr	r3, [r3, #8]
 80086c6:	2b00      	cmp	r3, #0
 80086c8:	d10c      	bne.n	80086e4 <HAL_RCC_OscConfig+0x964>
 80086ca:	4b81      	ldr	r3, [pc, #516]	; (80088d0 <HAL_RCC_OscConfig+0xb50>)
 80086cc:	6a1b      	ldr	r3, [r3, #32]
 80086ce:	4a80      	ldr	r2, [pc, #512]	; (80088d0 <HAL_RCC_OscConfig+0xb50>)
 80086d0:	f023 0301 	bic.w	r3, r3, #1
 80086d4:	6213      	str	r3, [r2, #32]
 80086d6:	4b7e      	ldr	r3, [pc, #504]	; (80088d0 <HAL_RCC_OscConfig+0xb50>)
 80086d8:	6a1b      	ldr	r3, [r3, #32]
 80086da:	4a7d      	ldr	r2, [pc, #500]	; (80088d0 <HAL_RCC_OscConfig+0xb50>)
 80086dc:	f023 0304 	bic.w	r3, r3, #4
 80086e0:	6213      	str	r3, [r2, #32]
 80086e2:	e020      	b.n	8008726 <HAL_RCC_OscConfig+0x9a6>
 80086e4:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80086e8:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 80086ec:	681b      	ldr	r3, [r3, #0]
 80086ee:	689b      	ldr	r3, [r3, #8]
 80086f0:	2b05      	cmp	r3, #5
 80086f2:	d10c      	bne.n	800870e <HAL_RCC_OscConfig+0x98e>
 80086f4:	4b76      	ldr	r3, [pc, #472]	; (80088d0 <HAL_RCC_OscConfig+0xb50>)
 80086f6:	6a1b      	ldr	r3, [r3, #32]
 80086f8:	4a75      	ldr	r2, [pc, #468]	; (80088d0 <HAL_RCC_OscConfig+0xb50>)
 80086fa:	f043 0304 	orr.w	r3, r3, #4
 80086fe:	6213      	str	r3, [r2, #32]
 8008700:	4b73      	ldr	r3, [pc, #460]	; (80088d0 <HAL_RCC_OscConfig+0xb50>)
 8008702:	6a1b      	ldr	r3, [r3, #32]
 8008704:	4a72      	ldr	r2, [pc, #456]	; (80088d0 <HAL_RCC_OscConfig+0xb50>)
 8008706:	f043 0301 	orr.w	r3, r3, #1
 800870a:	6213      	str	r3, [r2, #32]
 800870c:	e00b      	b.n	8008726 <HAL_RCC_OscConfig+0x9a6>
 800870e:	4b70      	ldr	r3, [pc, #448]	; (80088d0 <HAL_RCC_OscConfig+0xb50>)
 8008710:	6a1b      	ldr	r3, [r3, #32]
 8008712:	4a6f      	ldr	r2, [pc, #444]	; (80088d0 <HAL_RCC_OscConfig+0xb50>)
 8008714:	f023 0301 	bic.w	r3, r3, #1
 8008718:	6213      	str	r3, [r2, #32]
 800871a:	4b6d      	ldr	r3, [pc, #436]	; (80088d0 <HAL_RCC_OscConfig+0xb50>)
 800871c:	6a1b      	ldr	r3, [r3, #32]
 800871e:	4a6c      	ldr	r2, [pc, #432]	; (80088d0 <HAL_RCC_OscConfig+0xb50>)
 8008720:	f023 0304 	bic.w	r3, r3, #4
 8008724:	6213      	str	r3, [r2, #32]
    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8008726:	f507 7302 	add.w	r3, r7, #520	; 0x208
 800872a:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 800872e:	681b      	ldr	r3, [r3, #0]
 8008730:	689b      	ldr	r3, [r3, #8]
 8008732:	2b00      	cmp	r3, #0
 8008734:	f000 8082 	beq.w	800883c <HAL_RCC_OscConfig+0xabc>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8008738:	f7ff f8a6 	bl	8007888 <HAL_GetTick>
 800873c:	4603      	mov	r3, r0
 800873e:	f8c7 3200 	str.w	r3, [r7, #512]	; 0x200
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008742:	e00b      	b.n	800875c <HAL_RCC_OscConfig+0x9dc>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008744:	f7ff f8a0 	bl	8007888 <HAL_GetTick>
 8008748:	4602      	mov	r2, r0
 800874a:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 800874e:	1ad3      	subs	r3, r2, r3
 8008750:	f241 3288 	movw	r2, #5000	; 0x1388
 8008754:	4293      	cmp	r3, r2
 8008756:	d901      	bls.n	800875c <HAL_RCC_OscConfig+0x9dc>
        {
          return HAL_TIMEOUT;
 8008758:	2303      	movs	r3, #3
 800875a:	e369      	b.n	8008e30 <HAL_RCC_OscConfig+0x10b0>
 800875c:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008760:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 8008764:	2202      	movs	r2, #2
 8008766:	601a      	str	r2, [r3, #0]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8008768:	f507 7302 	add.w	r3, r7, #520	; 0x208
 800876c:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 8008770:	681b      	ldr	r3, [r3, #0]
 8008772:	fa93 f2a3 	rbit	r2, r3
 8008776:	f507 7302 	add.w	r3, r7, #520	; 0x208
 800877a:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 800877e:	601a      	str	r2, [r3, #0]
 8008780:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008784:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8008788:	2202      	movs	r2, #2
 800878a:	601a      	str	r2, [r3, #0]
 800878c:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008790:	f5a3 73a6 	sub.w	r3, r3, #332	; 0x14c
 8008794:	681b      	ldr	r3, [r3, #0]
 8008796:	fa93 f2a3 	rbit	r2, r3
 800879a:	f507 7302 	add.w	r3, r7, #520	; 0x208
 800879e:	f5a3 73a8 	sub.w	r3, r3, #336	; 0x150
 80087a2:	601a      	str	r2, [r3, #0]
  return result;
 80087a4:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80087a8:	f5a3 73a8 	sub.w	r3, r3, #336	; 0x150
 80087ac:	681b      	ldr	r3, [r3, #0]
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80087ae:	fab3 f383 	clz	r3, r3
 80087b2:	b2db      	uxtb	r3, r3
 80087b4:	095b      	lsrs	r3, r3, #5
 80087b6:	b2db      	uxtb	r3, r3
 80087b8:	f043 0302 	orr.w	r3, r3, #2
 80087bc:	b2db      	uxtb	r3, r3
 80087be:	2b02      	cmp	r3, #2
 80087c0:	d102      	bne.n	80087c8 <HAL_RCC_OscConfig+0xa48>
 80087c2:	4b43      	ldr	r3, [pc, #268]	; (80088d0 <HAL_RCC_OscConfig+0xb50>)
 80087c4:	6a1b      	ldr	r3, [r3, #32]
 80087c6:	e013      	b.n	80087f0 <HAL_RCC_OscConfig+0xa70>
 80087c8:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80087cc:	f5a3 73aa 	sub.w	r3, r3, #340	; 0x154
 80087d0:	2202      	movs	r2, #2
 80087d2:	601a      	str	r2, [r3, #0]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80087d4:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80087d8:	f5a3 73aa 	sub.w	r3, r3, #340	; 0x154
 80087dc:	681b      	ldr	r3, [r3, #0]
 80087de:	fa93 f2a3 	rbit	r2, r3
 80087e2:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80087e6:	f5a3 73ac 	sub.w	r3, r3, #344	; 0x158
 80087ea:	601a      	str	r2, [r3, #0]
 80087ec:	4b38      	ldr	r3, [pc, #224]	; (80088d0 <HAL_RCC_OscConfig+0xb50>)
 80087ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80087f0:	f507 7202 	add.w	r2, r7, #520	; 0x208
 80087f4:	f5a2 72ae 	sub.w	r2, r2, #348	; 0x15c
 80087f8:	2102      	movs	r1, #2
 80087fa:	6011      	str	r1, [r2, #0]
 80087fc:	f507 7202 	add.w	r2, r7, #520	; 0x208
 8008800:	f5a2 72ae 	sub.w	r2, r2, #348	; 0x15c
 8008804:	6812      	ldr	r2, [r2, #0]
 8008806:	fa92 f1a2 	rbit	r1, r2
 800880a:	f507 7202 	add.w	r2, r7, #520	; 0x208
 800880e:	f5a2 72b0 	sub.w	r2, r2, #352	; 0x160
 8008812:	6011      	str	r1, [r2, #0]
  return result;
 8008814:	f507 7202 	add.w	r2, r7, #520	; 0x208
 8008818:	f5a2 72b0 	sub.w	r2, r2, #352	; 0x160
 800881c:	6812      	ldr	r2, [r2, #0]
 800881e:	fab2 f282 	clz	r2, r2
 8008822:	b2d2      	uxtb	r2, r2
 8008824:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8008828:	b2d2      	uxtb	r2, r2
 800882a:	f002 021f 	and.w	r2, r2, #31
 800882e:	2101      	movs	r1, #1
 8008830:	fa01 f202 	lsl.w	r2, r1, r2
 8008834:	4013      	ands	r3, r2
 8008836:	2b00      	cmp	r3, #0
 8008838:	d084      	beq.n	8008744 <HAL_RCC_OscConfig+0x9c4>
 800883a:	e084      	b.n	8008946 <HAL_RCC_OscConfig+0xbc6>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800883c:	f7ff f824 	bl	8007888 <HAL_GetTick>
 8008840:	4603      	mov	r3, r0
 8008842:	f8c7 3200 	str.w	r3, [r7, #512]	; 0x200
      
      /* Wait till LSE is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8008846:	e00b      	b.n	8008860 <HAL_RCC_OscConfig+0xae0>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008848:	f7ff f81e 	bl	8007888 <HAL_GetTick>
 800884c:	4602      	mov	r2, r0
 800884e:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8008852:	1ad3      	subs	r3, r2, r3
 8008854:	f241 3288 	movw	r2, #5000	; 0x1388
 8008858:	4293      	cmp	r3, r2
 800885a:	d901      	bls.n	8008860 <HAL_RCC_OscConfig+0xae0>
        {
          return HAL_TIMEOUT;
 800885c:	2303      	movs	r3, #3
 800885e:	e2e7      	b.n	8008e30 <HAL_RCC_OscConfig+0x10b0>
 8008860:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008864:	f5a3 73b2 	sub.w	r3, r3, #356	; 0x164
 8008868:	2202      	movs	r2, #2
 800886a:	601a      	str	r2, [r3, #0]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800886c:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008870:	f5a3 73b2 	sub.w	r3, r3, #356	; 0x164
 8008874:	681b      	ldr	r3, [r3, #0]
 8008876:	fa93 f2a3 	rbit	r2, r3
 800887a:	f507 7302 	add.w	r3, r7, #520	; 0x208
 800887e:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
 8008882:	601a      	str	r2, [r3, #0]
 8008884:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008888:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 800888c:	2202      	movs	r2, #2
 800888e:	601a      	str	r2, [r3, #0]
 8008890:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008894:	f5a3 73b6 	sub.w	r3, r3, #364	; 0x16c
 8008898:	681b      	ldr	r3, [r3, #0]
 800889a:	fa93 f2a3 	rbit	r2, r3
 800889e:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80088a2:	f5a3 73b8 	sub.w	r3, r3, #368	; 0x170
 80088a6:	601a      	str	r2, [r3, #0]
  return result;
 80088a8:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80088ac:	f5a3 73b8 	sub.w	r3, r3, #368	; 0x170
 80088b0:	681b      	ldr	r3, [r3, #0]
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80088b2:	fab3 f383 	clz	r3, r3
 80088b6:	b2db      	uxtb	r3, r3
 80088b8:	095b      	lsrs	r3, r3, #5
 80088ba:	b2db      	uxtb	r3, r3
 80088bc:	f043 0302 	orr.w	r3, r3, #2
 80088c0:	b2db      	uxtb	r3, r3
 80088c2:	2b02      	cmp	r3, #2
 80088c4:	d106      	bne.n	80088d4 <HAL_RCC_OscConfig+0xb54>
 80088c6:	4b02      	ldr	r3, [pc, #8]	; (80088d0 <HAL_RCC_OscConfig+0xb50>)
 80088c8:	6a1b      	ldr	r3, [r3, #32]
 80088ca:	e017      	b.n	80088fc <HAL_RCC_OscConfig+0xb7c>
 80088cc:	40007000 	.word	0x40007000
 80088d0:	40021000 	.word	0x40021000
 80088d4:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80088d8:	f5a3 73ba 	sub.w	r3, r3, #372	; 0x174
 80088dc:	2202      	movs	r2, #2
 80088de:	601a      	str	r2, [r3, #0]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80088e0:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80088e4:	f5a3 73ba 	sub.w	r3, r3, #372	; 0x174
 80088e8:	681b      	ldr	r3, [r3, #0]
 80088ea:	fa93 f2a3 	rbit	r2, r3
 80088ee:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80088f2:	f5a3 73bc 	sub.w	r3, r3, #376	; 0x178
 80088f6:	601a      	str	r2, [r3, #0]
 80088f8:	4bb4      	ldr	r3, [pc, #720]	; (8008bcc <HAL_RCC_OscConfig+0xe4c>)
 80088fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80088fc:	f507 7202 	add.w	r2, r7, #520	; 0x208
 8008900:	f5a2 72be 	sub.w	r2, r2, #380	; 0x17c
 8008904:	2102      	movs	r1, #2
 8008906:	6011      	str	r1, [r2, #0]
 8008908:	f507 7202 	add.w	r2, r7, #520	; 0x208
 800890c:	f5a2 72be 	sub.w	r2, r2, #380	; 0x17c
 8008910:	6812      	ldr	r2, [r2, #0]
 8008912:	fa92 f1a2 	rbit	r1, r2
 8008916:	f507 7202 	add.w	r2, r7, #520	; 0x208
 800891a:	f5a2 72c0 	sub.w	r2, r2, #384	; 0x180
 800891e:	6011      	str	r1, [r2, #0]
  return result;
 8008920:	f507 7202 	add.w	r2, r7, #520	; 0x208
 8008924:	f5a2 72c0 	sub.w	r2, r2, #384	; 0x180
 8008928:	6812      	ldr	r2, [r2, #0]
 800892a:	fab2 f282 	clz	r2, r2
 800892e:	b2d2      	uxtb	r2, r2
 8008930:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8008934:	b2d2      	uxtb	r2, r2
 8008936:	f002 021f 	and.w	r2, r2, #31
 800893a:	2101      	movs	r1, #1
 800893c:	fa01 f202 	lsl.w	r2, r1, r2
 8008940:	4013      	ands	r3, r2
 8008942:	2b00      	cmp	r3, #0
 8008944:	d180      	bne.n	8008848 <HAL_RCC_OscConfig+0xac8>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8008946:	f897 3207 	ldrb.w	r3, [r7, #519]	; 0x207
 800894a:	2b01      	cmp	r3, #1
 800894c:	d105      	bne.n	800895a <HAL_RCC_OscConfig+0xbda>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 800894e:	4b9f      	ldr	r3, [pc, #636]	; (8008bcc <HAL_RCC_OscConfig+0xe4c>)
 8008950:	69db      	ldr	r3, [r3, #28]
 8008952:	4a9e      	ldr	r2, [pc, #632]	; (8008bcc <HAL_RCC_OscConfig+0xe4c>)
 8008954:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8008958:	61d3      	str	r3, [r2, #28]
  }

  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800895a:	f507 7302 	add.w	r3, r7, #520	; 0x208
 800895e:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 8008962:	681b      	ldr	r3, [r3, #0]
 8008964:	699b      	ldr	r3, [r3, #24]
 8008966:	2b00      	cmp	r3, #0
 8008968:	f000 8261 	beq.w	8008e2e <HAL_RCC_OscConfig+0x10ae>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 800896c:	4b97      	ldr	r3, [pc, #604]	; (8008bcc <HAL_RCC_OscConfig+0xe4c>)
 800896e:	685b      	ldr	r3, [r3, #4]
 8008970:	f003 030c 	and.w	r3, r3, #12
 8008974:	2b08      	cmp	r3, #8
 8008976:	f000 8222 	beq.w	8008dbe <HAL_RCC_OscConfig+0x103e>
    { 
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800897a:	f507 7302 	add.w	r3, r7, #520	; 0x208
 800897e:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 8008982:	681b      	ldr	r3, [r3, #0]
 8008984:	699b      	ldr	r3, [r3, #24]
 8008986:	2b02      	cmp	r3, #2
 8008988:	f040 8172 	bne.w	8008c70 <HAL_RCC_OscConfig+0xef0>
 800898c:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008990:	f5a3 73c2 	sub.w	r3, r3, #388	; 0x184
 8008994:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8008998:	601a      	str	r2, [r3, #0]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800899a:	f507 7302 	add.w	r3, r7, #520	; 0x208
 800899e:	f5a3 73c2 	sub.w	r3, r3, #388	; 0x184
 80089a2:	681b      	ldr	r3, [r3, #0]
 80089a4:	fa93 f2a3 	rbit	r2, r3
 80089a8:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80089ac:	f5a3 73c4 	sub.w	r3, r3, #392	; 0x188
 80089b0:	601a      	str	r2, [r3, #0]
  return result;
 80089b2:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80089b6:	f5a3 73c4 	sub.w	r3, r3, #392	; 0x188
 80089ba:	681b      	ldr	r3, [r3, #0]
#if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
        assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
#endif
  
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80089bc:	fab3 f383 	clz	r3, r3
 80089c0:	b2db      	uxtb	r3, r3
 80089c2:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 80089c6:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 80089ca:	009b      	lsls	r3, r3, #2
 80089cc:	461a      	mov	r2, r3
 80089ce:	2300      	movs	r3, #0
 80089d0:	6013      	str	r3, [r2, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80089d2:	f7fe ff59 	bl	8007888 <HAL_GetTick>
 80089d6:	4603      	mov	r3, r0
 80089d8:	f8c7 3200 	str.w	r3, [r7, #512]	; 0x200
        
        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80089dc:	e009      	b.n	80089f2 <HAL_RCC_OscConfig+0xc72>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80089de:	f7fe ff53 	bl	8007888 <HAL_GetTick>
 80089e2:	4602      	mov	r2, r0
 80089e4:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 80089e8:	1ad3      	subs	r3, r2, r3
 80089ea:	2b02      	cmp	r3, #2
 80089ec:	d901      	bls.n	80089f2 <HAL_RCC_OscConfig+0xc72>
          {
            return HAL_TIMEOUT;
 80089ee:	2303      	movs	r3, #3
 80089f0:	e21e      	b.n	8008e30 <HAL_RCC_OscConfig+0x10b0>
 80089f2:	f507 7302 	add.w	r3, r7, #520	; 0x208
 80089f6:	f5a3 73c6 	sub.w	r3, r3, #396	; 0x18c
 80089fa:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 80089fe:	601a      	str	r2, [r3, #0]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8008a00:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008a04:	f5a3 73c6 	sub.w	r3, r3, #396	; 0x18c
 8008a08:	681b      	ldr	r3, [r3, #0]
 8008a0a:	fa93 f2a3 	rbit	r2, r3
 8008a0e:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008a12:	f5a3 73c8 	sub.w	r3, r3, #400	; 0x190
 8008a16:	601a      	str	r2, [r3, #0]
  return result;
 8008a18:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008a1c:	f5a3 73c8 	sub.w	r3, r3, #400	; 0x190
 8008a20:	681b      	ldr	r3, [r3, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8008a22:	fab3 f383 	clz	r3, r3
 8008a26:	b2db      	uxtb	r3, r3
 8008a28:	095b      	lsrs	r3, r3, #5
 8008a2a:	b2db      	uxtb	r3, r3
 8008a2c:	f043 0301 	orr.w	r3, r3, #1
 8008a30:	b2db      	uxtb	r3, r3
 8008a32:	2b01      	cmp	r3, #1
 8008a34:	d102      	bne.n	8008a3c <HAL_RCC_OscConfig+0xcbc>
 8008a36:	4b65      	ldr	r3, [pc, #404]	; (8008bcc <HAL_RCC_OscConfig+0xe4c>)
 8008a38:	681b      	ldr	r3, [r3, #0]
 8008a3a:	e027      	b.n	8008a8c <HAL_RCC_OscConfig+0xd0c>
 8008a3c:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008a40:	f5a3 73ca 	sub.w	r3, r3, #404	; 0x194
 8008a44:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8008a48:	601a      	str	r2, [r3, #0]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8008a4a:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008a4e:	f5a3 73ca 	sub.w	r3, r3, #404	; 0x194
 8008a52:	681b      	ldr	r3, [r3, #0]
 8008a54:	fa93 f2a3 	rbit	r2, r3
 8008a58:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008a5c:	f5a3 73cc 	sub.w	r3, r3, #408	; 0x198
 8008a60:	601a      	str	r2, [r3, #0]
 8008a62:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008a66:	f5a3 73ce 	sub.w	r3, r3, #412	; 0x19c
 8008a6a:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8008a6e:	601a      	str	r2, [r3, #0]
 8008a70:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008a74:	f5a3 73ce 	sub.w	r3, r3, #412	; 0x19c
 8008a78:	681b      	ldr	r3, [r3, #0]
 8008a7a:	fa93 f2a3 	rbit	r2, r3
 8008a7e:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008a82:	f5a3 73d0 	sub.w	r3, r3, #416	; 0x1a0
 8008a86:	601a      	str	r2, [r3, #0]
 8008a88:	4b50      	ldr	r3, [pc, #320]	; (8008bcc <HAL_RCC_OscConfig+0xe4c>)
 8008a8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008a8c:	f507 7202 	add.w	r2, r7, #520	; 0x208
 8008a90:	f5a2 72d2 	sub.w	r2, r2, #420	; 0x1a4
 8008a94:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8008a98:	6011      	str	r1, [r2, #0]
 8008a9a:	f507 7202 	add.w	r2, r7, #520	; 0x208
 8008a9e:	f5a2 72d2 	sub.w	r2, r2, #420	; 0x1a4
 8008aa2:	6812      	ldr	r2, [r2, #0]
 8008aa4:	fa92 f1a2 	rbit	r1, r2
 8008aa8:	f507 7202 	add.w	r2, r7, #520	; 0x208
 8008aac:	f5a2 72d4 	sub.w	r2, r2, #424	; 0x1a8
 8008ab0:	6011      	str	r1, [r2, #0]
  return result;
 8008ab2:	f507 7202 	add.w	r2, r7, #520	; 0x208
 8008ab6:	f5a2 72d4 	sub.w	r2, r2, #424	; 0x1a8
 8008aba:	6812      	ldr	r2, [r2, #0]
 8008abc:	fab2 f282 	clz	r2, r2
 8008ac0:	b2d2      	uxtb	r2, r2
 8008ac2:	f042 0220 	orr.w	r2, r2, #32
 8008ac6:	b2d2      	uxtb	r2, r2
 8008ac8:	f002 021f 	and.w	r2, r2, #31
 8008acc:	2101      	movs	r1, #1
 8008ace:	fa01 f202 	lsl.w	r2, r1, r2
 8008ad2:	4013      	ands	r3, r2
 8008ad4:	2b00      	cmp	r3, #0
 8008ad6:	d182      	bne.n	80089de <HAL_RCC_OscConfig+0xc5e>
          }
        }

#if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
        /* Configure the main PLL clock source, predivider and multiplication factor. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8008ad8:	4b3c      	ldr	r3, [pc, #240]	; (8008bcc <HAL_RCC_OscConfig+0xe4c>)
 8008ada:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008adc:	f023 020f 	bic.w	r2, r3, #15
 8008ae0:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008ae4:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 8008ae8:	681b      	ldr	r3, [r3, #0]
 8008aea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008aec:	4937      	ldr	r1, [pc, #220]	; (8008bcc <HAL_RCC_OscConfig+0xe4c>)
 8008aee:	4313      	orrs	r3, r2
 8008af0:	62cb      	str	r3, [r1, #44]	; 0x2c
 8008af2:	4b36      	ldr	r3, [pc, #216]	; (8008bcc <HAL_RCC_OscConfig+0xe4c>)
 8008af4:	685b      	ldr	r3, [r3, #4]
 8008af6:	f423 1276 	bic.w	r2, r3, #4030464	; 0x3d8000
 8008afa:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008afe:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 8008b02:	681b      	ldr	r3, [r3, #0]
 8008b04:	6a19      	ldr	r1, [r3, #32]
 8008b06:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008b0a:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 8008b0e:	681b      	ldr	r3, [r3, #0]
 8008b10:	69db      	ldr	r3, [r3, #28]
 8008b12:	430b      	orrs	r3, r1
 8008b14:	492d      	ldr	r1, [pc, #180]	; (8008bcc <HAL_RCC_OscConfig+0xe4c>)
 8008b16:	4313      	orrs	r3, r2
 8008b18:	604b      	str	r3, [r1, #4]
 8008b1a:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008b1e:	f5a3 73d6 	sub.w	r3, r3, #428	; 0x1ac
 8008b22:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8008b26:	601a      	str	r2, [r3, #0]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8008b28:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008b2c:	f5a3 73d6 	sub.w	r3, r3, #428	; 0x1ac
 8008b30:	681b      	ldr	r3, [r3, #0]
 8008b32:	fa93 f2a3 	rbit	r2, r3
 8008b36:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008b3a:	f5a3 73d8 	sub.w	r3, r3, #432	; 0x1b0
 8008b3e:	601a      	str	r2, [r3, #0]
  return result;
 8008b40:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008b44:	f5a3 73d8 	sub.w	r3, r3, #432	; 0x1b0
 8008b48:	681b      	ldr	r3, [r3, #0]
      /* Configure the main PLL clock source and multiplication factor. */
      __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
                           RCC_OscInitStruct->PLL.PLLMUL);
#endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8008b4a:	fab3 f383 	clz	r3, r3
 8008b4e:	b2db      	uxtb	r3, r3
 8008b50:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8008b54:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8008b58:	009b      	lsls	r3, r3, #2
 8008b5a:	461a      	mov	r2, r3
 8008b5c:	2301      	movs	r3, #1
 8008b5e:	6013      	str	r3, [r2, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8008b60:	f7fe fe92 	bl	8007888 <HAL_GetTick>
 8008b64:	4603      	mov	r3, r0
 8008b66:	f8c7 3200 	str.w	r3, [r7, #512]	; 0x200
        
        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8008b6a:	e009      	b.n	8008b80 <HAL_RCC_OscConfig+0xe00>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8008b6c:	f7fe fe8c 	bl	8007888 <HAL_GetTick>
 8008b70:	4602      	mov	r2, r0
 8008b72:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8008b76:	1ad3      	subs	r3, r2, r3
 8008b78:	2b02      	cmp	r3, #2
 8008b7a:	d901      	bls.n	8008b80 <HAL_RCC_OscConfig+0xe00>
          {
            return HAL_TIMEOUT;
 8008b7c:	2303      	movs	r3, #3
 8008b7e:	e157      	b.n	8008e30 <HAL_RCC_OscConfig+0x10b0>
 8008b80:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008b84:	f5a3 73da 	sub.w	r3, r3, #436	; 0x1b4
 8008b88:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8008b8c:	601a      	str	r2, [r3, #0]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8008b8e:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008b92:	f5a3 73da 	sub.w	r3, r3, #436	; 0x1b4
 8008b96:	681b      	ldr	r3, [r3, #0]
 8008b98:	fa93 f2a3 	rbit	r2, r3
 8008b9c:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008ba0:	f5a3 73dc 	sub.w	r3, r3, #440	; 0x1b8
 8008ba4:	601a      	str	r2, [r3, #0]
  return result;
 8008ba6:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008baa:	f5a3 73dc 	sub.w	r3, r3, #440	; 0x1b8
 8008bae:	681b      	ldr	r3, [r3, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8008bb0:	fab3 f383 	clz	r3, r3
 8008bb4:	b2db      	uxtb	r3, r3
 8008bb6:	095b      	lsrs	r3, r3, #5
 8008bb8:	b2db      	uxtb	r3, r3
 8008bba:	f043 0301 	orr.w	r3, r3, #1
 8008bbe:	b2db      	uxtb	r3, r3
 8008bc0:	2b01      	cmp	r3, #1
 8008bc2:	d105      	bne.n	8008bd0 <HAL_RCC_OscConfig+0xe50>
 8008bc4:	4b01      	ldr	r3, [pc, #4]	; (8008bcc <HAL_RCC_OscConfig+0xe4c>)
 8008bc6:	681b      	ldr	r3, [r3, #0]
 8008bc8:	e02a      	b.n	8008c20 <HAL_RCC_OscConfig+0xea0>
 8008bca:	bf00      	nop
 8008bcc:	40021000 	.word	0x40021000
 8008bd0:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008bd4:	f5a3 73de 	sub.w	r3, r3, #444	; 0x1bc
 8008bd8:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8008bdc:	601a      	str	r2, [r3, #0]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8008bde:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008be2:	f5a3 73de 	sub.w	r3, r3, #444	; 0x1bc
 8008be6:	681b      	ldr	r3, [r3, #0]
 8008be8:	fa93 f2a3 	rbit	r2, r3
 8008bec:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008bf0:	f5a3 73e0 	sub.w	r3, r3, #448	; 0x1c0
 8008bf4:	601a      	str	r2, [r3, #0]
 8008bf6:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008bfa:	f5a3 73e2 	sub.w	r3, r3, #452	; 0x1c4
 8008bfe:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8008c02:	601a      	str	r2, [r3, #0]
 8008c04:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008c08:	f5a3 73e2 	sub.w	r3, r3, #452	; 0x1c4
 8008c0c:	681b      	ldr	r3, [r3, #0]
 8008c0e:	fa93 f2a3 	rbit	r2, r3
 8008c12:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008c16:	f5a3 73e4 	sub.w	r3, r3, #456	; 0x1c8
 8008c1a:	601a      	str	r2, [r3, #0]
 8008c1c:	4b87      	ldr	r3, [pc, #540]	; (8008e3c <HAL_RCC_OscConfig+0x10bc>)
 8008c1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008c20:	f507 7202 	add.w	r2, r7, #520	; 0x208
 8008c24:	f5a2 72e6 	sub.w	r2, r2, #460	; 0x1cc
 8008c28:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8008c2c:	6011      	str	r1, [r2, #0]
 8008c2e:	f507 7202 	add.w	r2, r7, #520	; 0x208
 8008c32:	f5a2 72e6 	sub.w	r2, r2, #460	; 0x1cc
 8008c36:	6812      	ldr	r2, [r2, #0]
 8008c38:	fa92 f1a2 	rbit	r1, r2
 8008c3c:	f507 7202 	add.w	r2, r7, #520	; 0x208
 8008c40:	f5a2 72e8 	sub.w	r2, r2, #464	; 0x1d0
 8008c44:	6011      	str	r1, [r2, #0]
  return result;
 8008c46:	f507 7202 	add.w	r2, r7, #520	; 0x208
 8008c4a:	f5a2 72e8 	sub.w	r2, r2, #464	; 0x1d0
 8008c4e:	6812      	ldr	r2, [r2, #0]
 8008c50:	fab2 f282 	clz	r2, r2
 8008c54:	b2d2      	uxtb	r2, r2
 8008c56:	f042 0220 	orr.w	r2, r2, #32
 8008c5a:	b2d2      	uxtb	r2, r2
 8008c5c:	f002 021f 	and.w	r2, r2, #31
 8008c60:	2101      	movs	r1, #1
 8008c62:	fa01 f202 	lsl.w	r2, r1, r2
 8008c66:	4013      	ands	r3, r2
 8008c68:	2b00      	cmp	r3, #0
 8008c6a:	f43f af7f 	beq.w	8008b6c <HAL_RCC_OscConfig+0xdec>
 8008c6e:	e0de      	b.n	8008e2e <HAL_RCC_OscConfig+0x10ae>
 8008c70:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008c74:	f5a3 73ea 	sub.w	r3, r3, #468	; 0x1d4
 8008c78:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8008c7c:	601a      	str	r2, [r3, #0]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8008c7e:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008c82:	f5a3 73ea 	sub.w	r3, r3, #468	; 0x1d4
 8008c86:	681b      	ldr	r3, [r3, #0]
 8008c88:	fa93 f2a3 	rbit	r2, r3
 8008c8c:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008c90:	f5a3 73ec 	sub.w	r3, r3, #472	; 0x1d8
 8008c94:	601a      	str	r2, [r3, #0]
  return result;
 8008c96:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008c9a:	f5a3 73ec 	sub.w	r3, r3, #472	; 0x1d8
 8008c9e:	681b      	ldr	r3, [r3, #0]
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8008ca0:	fab3 f383 	clz	r3, r3
 8008ca4:	b2db      	uxtb	r3, r3
 8008ca6:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8008caa:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8008cae:	009b      	lsls	r3, r3, #2
 8008cb0:	461a      	mov	r2, r3
 8008cb2:	2300      	movs	r3, #0
 8008cb4:	6013      	str	r3, [r2, #0]
 
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8008cb6:	f7fe fde7 	bl	8007888 <HAL_GetTick>
 8008cba:	4603      	mov	r3, r0
 8008cbc:	f8c7 3200 	str.w	r3, [r7, #512]	; 0x200
        
        /* Wait till PLL is disabled */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8008cc0:	e009      	b.n	8008cd6 <HAL_RCC_OscConfig+0xf56>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8008cc2:	f7fe fde1 	bl	8007888 <HAL_GetTick>
 8008cc6:	4602      	mov	r2, r0
 8008cc8:	f8d7 3200 	ldr.w	r3, [r7, #512]	; 0x200
 8008ccc:	1ad3      	subs	r3, r2, r3
 8008cce:	2b02      	cmp	r3, #2
 8008cd0:	d901      	bls.n	8008cd6 <HAL_RCC_OscConfig+0xf56>
          {
            return HAL_TIMEOUT;
 8008cd2:	2303      	movs	r3, #3
 8008cd4:	e0ac      	b.n	8008e30 <HAL_RCC_OscConfig+0x10b0>
 8008cd6:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008cda:	f5a3 73ee 	sub.w	r3, r3, #476	; 0x1dc
 8008cde:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8008ce2:	601a      	str	r2, [r3, #0]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8008ce4:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008ce8:	f5a3 73ee 	sub.w	r3, r3, #476	; 0x1dc
 8008cec:	681b      	ldr	r3, [r3, #0]
 8008cee:	fa93 f2a3 	rbit	r2, r3
 8008cf2:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008cf6:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8008cfa:	601a      	str	r2, [r3, #0]
  return result;
 8008cfc:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008d00:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8008d04:	681b      	ldr	r3, [r3, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8008d06:	fab3 f383 	clz	r3, r3
 8008d0a:	b2db      	uxtb	r3, r3
 8008d0c:	095b      	lsrs	r3, r3, #5
 8008d0e:	b2db      	uxtb	r3, r3
 8008d10:	f043 0301 	orr.w	r3, r3, #1
 8008d14:	b2db      	uxtb	r3, r3
 8008d16:	2b01      	cmp	r3, #1
 8008d18:	d102      	bne.n	8008d20 <HAL_RCC_OscConfig+0xfa0>
 8008d1a:	4b48      	ldr	r3, [pc, #288]	; (8008e3c <HAL_RCC_OscConfig+0x10bc>)
 8008d1c:	681b      	ldr	r3, [r3, #0]
 8008d1e:	e027      	b.n	8008d70 <HAL_RCC_OscConfig+0xff0>
 8008d20:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008d24:	f5a3 73f2 	sub.w	r3, r3, #484	; 0x1e4
 8008d28:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8008d2c:	601a      	str	r2, [r3, #0]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8008d2e:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008d32:	f5a3 73f2 	sub.w	r3, r3, #484	; 0x1e4
 8008d36:	681b      	ldr	r3, [r3, #0]
 8008d38:	fa93 f2a3 	rbit	r2, r3
 8008d3c:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008d40:	f5a3 73f4 	sub.w	r3, r3, #488	; 0x1e8
 8008d44:	601a      	str	r2, [r3, #0]
 8008d46:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008d4a:	f5a3 73f6 	sub.w	r3, r3, #492	; 0x1ec
 8008d4e:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8008d52:	601a      	str	r2, [r3, #0]
 8008d54:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008d58:	f5a3 73f6 	sub.w	r3, r3, #492	; 0x1ec
 8008d5c:	681b      	ldr	r3, [r3, #0]
 8008d5e:	fa93 f2a3 	rbit	r2, r3
 8008d62:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008d66:	f5a3 73f8 	sub.w	r3, r3, #496	; 0x1f0
 8008d6a:	601a      	str	r2, [r3, #0]
 8008d6c:	4b33      	ldr	r3, [pc, #204]	; (8008e3c <HAL_RCC_OscConfig+0x10bc>)
 8008d6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008d70:	f507 7202 	add.w	r2, r7, #520	; 0x208
 8008d74:	f5a2 72fa 	sub.w	r2, r2, #500	; 0x1f4
 8008d78:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8008d7c:	6011      	str	r1, [r2, #0]
 8008d7e:	f507 7202 	add.w	r2, r7, #520	; 0x208
 8008d82:	f5a2 72fa 	sub.w	r2, r2, #500	; 0x1f4
 8008d86:	6812      	ldr	r2, [r2, #0]
 8008d88:	fa92 f1a2 	rbit	r1, r2
 8008d8c:	f507 7202 	add.w	r2, r7, #520	; 0x208
 8008d90:	f5a2 72fc 	sub.w	r2, r2, #504	; 0x1f8
 8008d94:	6011      	str	r1, [r2, #0]
  return result;
 8008d96:	f507 7202 	add.w	r2, r7, #520	; 0x208
 8008d9a:	f5a2 72fc 	sub.w	r2, r2, #504	; 0x1f8
 8008d9e:	6812      	ldr	r2, [r2, #0]
 8008da0:	fab2 f282 	clz	r2, r2
 8008da4:	b2d2      	uxtb	r2, r2
 8008da6:	f042 0220 	orr.w	r2, r2, #32
 8008daa:	b2d2      	uxtb	r2, r2
 8008dac:	f002 021f 	and.w	r2, r2, #31
 8008db0:	2101      	movs	r1, #1
 8008db2:	fa01 f202 	lsl.w	r2, r1, r2
 8008db6:	4013      	ands	r3, r2
 8008db8:	2b00      	cmp	r3, #0
 8008dba:	d182      	bne.n	8008cc2 <HAL_RCC_OscConfig+0xf42>
 8008dbc:	e037      	b.n	8008e2e <HAL_RCC_OscConfig+0x10ae>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8008dbe:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008dc2:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 8008dc6:	681b      	ldr	r3, [r3, #0]
 8008dc8:	699b      	ldr	r3, [r3, #24]
 8008dca:	2b01      	cmp	r3, #1
 8008dcc:	d101      	bne.n	8008dd2 <HAL_RCC_OscConfig+0x1052>
      {
        return HAL_ERROR;
 8008dce:	2301      	movs	r3, #1
 8008dd0:	e02e      	b.n	8008e30 <HAL_RCC_OscConfig+0x10b0>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 8008dd2:	4b1a      	ldr	r3, [pc, #104]	; (8008e3c <HAL_RCC_OscConfig+0x10bc>)
 8008dd4:	685b      	ldr	r3, [r3, #4]
 8008dd6:	f8c7 31fc 	str.w	r3, [r7, #508]	; 0x1fc
#if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
        pll_config2 = RCC->CFGR2;
 8008dda:	4b18      	ldr	r3, [pc, #96]	; (8008e3c <HAL_RCC_OscConfig+0x10bc>)
 8008ddc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008dde:	f8c7 31f8 	str.w	r3, [r7, #504]	; 0x1f8
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC)   != RCC_OscInitStruct->PLL.PLLSource) ||      
 8008de2:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8008de6:	f403 32c0 	and.w	r2, r3, #98304	; 0x18000
 8008dea:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008dee:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 8008df2:	681b      	ldr	r3, [r3, #0]
 8008df4:	69db      	ldr	r3, [r3, #28]
 8008df6:	429a      	cmp	r2, r3
 8008df8:	d117      	bne.n	8008e2a <HAL_RCC_OscConfig+0x10aa>
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL)   != RCC_OscInitStruct->PLL.PLLMUL)    ||      
 8008dfa:	f8d7 31fc 	ldr.w	r3, [r7, #508]	; 0x1fc
 8008dfe:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8008e02:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008e06:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 8008e0a:	681b      	ldr	r3, [r3, #0]
 8008e0c:	6a1b      	ldr	r3, [r3, #32]
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC)   != RCC_OscInitStruct->PLL.PLLSource) ||      
 8008e0e:	429a      	cmp	r2, r3
 8008e10:	d10b      	bne.n	8008e2a <HAL_RCC_OscConfig+0x10aa>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV)  != RCC_OscInitStruct->PLL.PREDIV))     
 8008e12:	f8d7 31f8 	ldr.w	r3, [r7, #504]	; 0x1f8
 8008e16:	f003 020f 	and.w	r2, r3, #15
 8008e1a:	f507 7302 	add.w	r3, r7, #520	; 0x208
 8008e1e:	f5a3 7301 	sub.w	r3, r3, #516	; 0x204
 8008e22:	681b      	ldr	r3, [r3, #0]
 8008e24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL)   != RCC_OscInitStruct->PLL.PLLMUL)    ||      
 8008e26:	429a      	cmp	r2, r3
 8008e28:	d001      	beq.n	8008e2e <HAL_RCC_OscConfig+0x10ae>
#else
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC)   != RCC_OscInitStruct->PLL.PLLSource) ||      
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL)   != RCC_OscInitStruct->PLL.PLLMUL))
#endif
        {
          return HAL_ERROR;
 8008e2a:	2301      	movs	r3, #1
 8008e2c:	e000      	b.n	8008e30 <HAL_RCC_OscConfig+0x10b0>
        }
      }
    }
  }

  return HAL_OK;
 8008e2e:	2300      	movs	r3, #0
}
 8008e30:	4618      	mov	r0, r3
 8008e32:	f507 7702 	add.w	r7, r7, #520	; 0x208
 8008e36:	46bd      	mov	sp, r7
 8008e38:	bd80      	pop	{r7, pc}
 8008e3a:	bf00      	nop
 8008e3c:	40021000 	.word	0x40021000

08008e40 <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8008e40:	b580      	push	{r7, lr}
 8008e42:	b09e      	sub	sp, #120	; 0x78
 8008e44:	af00      	add	r7, sp, #0
 8008e46:	6078      	str	r0, [r7, #4]
 8008e48:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0U;
 8008e4a:	2300      	movs	r3, #0
 8008e4c:	677b      	str	r3, [r7, #116]	; 0x74

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8008e4e:	687b      	ldr	r3, [r7, #4]
 8008e50:	2b00      	cmp	r3, #0
 8008e52:	d101      	bne.n	8008e58 <HAL_RCC_ClockConfig+0x18>
  {
    return HAL_ERROR;
 8008e54:	2301      	movs	r3, #1
 8008e56:	e164      	b.n	8009122 <HAL_RCC_ClockConfig+0x2e2>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
  must be correctly programmed according to the frequency of the CPU clock 
    (HCLK) of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8008e58:	4b91      	ldr	r3, [pc, #580]	; (80090a0 <HAL_RCC_ClockConfig+0x260>)
 8008e5a:	681b      	ldr	r3, [r3, #0]
 8008e5c:	f003 0307 	and.w	r3, r3, #7
 8008e60:	683a      	ldr	r2, [r7, #0]
 8008e62:	429a      	cmp	r2, r3
 8008e64:	d910      	bls.n	8008e88 <HAL_RCC_ClockConfig+0x48>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8008e66:	4b8e      	ldr	r3, [pc, #568]	; (80090a0 <HAL_RCC_ClockConfig+0x260>)
 8008e68:	681b      	ldr	r3, [r3, #0]
 8008e6a:	f023 0207 	bic.w	r2, r3, #7
 8008e6e:	498c      	ldr	r1, [pc, #560]	; (80090a0 <HAL_RCC_ClockConfig+0x260>)
 8008e70:	683b      	ldr	r3, [r7, #0]
 8008e72:	4313      	orrs	r3, r2
 8008e74:	600b      	str	r3, [r1, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8008e76:	4b8a      	ldr	r3, [pc, #552]	; (80090a0 <HAL_RCC_ClockConfig+0x260>)
 8008e78:	681b      	ldr	r3, [r3, #0]
 8008e7a:	f003 0307 	and.w	r3, r3, #7
 8008e7e:	683a      	ldr	r2, [r7, #0]
 8008e80:	429a      	cmp	r2, r3
 8008e82:	d001      	beq.n	8008e88 <HAL_RCC_ClockConfig+0x48>
    {
      return HAL_ERROR;
 8008e84:	2301      	movs	r3, #1
 8008e86:	e14c      	b.n	8009122 <HAL_RCC_ClockConfig+0x2e2>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8008e88:	687b      	ldr	r3, [r7, #4]
 8008e8a:	681b      	ldr	r3, [r3, #0]
 8008e8c:	f003 0302 	and.w	r3, r3, #2
 8008e90:	2b00      	cmp	r3, #0
 8008e92:	d008      	beq.n	8008ea6 <HAL_RCC_ClockConfig+0x66>
  {
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8008e94:	4b83      	ldr	r3, [pc, #524]	; (80090a4 <HAL_RCC_ClockConfig+0x264>)
 8008e96:	685b      	ldr	r3, [r3, #4]
 8008e98:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8008e9c:	687b      	ldr	r3, [r7, #4]
 8008e9e:	689b      	ldr	r3, [r3, #8]
 8008ea0:	4980      	ldr	r1, [pc, #512]	; (80090a4 <HAL_RCC_ClockConfig+0x264>)
 8008ea2:	4313      	orrs	r3, r2
 8008ea4:	604b      	str	r3, [r1, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8008ea6:	687b      	ldr	r3, [r7, #4]
 8008ea8:	681b      	ldr	r3, [r3, #0]
 8008eaa:	f003 0301 	and.w	r3, r3, #1
 8008eae:	2b00      	cmp	r3, #0
 8008eb0:	f000 80dd 	beq.w	800906e <HAL_RCC_ClockConfig+0x22e>
  {    
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
    
    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8008eb4:	687b      	ldr	r3, [r7, #4]
 8008eb6:	685b      	ldr	r3, [r3, #4]
 8008eb8:	2b01      	cmp	r3, #1
 8008eba:	d13c      	bne.n	8008f36 <HAL_RCC_ClockConfig+0xf6>
 8008ebc:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8008ec0:	673b      	str	r3, [r7, #112]	; 0x70
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8008ec2:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8008ec4:	fa93 f3a3 	rbit	r3, r3
 8008ec8:	66fb      	str	r3, [r7, #108]	; 0x6c
  return result;
 8008eca:	6efb      	ldr	r3, [r7, #108]	; 0x6c
    {
      /* Check the HSE ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8008ecc:	fab3 f383 	clz	r3, r3
 8008ed0:	b2db      	uxtb	r3, r3
 8008ed2:	095b      	lsrs	r3, r3, #5
 8008ed4:	b2db      	uxtb	r3, r3
 8008ed6:	f043 0301 	orr.w	r3, r3, #1
 8008eda:	b2db      	uxtb	r3, r3
 8008edc:	2b01      	cmp	r3, #1
 8008ede:	d102      	bne.n	8008ee6 <HAL_RCC_ClockConfig+0xa6>
 8008ee0:	4b70      	ldr	r3, [pc, #448]	; (80090a4 <HAL_RCC_ClockConfig+0x264>)
 8008ee2:	681b      	ldr	r3, [r3, #0]
 8008ee4:	e00f      	b.n	8008f06 <HAL_RCC_ClockConfig+0xc6>
 8008ee6:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8008eea:	66bb      	str	r3, [r7, #104]	; 0x68
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8008eec:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8008eee:	fa93 f3a3 	rbit	r3, r3
 8008ef2:	667b      	str	r3, [r7, #100]	; 0x64
 8008ef4:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8008ef8:	663b      	str	r3, [r7, #96]	; 0x60
 8008efa:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8008efc:	fa93 f3a3 	rbit	r3, r3
 8008f00:	65fb      	str	r3, [r7, #92]	; 0x5c
 8008f02:	4b68      	ldr	r3, [pc, #416]	; (80090a4 <HAL_RCC_ClockConfig+0x264>)
 8008f04:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008f06:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8008f0a:	65ba      	str	r2, [r7, #88]	; 0x58
 8008f0c:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8008f0e:	fa92 f2a2 	rbit	r2, r2
 8008f12:	657a      	str	r2, [r7, #84]	; 0x54
  return result;
 8008f14:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8008f16:	fab2 f282 	clz	r2, r2
 8008f1a:	b2d2      	uxtb	r2, r2
 8008f1c:	f042 0220 	orr.w	r2, r2, #32
 8008f20:	b2d2      	uxtb	r2, r2
 8008f22:	f002 021f 	and.w	r2, r2, #31
 8008f26:	2101      	movs	r1, #1
 8008f28:	fa01 f202 	lsl.w	r2, r1, r2
 8008f2c:	4013      	ands	r3, r2
 8008f2e:	2b00      	cmp	r3, #0
 8008f30:	d17b      	bne.n	800902a <HAL_RCC_ClockConfig+0x1ea>
      {
        return HAL_ERROR;
 8008f32:	2301      	movs	r3, #1
 8008f34:	e0f5      	b.n	8009122 <HAL_RCC_ClockConfig+0x2e2>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8008f36:	687b      	ldr	r3, [r7, #4]
 8008f38:	685b      	ldr	r3, [r3, #4]
 8008f3a:	2b02      	cmp	r3, #2
 8008f3c:	d13c      	bne.n	8008fb8 <HAL_RCC_ClockConfig+0x178>
 8008f3e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8008f42:	653b      	str	r3, [r7, #80]	; 0x50
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8008f44:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8008f46:	fa93 f3a3 	rbit	r3, r3
 8008f4a:	64fb      	str	r3, [r7, #76]	; 0x4c
  return result;
 8008f4c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    {
      /* Check the PLL ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008f4e:	fab3 f383 	clz	r3, r3
 8008f52:	b2db      	uxtb	r3, r3
 8008f54:	095b      	lsrs	r3, r3, #5
 8008f56:	b2db      	uxtb	r3, r3
 8008f58:	f043 0301 	orr.w	r3, r3, #1
 8008f5c:	b2db      	uxtb	r3, r3
 8008f5e:	2b01      	cmp	r3, #1
 8008f60:	d102      	bne.n	8008f68 <HAL_RCC_ClockConfig+0x128>
 8008f62:	4b50      	ldr	r3, [pc, #320]	; (80090a4 <HAL_RCC_ClockConfig+0x264>)
 8008f64:	681b      	ldr	r3, [r3, #0]
 8008f66:	e00f      	b.n	8008f88 <HAL_RCC_ClockConfig+0x148>
 8008f68:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8008f6c:	64bb      	str	r3, [r7, #72]	; 0x48
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8008f6e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8008f70:	fa93 f3a3 	rbit	r3, r3
 8008f74:	647b      	str	r3, [r7, #68]	; 0x44
 8008f76:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8008f7a:	643b      	str	r3, [r7, #64]	; 0x40
 8008f7c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8008f7e:	fa93 f3a3 	rbit	r3, r3
 8008f82:	63fb      	str	r3, [r7, #60]	; 0x3c
 8008f84:	4b47      	ldr	r3, [pc, #284]	; (80090a4 <HAL_RCC_ClockConfig+0x264>)
 8008f86:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008f88:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8008f8c:	63ba      	str	r2, [r7, #56]	; 0x38
 8008f8e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8008f90:	fa92 f2a2 	rbit	r2, r2
 8008f94:	637a      	str	r2, [r7, #52]	; 0x34
  return result;
 8008f96:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8008f98:	fab2 f282 	clz	r2, r2
 8008f9c:	b2d2      	uxtb	r2, r2
 8008f9e:	f042 0220 	orr.w	r2, r2, #32
 8008fa2:	b2d2      	uxtb	r2, r2
 8008fa4:	f002 021f 	and.w	r2, r2, #31
 8008fa8:	2101      	movs	r1, #1
 8008faa:	fa01 f202 	lsl.w	r2, r1, r2
 8008fae:	4013      	ands	r3, r2
 8008fb0:	2b00      	cmp	r3, #0
 8008fb2:	d13a      	bne.n	800902a <HAL_RCC_ClockConfig+0x1ea>
      {
        return HAL_ERROR;
 8008fb4:	2301      	movs	r3, #1
 8008fb6:	e0b4      	b.n	8009122 <HAL_RCC_ClockConfig+0x2e2>
 8008fb8:	2302      	movs	r3, #2
 8008fba:	633b      	str	r3, [r7, #48]	; 0x30
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8008fbc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008fbe:	fa93 f3a3 	rbit	r3, r3
 8008fc2:	62fb      	str	r3, [r7, #44]	; 0x2c
  return result;
 8008fc4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008fc6:	fab3 f383 	clz	r3, r3
 8008fca:	b2db      	uxtb	r3, r3
 8008fcc:	095b      	lsrs	r3, r3, #5
 8008fce:	b2db      	uxtb	r3, r3
 8008fd0:	f043 0301 	orr.w	r3, r3, #1
 8008fd4:	b2db      	uxtb	r3, r3
 8008fd6:	2b01      	cmp	r3, #1
 8008fd8:	d102      	bne.n	8008fe0 <HAL_RCC_ClockConfig+0x1a0>
 8008fda:	4b32      	ldr	r3, [pc, #200]	; (80090a4 <HAL_RCC_ClockConfig+0x264>)
 8008fdc:	681b      	ldr	r3, [r3, #0]
 8008fde:	e00d      	b.n	8008ffc <HAL_RCC_ClockConfig+0x1bc>
 8008fe0:	2302      	movs	r3, #2
 8008fe2:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8008fe4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008fe6:	fa93 f3a3 	rbit	r3, r3
 8008fea:	627b      	str	r3, [r7, #36]	; 0x24
 8008fec:	2302      	movs	r3, #2
 8008fee:	623b      	str	r3, [r7, #32]
 8008ff0:	6a3b      	ldr	r3, [r7, #32]
 8008ff2:	fa93 f3a3 	rbit	r3, r3
 8008ff6:	61fb      	str	r3, [r7, #28]
 8008ff8:	4b2a      	ldr	r3, [pc, #168]	; (80090a4 <HAL_RCC_ClockConfig+0x264>)
 8008ffa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008ffc:	2202      	movs	r2, #2
 8008ffe:	61ba      	str	r2, [r7, #24]
 8009000:	69ba      	ldr	r2, [r7, #24]
 8009002:	fa92 f2a2 	rbit	r2, r2
 8009006:	617a      	str	r2, [r7, #20]
  return result;
 8009008:	697a      	ldr	r2, [r7, #20]
 800900a:	fab2 f282 	clz	r2, r2
 800900e:	b2d2      	uxtb	r2, r2
 8009010:	f042 0220 	orr.w	r2, r2, #32
 8009014:	b2d2      	uxtb	r2, r2
 8009016:	f002 021f 	and.w	r2, r2, #31
 800901a:	2101      	movs	r1, #1
 800901c:	fa01 f202 	lsl.w	r2, r1, r2
 8009020:	4013      	ands	r3, r2
 8009022:	2b00      	cmp	r3, #0
 8009024:	d101      	bne.n	800902a <HAL_RCC_ClockConfig+0x1ea>
      {
        return HAL_ERROR;
 8009026:	2301      	movs	r3, #1
 8009028:	e07b      	b.n	8009122 <HAL_RCC_ClockConfig+0x2e2>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800902a:	4b1e      	ldr	r3, [pc, #120]	; (80090a4 <HAL_RCC_ClockConfig+0x264>)
 800902c:	685b      	ldr	r3, [r3, #4]
 800902e:	f023 0203 	bic.w	r2, r3, #3
 8009032:	687b      	ldr	r3, [r7, #4]
 8009034:	685b      	ldr	r3, [r3, #4]
 8009036:	491b      	ldr	r1, [pc, #108]	; (80090a4 <HAL_RCC_ClockConfig+0x264>)
 8009038:	4313      	orrs	r3, r2
 800903a:	604b      	str	r3, [r1, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 800903c:	f7fe fc24 	bl	8007888 <HAL_GetTick>
 8009040:	4603      	mov	r3, r0
 8009042:	677b      	str	r3, [r7, #116]	; 0x74
    
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8009044:	e00a      	b.n	800905c <HAL_RCC_ClockConfig+0x21c>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8009046:	f7fe fc1f 	bl	8007888 <HAL_GetTick>
 800904a:	4602      	mov	r2, r0
 800904c:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800904e:	1ad3      	subs	r3, r2, r3
 8009050:	f241 3288 	movw	r2, #5000	; 0x1388
 8009054:	4293      	cmp	r3, r2
 8009056:	d901      	bls.n	800905c <HAL_RCC_ClockConfig+0x21c>
      {
        return HAL_TIMEOUT;
 8009058:	2303      	movs	r3, #3
 800905a:	e062      	b.n	8009122 <HAL_RCC_ClockConfig+0x2e2>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800905c:	4b11      	ldr	r3, [pc, #68]	; (80090a4 <HAL_RCC_ClockConfig+0x264>)
 800905e:	685b      	ldr	r3, [r3, #4]
 8009060:	f003 020c 	and.w	r2, r3, #12
 8009064:	687b      	ldr	r3, [r7, #4]
 8009066:	685b      	ldr	r3, [r3, #4]
 8009068:	009b      	lsls	r3, r3, #2
 800906a:	429a      	cmp	r2, r3
 800906c:	d1eb      	bne.n	8009046 <HAL_RCC_ClockConfig+0x206>
      }
    }
  }
  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800906e:	4b0c      	ldr	r3, [pc, #48]	; (80090a0 <HAL_RCC_ClockConfig+0x260>)
 8009070:	681b      	ldr	r3, [r3, #0]
 8009072:	f003 0307 	and.w	r3, r3, #7
 8009076:	683a      	ldr	r2, [r7, #0]
 8009078:	429a      	cmp	r2, r3
 800907a:	d215      	bcs.n	80090a8 <HAL_RCC_ClockConfig+0x268>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800907c:	4b08      	ldr	r3, [pc, #32]	; (80090a0 <HAL_RCC_ClockConfig+0x260>)
 800907e:	681b      	ldr	r3, [r3, #0]
 8009080:	f023 0207 	bic.w	r2, r3, #7
 8009084:	4906      	ldr	r1, [pc, #24]	; (80090a0 <HAL_RCC_ClockConfig+0x260>)
 8009086:	683b      	ldr	r3, [r7, #0]
 8009088:	4313      	orrs	r3, r2
 800908a:	600b      	str	r3, [r1, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800908c:	4b04      	ldr	r3, [pc, #16]	; (80090a0 <HAL_RCC_ClockConfig+0x260>)
 800908e:	681b      	ldr	r3, [r3, #0]
 8009090:	f003 0307 	and.w	r3, r3, #7
 8009094:	683a      	ldr	r2, [r7, #0]
 8009096:	429a      	cmp	r2, r3
 8009098:	d006      	beq.n	80090a8 <HAL_RCC_ClockConfig+0x268>
    {
      return HAL_ERROR;
 800909a:	2301      	movs	r3, #1
 800909c:	e041      	b.n	8009122 <HAL_RCC_ClockConfig+0x2e2>
 800909e:	bf00      	nop
 80090a0:	40022000 	.word	0x40022000
 80090a4:	40021000 	.word	0x40021000
    }
  }    

  /*-------------------------- PCLK1 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80090a8:	687b      	ldr	r3, [r7, #4]
 80090aa:	681b      	ldr	r3, [r3, #0]
 80090ac:	f003 0304 	and.w	r3, r3, #4
 80090b0:	2b00      	cmp	r3, #0
 80090b2:	d008      	beq.n	80090c6 <HAL_RCC_ClockConfig+0x286>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80090b4:	4b1d      	ldr	r3, [pc, #116]	; (800912c <HAL_RCC_ClockConfig+0x2ec>)
 80090b6:	685b      	ldr	r3, [r3, #4]
 80090b8:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80090bc:	687b      	ldr	r3, [r7, #4]
 80090be:	68db      	ldr	r3, [r3, #12]
 80090c0:	491a      	ldr	r1, [pc, #104]	; (800912c <HAL_RCC_ClockConfig+0x2ec>)
 80090c2:	4313      	orrs	r3, r2
 80090c4:	604b      	str	r3, [r1, #4]
  }
  
  /*-------------------------- PCLK2 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80090c6:	687b      	ldr	r3, [r7, #4]
 80090c8:	681b      	ldr	r3, [r3, #0]
 80090ca:	f003 0308 	and.w	r3, r3, #8
 80090ce:	2b00      	cmp	r3, #0
 80090d0:	d009      	beq.n	80090e6 <HAL_RCC_ClockConfig+0x2a6>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80090d2:	4b16      	ldr	r3, [pc, #88]	; (800912c <HAL_RCC_ClockConfig+0x2ec>)
 80090d4:	685b      	ldr	r3, [r3, #4]
 80090d6:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80090da:	687b      	ldr	r3, [r7, #4]
 80090dc:	691b      	ldr	r3, [r3, #16]
 80090de:	00db      	lsls	r3, r3, #3
 80090e0:	4912      	ldr	r1, [pc, #72]	; (800912c <HAL_RCC_ClockConfig+0x2ec>)
 80090e2:	4313      	orrs	r3, r2
 80090e4:	604b      	str	r3, [r1, #4]
  }
 
  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 80090e6:	f000 f829 	bl	800913c <HAL_RCC_GetSysClockFreq>
 80090ea:	4601      	mov	r1, r0
 80090ec:	4b0f      	ldr	r3, [pc, #60]	; (800912c <HAL_RCC_ClockConfig+0x2ec>)
 80090ee:	685b      	ldr	r3, [r3, #4]
 80090f0:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80090f4:	22f0      	movs	r2, #240	; 0xf0
 80090f6:	613a      	str	r2, [r7, #16]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80090f8:	693a      	ldr	r2, [r7, #16]
 80090fa:	fa92 f2a2 	rbit	r2, r2
 80090fe:	60fa      	str	r2, [r7, #12]
  return result;
 8009100:	68fa      	ldr	r2, [r7, #12]
 8009102:	fab2 f282 	clz	r2, r2
 8009106:	b2d2      	uxtb	r2, r2
 8009108:	40d3      	lsrs	r3, r2
 800910a:	4a09      	ldr	r2, [pc, #36]	; (8009130 <HAL_RCC_ClockConfig+0x2f0>)
 800910c:	5cd3      	ldrb	r3, [r2, r3]
 800910e:	fa21 f303 	lsr.w	r3, r1, r3
 8009112:	4a08      	ldr	r2, [pc, #32]	; (8009134 <HAL_RCC_ClockConfig+0x2f4>)
 8009114:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick (uwTickPrio);
 8009116:	4b08      	ldr	r3, [pc, #32]	; (8009138 <HAL_RCC_ClockConfig+0x2f8>)
 8009118:	681b      	ldr	r3, [r3, #0]
 800911a:	4618      	mov	r0, r3
 800911c:	f7fe fb70 	bl	8007800 <HAL_InitTick>
  
  return HAL_OK;
 8009120:	2300      	movs	r3, #0
}
 8009122:	4618      	mov	r0, r3
 8009124:	3778      	adds	r7, #120	; 0x78
 8009126:	46bd      	mov	sp, r7
 8009128:	bd80      	pop	{r7, pc}
 800912a:	bf00      	nop
 800912c:	40021000 	.word	0x40021000
 8009130:	0800d0cc 	.word	0x0800d0cc
 8009134:	20000008 	.word	0x20000008
 8009138:	2000000c 	.word	0x2000000c

0800913c <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *         
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 800913c:	b480      	push	{r7}
 800913e:	b08b      	sub	sp, #44	; 0x2c
 8009140:	af00      	add	r7, sp, #0
  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 8009142:	2300      	movs	r3, #0
 8009144:	61fb      	str	r3, [r7, #28]
 8009146:	2300      	movs	r3, #0
 8009148:	61bb      	str	r3, [r7, #24]
 800914a:	2300      	movs	r3, #0
 800914c:	627b      	str	r3, [r7, #36]	; 0x24
 800914e:	2300      	movs	r3, #0
 8009150:	617b      	str	r3, [r7, #20]
  uint32_t sysclockfreq = 0U;
 8009152:	2300      	movs	r3, #0
 8009154:	623b      	str	r3, [r7, #32]
  
  tmpreg = RCC->CFGR;
 8009156:	4b2a      	ldr	r3, [pc, #168]	; (8009200 <HAL_RCC_GetSysClockFreq+0xc4>)
 8009158:	685b      	ldr	r3, [r3, #4]
 800915a:	61fb      	str	r3, [r7, #28]
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 800915c:	69fb      	ldr	r3, [r7, #28]
 800915e:	f003 030c 	and.w	r3, r3, #12
 8009162:	2b04      	cmp	r3, #4
 8009164:	d002      	beq.n	800916c <HAL_RCC_GetSysClockFreq+0x30>
 8009166:	2b08      	cmp	r3, #8
 8009168:	d003      	beq.n	8009172 <HAL_RCC_GetSysClockFreq+0x36>
 800916a:	e03f      	b.n	80091ec <HAL_RCC_GetSysClockFreq+0xb0>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 800916c:	4b25      	ldr	r3, [pc, #148]	; (8009204 <HAL_RCC_GetSysClockFreq+0xc8>)
 800916e:	623b      	str	r3, [r7, #32]
      break;
 8009170:	e03f      	b.n	80091f2 <HAL_RCC_GetSysClockFreq+0xb6>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> POSITION_VAL(RCC_CFGR_PLLMUL)];
 8009172:	69fb      	ldr	r3, [r7, #28]
 8009174:	f403 1370 	and.w	r3, r3, #3932160	; 0x3c0000
 8009178:	f44f 1270 	mov.w	r2, #3932160	; 0x3c0000
 800917c:	60ba      	str	r2, [r7, #8]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800917e:	68ba      	ldr	r2, [r7, #8]
 8009180:	fa92 f2a2 	rbit	r2, r2
 8009184:	607a      	str	r2, [r7, #4]
  return result;
 8009186:	687a      	ldr	r2, [r7, #4]
 8009188:	fab2 f282 	clz	r2, r2
 800918c:	b2d2      	uxtb	r2, r2
 800918e:	40d3      	lsrs	r3, r2
 8009190:	4a1d      	ldr	r2, [pc, #116]	; (8009208 <HAL_RCC_GetSysClockFreq+0xcc>)
 8009192:	5cd3      	ldrb	r3, [r2, r3]
 8009194:	617b      	str	r3, [r7, #20]
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> POSITION_VAL(RCC_CFGR2_PREDIV)];
 8009196:	4b1a      	ldr	r3, [pc, #104]	; (8009200 <HAL_RCC_GetSysClockFreq+0xc4>)
 8009198:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800919a:	f003 030f 	and.w	r3, r3, #15
 800919e:	220f      	movs	r2, #15
 80091a0:	613a      	str	r2, [r7, #16]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80091a2:	693a      	ldr	r2, [r7, #16]
 80091a4:	fa92 f2a2 	rbit	r2, r2
 80091a8:	60fa      	str	r2, [r7, #12]
  return result;
 80091aa:	68fa      	ldr	r2, [r7, #12]
 80091ac:	fab2 f282 	clz	r2, r2
 80091b0:	b2d2      	uxtb	r2, r2
 80091b2:	40d3      	lsrs	r3, r2
 80091b4:	4a15      	ldr	r2, [pc, #84]	; (800920c <HAL_RCC_GetSysClockFreq+0xd0>)
 80091b6:	5cd3      	ldrb	r3, [r2, r3]
 80091b8:	61bb      	str	r3, [r7, #24]
      {
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
      }
#else
      if ((tmpreg & RCC_CFGR_PLLSRC_HSE_PREDIV) == RCC_CFGR_PLLSRC_HSE_PREDIV)
 80091ba:	69fb      	ldr	r3, [r7, #28]
 80091bc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80091c0:	2b00      	cmp	r3, #0
 80091c2:	d008      	beq.n	80091d6 <HAL_RCC_GetSysClockFreq+0x9a>
      {
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 80091c4:	4a0f      	ldr	r2, [pc, #60]	; (8009204 <HAL_RCC_GetSysClockFreq+0xc8>)
 80091c6:	69bb      	ldr	r3, [r7, #24]
 80091c8:	fbb2 f2f3 	udiv	r2, r2, r3
 80091cc:	697b      	ldr	r3, [r7, #20]
 80091ce:	fb02 f303 	mul.w	r3, r2, r3
 80091d2:	627b      	str	r3, [r7, #36]	; 0x24
 80091d4:	e007      	b.n	80091e6 <HAL_RCC_GetSysClockFreq+0xaa>
      }
      else
      {
        /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 80091d6:	4a0b      	ldr	r2, [pc, #44]	; (8009204 <HAL_RCC_GetSysClockFreq+0xc8>)
 80091d8:	69bb      	ldr	r3, [r7, #24]
 80091da:	fbb2 f2f3 	udiv	r2, r2, r3
 80091de:	697b      	ldr	r3, [r7, #20]
 80091e0:	fb02 f303 	mul.w	r3, r2, r3
 80091e4:	627b      	str	r3, [r7, #36]	; 0x24
      }
#endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
      sysclockfreq = pllclk;
 80091e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80091e8:	623b      	str	r3, [r7, #32]
      break;
 80091ea:	e002      	b.n	80091f2 <HAL_RCC_GetSysClockFreq+0xb6>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 80091ec:	4b05      	ldr	r3, [pc, #20]	; (8009204 <HAL_RCC_GetSysClockFreq+0xc8>)
 80091ee:	623b      	str	r3, [r7, #32]
      break;
 80091f0:	bf00      	nop
    }
  }
  return sysclockfreq;
 80091f2:	6a3b      	ldr	r3, [r7, #32]
}
 80091f4:	4618      	mov	r0, r3
 80091f6:	372c      	adds	r7, #44	; 0x2c
 80091f8:	46bd      	mov	sp, r7
 80091fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091fe:	4770      	bx	lr
 8009200:	40021000 	.word	0x40021000
 8009204:	007a1200 	.word	0x007a1200
 8009208:	0800d0e4 	.word	0x0800d0e4
 800920c:	0800d0f4 	.word	0x0800d0f4

08009210 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8009210:	b480      	push	{r7}
 8009212:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8009214:	4b03      	ldr	r3, [pc, #12]	; (8009224 <HAL_RCC_GetHCLKFreq+0x14>)
 8009216:	681b      	ldr	r3, [r3, #0]
}
 8009218:	4618      	mov	r0, r3
 800921a:	46bd      	mov	sp, r7
 800921c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009220:	4770      	bx	lr
 8009222:	bf00      	nop
 8009224:	20000008 	.word	0x20000008

08009228 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8009228:	b580      	push	{r7, lr}
 800922a:	b082      	sub	sp, #8
 800922c:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_BITNUMBER]);
 800922e:	f7ff ffef 	bl	8009210 <HAL_RCC_GetHCLKFreq>
 8009232:	4601      	mov	r1, r0
 8009234:	4b0b      	ldr	r3, [pc, #44]	; (8009264 <HAL_RCC_GetPCLK1Freq+0x3c>)
 8009236:	685b      	ldr	r3, [r3, #4]
 8009238:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800923c:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8009240:	607a      	str	r2, [r7, #4]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8009242:	687a      	ldr	r2, [r7, #4]
 8009244:	fa92 f2a2 	rbit	r2, r2
 8009248:	603a      	str	r2, [r7, #0]
  return result;
 800924a:	683a      	ldr	r2, [r7, #0]
 800924c:	fab2 f282 	clz	r2, r2
 8009250:	b2d2      	uxtb	r2, r2
 8009252:	40d3      	lsrs	r3, r2
 8009254:	4a04      	ldr	r2, [pc, #16]	; (8009268 <HAL_RCC_GetPCLK1Freq+0x40>)
 8009256:	5cd3      	ldrb	r3, [r2, r3]
 8009258:	fa21 f303 	lsr.w	r3, r1, r3
}    
 800925c:	4618      	mov	r0, r3
 800925e:	3708      	adds	r7, #8
 8009260:	46bd      	mov	sp, r7
 8009262:	bd80      	pop	{r7, pc}
 8009264:	40021000 	.word	0x40021000
 8009268:	0800d0dc 	.word	0x0800d0dc

0800926c <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 800926c:	b580      	push	{r7, lr}
 800926e:	b082      	sub	sp, #8
 8009270:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_BITNUMBER]);
 8009272:	f7ff ffcd 	bl	8009210 <HAL_RCC_GetHCLKFreq>
 8009276:	4601      	mov	r1, r0
 8009278:	4b0b      	ldr	r3, [pc, #44]	; (80092a8 <HAL_RCC_GetPCLK2Freq+0x3c>)
 800927a:	685b      	ldr	r3, [r3, #4]
 800927c:	f403 5360 	and.w	r3, r3, #14336	; 0x3800
 8009280:	f44f 5260 	mov.w	r2, #14336	; 0x3800
 8009284:	607a      	str	r2, [r7, #4]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8009286:	687a      	ldr	r2, [r7, #4]
 8009288:	fa92 f2a2 	rbit	r2, r2
 800928c:	603a      	str	r2, [r7, #0]
  return result;
 800928e:	683a      	ldr	r2, [r7, #0]
 8009290:	fab2 f282 	clz	r2, r2
 8009294:	b2d2      	uxtb	r2, r2
 8009296:	40d3      	lsrs	r3, r2
 8009298:	4a04      	ldr	r2, [pc, #16]	; (80092ac <HAL_RCC_GetPCLK2Freq+0x40>)
 800929a:	5cd3      	ldrb	r3, [r2, r3]
 800929c:	fa21 f303 	lsr.w	r3, r1, r3
} 
 80092a0:	4618      	mov	r0, r3
 80092a2:	3708      	adds	r7, #8
 80092a4:	46bd      	mov	sp, r7
 80092a6:	bd80      	pop	{r7, pc}
 80092a8:	40021000 	.word	0x40021000
 80092ac:	0800d0dc 	.word	0x0800d0dc

080092b0 <HAL_RCCEx_PeriphCLKConfig>:
  *         When the TIMx clock source is PLL clock, so the TIMx clock is PLL clock x 2.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80092b0:	b580      	push	{r7, lr}
 80092b2:	b092      	sub	sp, #72	; 0x48
 80092b4:	af00      	add	r7, sp, #0
 80092b6:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 80092b8:	2300      	movs	r3, #0
 80092ba:	643b      	str	r3, [r7, #64]	; 0x40
  uint32_t temp_reg = 0U;
 80092bc:	2300      	movs	r3, #0
 80092be:	63fb      	str	r3, [r7, #60]	; 0x3c
  FlagStatus       pwrclkchanged = RESET;
 80092c0:	2300      	movs	r3, #0
 80092c2:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
    
  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
  
  /*---------------------------- RTC configuration -------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80092c6:	687b      	ldr	r3, [r7, #4]
 80092c8:	681b      	ldr	r3, [r3, #0]
 80092ca:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80092ce:	2b00      	cmp	r3, #0
 80092d0:	f000 80d6 	beq.w	8009480 <HAL_RCCEx_PeriphCLKConfig+0x1d0>


    /* As soon as function is called to change RTC clock source, activation of the 
       power domain is done. */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80092d4:	4b4f      	ldr	r3, [pc, #316]	; (8009414 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80092d6:	69db      	ldr	r3, [r3, #28]
 80092d8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80092dc:	2b00      	cmp	r3, #0
 80092de:	d10e      	bne.n	80092fe <HAL_RCCEx_PeriphCLKConfig+0x4e>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 80092e0:	4b4c      	ldr	r3, [pc, #304]	; (8009414 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80092e2:	69db      	ldr	r3, [r3, #28]
 80092e4:	4a4b      	ldr	r2, [pc, #300]	; (8009414 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80092e6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80092ea:	61d3      	str	r3, [r2, #28]
 80092ec:	4b49      	ldr	r3, [pc, #292]	; (8009414 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80092ee:	69db      	ldr	r3, [r3, #28]
 80092f0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80092f4:	60bb      	str	r3, [r7, #8]
 80092f6:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 80092f8:	2301      	movs	r3, #1
 80092fa:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80092fe:	4b46      	ldr	r3, [pc, #280]	; (8009418 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8009300:	681b      	ldr	r3, [r3, #0]
 8009302:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009306:	2b00      	cmp	r3, #0
 8009308:	d119      	bne.n	800933e <HAL_RCCEx_PeriphCLKConfig+0x8e>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800930a:	4b43      	ldr	r3, [pc, #268]	; (8009418 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 800930c:	681b      	ldr	r3, [r3, #0]
 800930e:	4a42      	ldr	r2, [pc, #264]	; (8009418 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8009310:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009314:	6013      	str	r3, [r2, #0]
      
      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8009316:	f7fe fab7 	bl	8007888 <HAL_GetTick>
 800931a:	4603      	mov	r3, r0
 800931c:	643b      	str	r3, [r7, #64]	; 0x40
      
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800931e:	e008      	b.n	8009332 <HAL_RCCEx_PeriphCLKConfig+0x82>
      {
          if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8009320:	f7fe fab2 	bl	8007888 <HAL_GetTick>
 8009324:	4602      	mov	r2, r0
 8009326:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8009328:	1ad3      	subs	r3, r2, r3
 800932a:	2b64      	cmp	r3, #100	; 0x64
 800932c:	d901      	bls.n	8009332 <HAL_RCCEx_PeriphCLKConfig+0x82>
        {
          return HAL_TIMEOUT;
 800932e:	2303      	movs	r3, #3
 8009330:	e1d7      	b.n	80096e2 <HAL_RCCEx_PeriphCLKConfig+0x432>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8009332:	4b39      	ldr	r3, [pc, #228]	; (8009418 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8009334:	681b      	ldr	r3, [r3, #0]
 8009336:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800933a:	2b00      	cmp	r3, #0
 800933c:	d0f0      	beq.n	8009320 <HAL_RCCEx_PeriphCLKConfig+0x70>
        }
      }
    }
    
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */ 
    temp_reg = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800933e:	4b35      	ldr	r3, [pc, #212]	; (8009414 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8009340:	6a1b      	ldr	r3, [r3, #32]
 8009342:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009346:	63fb      	str	r3, [r7, #60]	; 0x3c
    if((temp_reg != 0x00000000U) && (temp_reg != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8009348:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800934a:	2b00      	cmp	r3, #0
 800934c:	f000 8085 	beq.w	800945a <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8009350:	687b      	ldr	r3, [r7, #4]
 8009352:	685b      	ldr	r3, [r3, #4]
 8009354:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009358:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800935a:	429a      	cmp	r2, r3
 800935c:	d07d      	beq.n	800945a <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800935e:	4b2d      	ldr	r3, [pc, #180]	; (8009414 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8009360:	6a1b      	ldr	r3, [r3, #32]
 8009362:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009366:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009368:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800936c:	633b      	str	r3, [r7, #48]	; 0x30
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800936e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009370:	fa93 f3a3 	rbit	r3, r3
 8009374:	62fb      	str	r3, [r7, #44]	; 0x2c
  return result;
 8009376:	6afb      	ldr	r3, [r7, #44]	; 0x2c
      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 8009378:	fab3 f383 	clz	r3, r3
 800937c:	b2db      	uxtb	r3, r3
 800937e:	461a      	mov	r2, r3
 8009380:	4b26      	ldr	r3, [pc, #152]	; (800941c <HAL_RCCEx_PeriphCLKConfig+0x16c>)
 8009382:	4413      	add	r3, r2
 8009384:	009b      	lsls	r3, r3, #2
 8009386:	461a      	mov	r2, r3
 8009388:	2301      	movs	r3, #1
 800938a:	6013      	str	r3, [r2, #0]
 800938c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8009390:	63bb      	str	r3, [r7, #56]	; 0x38
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8009392:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009394:	fa93 f3a3 	rbit	r3, r3
 8009398:	637b      	str	r3, [r7, #52]	; 0x34
  return result;
 800939a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
      __HAL_RCC_BACKUPRESET_RELEASE();
 800939c:	fab3 f383 	clz	r3, r3
 80093a0:	b2db      	uxtb	r3, r3
 80093a2:	461a      	mov	r2, r3
 80093a4:	4b1d      	ldr	r3, [pc, #116]	; (800941c <HAL_RCCEx_PeriphCLKConfig+0x16c>)
 80093a6:	4413      	add	r3, r2
 80093a8:	009b      	lsls	r3, r3, #2
 80093aa:	461a      	mov	r2, r3
 80093ac:	2300      	movs	r3, #0
 80093ae:	6013      	str	r3, [r2, #0]
      /* Restore the Content of BDCR register */
      RCC->BDCR = temp_reg;
 80093b0:	4a18      	ldr	r2, [pc, #96]	; (8009414 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 80093b2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80093b4:	6213      	str	r3, [r2, #32]
    
      /* Wait for LSERDY if LSE was enabled */
      if (HAL_IS_BIT_SET(temp_reg, RCC_BDCR_LSEON))
 80093b6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80093b8:	f003 0301 	and.w	r3, r3, #1
 80093bc:	2b00      	cmp	r3, #0
 80093be:	d04c      	beq.n	800945a <HAL_RCCEx_PeriphCLKConfig+0x1aa>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80093c0:	f7fe fa62 	bl	8007888 <HAL_GetTick>
 80093c4:	4603      	mov	r3, r0
 80093c6:	643b      	str	r3, [r7, #64]	; 0x40
        
        /* Wait till LSE is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80093c8:	e00a      	b.n	80093e0 <HAL_RCCEx_PeriphCLKConfig+0x130>
        {
            if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80093ca:	f7fe fa5d 	bl	8007888 <HAL_GetTick>
 80093ce:	4602      	mov	r2, r0
 80093d0:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80093d2:	1ad3      	subs	r3, r2, r3
 80093d4:	f241 3288 	movw	r2, #5000	; 0x1388
 80093d8:	4293      	cmp	r3, r2
 80093da:	d901      	bls.n	80093e0 <HAL_RCCEx_PeriphCLKConfig+0x130>
          {
            return HAL_TIMEOUT;
 80093dc:	2303      	movs	r3, #3
 80093de:	e180      	b.n	80096e2 <HAL_RCCEx_PeriphCLKConfig+0x432>
 80093e0:	2302      	movs	r3, #2
 80093e2:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80093e4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80093e6:	fa93 f3a3 	rbit	r3, r3
 80093ea:	627b      	str	r3, [r7, #36]	; 0x24
 80093ec:	2302      	movs	r3, #2
 80093ee:	623b      	str	r3, [r7, #32]
 80093f0:	6a3b      	ldr	r3, [r7, #32]
 80093f2:	fa93 f3a3 	rbit	r3, r3
 80093f6:	61fb      	str	r3, [r7, #28]
  return result;
 80093f8:	69fb      	ldr	r3, [r7, #28]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80093fa:	fab3 f383 	clz	r3, r3
 80093fe:	b2db      	uxtb	r3, r3
 8009400:	095b      	lsrs	r3, r3, #5
 8009402:	b2db      	uxtb	r3, r3
 8009404:	f043 0302 	orr.w	r3, r3, #2
 8009408:	b2db      	uxtb	r3, r3
 800940a:	2b02      	cmp	r3, #2
 800940c:	d108      	bne.n	8009420 <HAL_RCCEx_PeriphCLKConfig+0x170>
 800940e:	4b01      	ldr	r3, [pc, #4]	; (8009414 <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8009410:	6a1b      	ldr	r3, [r3, #32]
 8009412:	e00d      	b.n	8009430 <HAL_RCCEx_PeriphCLKConfig+0x180>
 8009414:	40021000 	.word	0x40021000
 8009418:	40007000 	.word	0x40007000
 800941c:	10908100 	.word	0x10908100
 8009420:	2302      	movs	r3, #2
 8009422:	61bb      	str	r3, [r7, #24]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8009424:	69bb      	ldr	r3, [r7, #24]
 8009426:	fa93 f3a3 	rbit	r3, r3
 800942a:	617b      	str	r3, [r7, #20]
 800942c:	4b9a      	ldr	r3, [pc, #616]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 800942e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009430:	2202      	movs	r2, #2
 8009432:	613a      	str	r2, [r7, #16]
 8009434:	693a      	ldr	r2, [r7, #16]
 8009436:	fa92 f2a2 	rbit	r2, r2
 800943a:	60fa      	str	r2, [r7, #12]
  return result;
 800943c:	68fa      	ldr	r2, [r7, #12]
 800943e:	fab2 f282 	clz	r2, r2
 8009442:	b2d2      	uxtb	r2, r2
 8009444:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8009448:	b2d2      	uxtb	r2, r2
 800944a:	f002 021f 	and.w	r2, r2, #31
 800944e:	2101      	movs	r1, #1
 8009450:	fa01 f202 	lsl.w	r2, r1, r2
 8009454:	4013      	ands	r3, r2
 8009456:	2b00      	cmp	r3, #0
 8009458:	d0b7      	beq.n	80093ca <HAL_RCCEx_PeriphCLKConfig+0x11a>
          }      
        }  
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection); 
 800945a:	4b8f      	ldr	r3, [pc, #572]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 800945c:	6a1b      	ldr	r3, [r3, #32]
 800945e:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8009462:	687b      	ldr	r3, [r7, #4]
 8009464:	685b      	ldr	r3, [r3, #4]
 8009466:	498c      	ldr	r1, [pc, #560]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 8009468:	4313      	orrs	r3, r2
 800946a:	620b      	str	r3, [r1, #32]

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 800946c:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 8009470:	2b01      	cmp	r3, #1
 8009472:	d105      	bne.n	8009480 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8009474:	4b88      	ldr	r3, [pc, #544]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 8009476:	69db      	ldr	r3, [r3, #28]
 8009478:	4a87      	ldr	r2, [pc, #540]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 800947a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800947e:	61d3      	str	r3, [r2, #28]
    }
  }

  /*------------------------------- USART1 Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8009480:	687b      	ldr	r3, [r7, #4]
 8009482:	681b      	ldr	r3, [r3, #0]
 8009484:	f003 0301 	and.w	r3, r3, #1
 8009488:	2b00      	cmp	r3, #0
 800948a:	d008      	beq.n	800949e <HAL_RCCEx_PeriphCLKConfig+0x1ee>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));
    
    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 800948c:	4b82      	ldr	r3, [pc, #520]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 800948e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009490:	f023 0203 	bic.w	r2, r3, #3
 8009494:	687b      	ldr	r3, [r7, #4]
 8009496:	689b      	ldr	r3, [r3, #8]
 8009498:	497f      	ldr	r1, [pc, #508]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 800949a:	4313      	orrs	r3, r2
 800949c:	630b      	str	r3, [r1, #48]	; 0x30
  }

#if defined(RCC_CFGR3_USART2SW)
  /*----------------------------- USART2 Configuration --------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 800949e:	687b      	ldr	r3, [r7, #4]
 80094a0:	681b      	ldr	r3, [r3, #0]
 80094a2:	f003 0302 	and.w	r3, r3, #2
 80094a6:	2b00      	cmp	r3, #0
 80094a8:	d008      	beq.n	80094bc <HAL_RCCEx_PeriphCLKConfig+0x20c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));
    
    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 80094aa:	4b7b      	ldr	r3, [pc, #492]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 80094ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80094ae:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80094b2:	687b      	ldr	r3, [r7, #4]
 80094b4:	68db      	ldr	r3, [r3, #12]
 80094b6:	4978      	ldr	r1, [pc, #480]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 80094b8:	4313      	orrs	r3, r2
 80094ba:	630b      	str	r3, [r1, #48]	; 0x30
  }
#endif /* RCC_CFGR3_USART2SW */

#if defined(RCC_CFGR3_USART3SW)
  /*------------------------------ USART3 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 80094bc:	687b      	ldr	r3, [r7, #4]
 80094be:	681b      	ldr	r3, [r3, #0]
 80094c0:	f003 0304 	and.w	r3, r3, #4
 80094c4:	2b00      	cmp	r3, #0
 80094c6:	d008      	beq.n	80094da <HAL_RCCEx_PeriphCLKConfig+0x22a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));
    
    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 80094c8:	4b73      	ldr	r3, [pc, #460]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 80094ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80094cc:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 80094d0:	687b      	ldr	r3, [r7, #4]
 80094d2:	691b      	ldr	r3, [r3, #16]
 80094d4:	4970      	ldr	r1, [pc, #448]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 80094d6:	4313      	orrs	r3, r2
 80094d8:	630b      	str	r3, [r1, #48]	; 0x30
  }
#endif /* RCC_CFGR3_USART3SW */

  /*------------------------------ I2C1 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 80094da:	687b      	ldr	r3, [r7, #4]
 80094dc:	681b      	ldr	r3, [r3, #0]
 80094de:	f003 0320 	and.w	r3, r3, #32
 80094e2:	2b00      	cmp	r3, #0
 80094e4:	d008      	beq.n	80094f8 <HAL_RCCEx_PeriphCLKConfig+0x248>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));
    
    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 80094e6:	4b6c      	ldr	r3, [pc, #432]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 80094e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80094ea:	f023 0210 	bic.w	r2, r3, #16
 80094ee:	687b      	ldr	r3, [r7, #4]
 80094f0:	69db      	ldr	r3, [r3, #28]
 80094f2:	4969      	ldr	r1, [pc, #420]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 80094f4:	4313      	orrs	r3, r2
 80094f6:	630b      	str	r3, [r1, #48]	; 0x30
#if defined(STM32F302xE) || defined(STM32F303xE)\
 || defined(STM32F302xC) || defined(STM32F303xC)\
 || defined(STM32F302x8)                        \
 || defined(STM32F373xC)
  /*------------------------------ USB Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 80094f8:	687b      	ldr	r3, [r7, #4]
 80094fa:	681b      	ldr	r3, [r3, #0]
 80094fc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009500:	2b00      	cmp	r3, #0
 8009502:	d008      	beq.n	8009516 <HAL_RCCEx_PeriphCLKConfig+0x266>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USBCLKSOURCE(PeriphClkInit->USBClockSelection));
    
    /* Configure the USB clock source */
    __HAL_RCC_USB_CONFIG(PeriphClkInit->USBClockSelection);
 8009504:	4b64      	ldr	r3, [pc, #400]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 8009506:	685b      	ldr	r3, [r3, #4]
 8009508:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 800950c:	687b      	ldr	r3, [r7, #4]
 800950e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009510:	4961      	ldr	r1, [pc, #388]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 8009512:	4313      	orrs	r3, r2
 8009514:	604b      	str	r3, [r1, #4]
 || defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx)\
 || defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)\
 || defined(STM32F373xC) || defined(STM32F378xx)

  /*------------------------------ I2C2 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8009516:	687b      	ldr	r3, [r7, #4]
 8009518:	681b      	ldr	r3, [r3, #0]
 800951a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800951e:	2b00      	cmp	r3, #0
 8009520:	d008      	beq.n	8009534 <HAL_RCCEx_PeriphCLKConfig+0x284>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));
    
    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 8009522:	4b5d      	ldr	r3, [pc, #372]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 8009524:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009526:	f023 0220 	bic.w	r2, r3, #32
 800952a:	687b      	ldr	r3, [r7, #4]
 800952c:	6a1b      	ldr	r3, [r3, #32]
 800952e:	495a      	ldr	r1, [pc, #360]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 8009530:	4313      	orrs	r3, r2
 8009532:	630b      	str	r3, [r1, #48]	; 0x30
  
#if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx)\
 || defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)

  /*------------------------------ I2C3 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8009534:	687b      	ldr	r3, [r7, #4]
 8009536:	681b      	ldr	r3, [r3, #0]
 8009538:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800953c:	2b00      	cmp	r3, #0
 800953e:	d008      	beq.n	8009552 <HAL_RCCEx_PeriphCLKConfig+0x2a2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));
    
    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8009540:	4b55      	ldr	r3, [pc, #340]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 8009542:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009544:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8009548:	687b      	ldr	r3, [r7, #4]
 800954a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800954c:	4952      	ldr	r1, [pc, #328]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 800954e:	4313      	orrs	r3, r2
 8009550:	630b      	str	r3, [r1, #48]	; 0x30
  
#if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx)\
 || defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx)

  /*------------------------------ UART4 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8009552:	687b      	ldr	r3, [r7, #4]
 8009554:	681b      	ldr	r3, [r3, #0]
 8009556:	f003 0308 	and.w	r3, r3, #8
 800955a:	2b00      	cmp	r3, #0
 800955c:	d008      	beq.n	8009570 <HAL_RCCEx_PeriphCLKConfig+0x2c0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));
    
    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 800955e:	4b4e      	ldr	r3, [pc, #312]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 8009560:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009562:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8009566:	687b      	ldr	r3, [r7, #4]
 8009568:	695b      	ldr	r3, [r3, #20]
 800956a:	494b      	ldr	r1, [pc, #300]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 800956c:	4313      	orrs	r3, r2
 800956e:	630b      	str	r3, [r1, #48]	; 0x30
  }

  /*------------------------------ UART5 Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8009570:	687b      	ldr	r3, [r7, #4]
 8009572:	681b      	ldr	r3, [r3, #0]
 8009574:	f003 0310 	and.w	r3, r3, #16
 8009578:	2b00      	cmp	r3, #0
 800957a:	d008      	beq.n	800958e <HAL_RCCEx_PeriphCLKConfig+0x2de>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));
    
    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 800957c:	4b46      	ldr	r3, [pc, #280]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 800957e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009580:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8009584:	687b      	ldr	r3, [r7, #4]
 8009586:	699b      	ldr	r3, [r3, #24]
 8009588:	4943      	ldr	r1, [pc, #268]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 800958a:	4313      	orrs	r3, r2
 800958c:	630b      	str	r3, [r1, #48]	; 0x30

#if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx)\
 || defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx)\
 || defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
  /*------------------------------ I2S Configuration ------------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S)
 800958e:	687b      	ldr	r3, [r7, #4]
 8009590:	681b      	ldr	r3, [r3, #0]
 8009592:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8009596:	2b00      	cmp	r3, #0
 8009598:	d008      	beq.n	80095ac <HAL_RCCEx_PeriphCLKConfig+0x2fc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));
    
    /* Configure the I2S clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 800959a:	4b3f      	ldr	r3, [pc, #252]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 800959c:	685b      	ldr	r3, [r3, #4]
 800959e:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 80095a2:	687b      	ldr	r3, [r7, #4]
 80095a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80095a6:	493c      	ldr	r1, [pc, #240]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 80095a8:	4313      	orrs	r3, r2
 80095aa:	604b      	str	r3, [r1, #4]
#if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx)\
 || defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx)\
 || defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx)
      
  /*------------------------------ ADC1 & ADC2 clock Configuration -------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC12) == RCC_PERIPHCLK_ADC12)
 80095ac:	687b      	ldr	r3, [r7, #4]
 80095ae:	681b      	ldr	r3, [r3, #0]
 80095b0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80095b4:	2b00      	cmp	r3, #0
 80095b6:	d008      	beq.n	80095ca <HAL_RCCEx_PeriphCLKConfig+0x31a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_ADC12PLLCLK_DIV(PeriphClkInit->Adc12ClockSelection));
    
    /* Configure the ADC12 clock source */
    __HAL_RCC_ADC12_CONFIG(PeriphClkInit->Adc12ClockSelection);
 80095b8:	4b37      	ldr	r3, [pc, #220]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 80095ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80095bc:	f423 72f8 	bic.w	r2, r3, #496	; 0x1f0
 80095c0:	687b      	ldr	r3, [r7, #4]
 80095c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80095c4:	4934      	ldr	r1, [pc, #208]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 80095c6:	4313      	orrs	r3, r2
 80095c8:	62cb      	str	r3, [r1, #44]	; 0x2c
  
#if defined(STM32F303xE) || defined(STM32F398xx)\
 || defined(STM32F303xC) || defined(STM32F358xx)

  /*------------------------------ ADC3 & ADC4 clock Configuration -------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC34) == RCC_PERIPHCLK_ADC34)
 80095ca:	687b      	ldr	r3, [r7, #4]
 80095cc:	681b      	ldr	r3, [r3, #0]
 80095ce:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80095d2:	2b00      	cmp	r3, #0
 80095d4:	d008      	beq.n	80095e8 <HAL_RCCEx_PeriphCLKConfig+0x338>
  {
    /* Check the parameters */
    assert_param(IS_RCC_ADC34PLLCLK_DIV(PeriphClkInit->Adc34ClockSelection));
    
    /* Configure the ADC34 clock source */
    __HAL_RCC_ADC34_CONFIG(PeriphClkInit->Adc34ClockSelection);
 80095d6:	4b30      	ldr	r3, [pc, #192]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 80095d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80095da:	f423 5278 	bic.w	r2, r3, #15872	; 0x3e00
 80095de:	687b      	ldr	r3, [r7, #4]
 80095e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80095e2:	492d      	ldr	r1, [pc, #180]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 80095e4:	4313      	orrs	r3, r2
 80095e6:	62cb      	str	r3, [r1, #44]	; 0x2c
 || defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx)\
 || defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx)\
 || defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)

  /*------------------------------ TIM1 clock Configuration ----------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM1) == RCC_PERIPHCLK_TIM1)
 80095e8:	687b      	ldr	r3, [r7, #4]
 80095ea:	681b      	ldr	r3, [r3, #0]
 80095ec:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80095f0:	2b00      	cmp	r3, #0
 80095f2:	d008      	beq.n	8009606 <HAL_RCCEx_PeriphCLKConfig+0x356>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIM1CLKSOURCE(PeriphClkInit->Tim1ClockSelection));
    
    /* Configure the TIM1 clock source */
    __HAL_RCC_TIM1_CONFIG(PeriphClkInit->Tim1ClockSelection);
 80095f4:	4b28      	ldr	r3, [pc, #160]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 80095f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80095f8:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80095fc:	687b      	ldr	r3, [r7, #4]
 80095fe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009600:	4925      	ldr	r1, [pc, #148]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 8009602:	4313      	orrs	r3, r2
 8009604:	630b      	str	r3, [r1, #48]	; 0x30
  
#if defined(STM32F303xE) || defined(STM32F398xx)\
 || defined(STM32F303xC) || defined(STM32F358xx)

  /*------------------------------ TIM8 clock Configuration ----------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM8) == RCC_PERIPHCLK_TIM8)
 8009606:	687b      	ldr	r3, [r7, #4]
 8009608:	681b      	ldr	r3, [r3, #0]
 800960a:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800960e:	2b00      	cmp	r3, #0
 8009610:	d008      	beq.n	8009624 <HAL_RCCEx_PeriphCLKConfig+0x374>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIM8CLKSOURCE(PeriphClkInit->Tim8ClockSelection));
    
    /* Configure the TIM8 clock source */
    __HAL_RCC_TIM8_CONFIG(PeriphClkInit->Tim8ClockSelection);
 8009612:	4b21      	ldr	r3, [pc, #132]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 8009614:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009616:	f423 7200 	bic.w	r2, r3, #512	; 0x200
 800961a:	687b      	ldr	r3, [r7, #4]
 800961c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800961e:	491e      	ldr	r1, [pc, #120]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 8009620:	4313      	orrs	r3, r2
 8009622:	630b      	str	r3, [r1, #48]	; 0x30
#endif /* STM32F373xC || STM32F378xx */
  
#if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx)
  
  /*------------------------------ TIM2 clock Configuration -------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM2) == RCC_PERIPHCLK_TIM2)
 8009624:	687b      	ldr	r3, [r7, #4]
 8009626:	681b      	ldr	r3, [r3, #0]
 8009628:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800962c:	2b00      	cmp	r3, #0
 800962e:	d008      	beq.n	8009642 <HAL_RCCEx_PeriphCLKConfig+0x392>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIM2CLKSOURCE(PeriphClkInit->Tim2ClockSelection));
    
    /* Configure the CEC clock source */
    __HAL_RCC_TIM2_CONFIG(PeriphClkInit->Tim2ClockSelection);
 8009630:	4b19      	ldr	r3, [pc, #100]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 8009632:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009634:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
 8009638:	687b      	ldr	r3, [r7, #4]
 800963a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800963c:	4916      	ldr	r1, [pc, #88]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 800963e:	4313      	orrs	r3, r2
 8009640:	630b      	str	r3, [r1, #48]	; 0x30
  }

  /*------------------------------ TIM3 clock Configuration -------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM34) == RCC_PERIPHCLK_TIM34)
 8009642:	687b      	ldr	r3, [r7, #4]
 8009644:	681b      	ldr	r3, [r3, #0]
 8009646:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800964a:	2b00      	cmp	r3, #0
 800964c:	d008      	beq.n	8009660 <HAL_RCCEx_PeriphCLKConfig+0x3b0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIM3CLKSOURCE(PeriphClkInit->Tim34ClockSelection));
    
    /* Configure the CEC clock source */
    __HAL_RCC_TIM34_CONFIG(PeriphClkInit->Tim34ClockSelection);
 800964e:	4b12      	ldr	r3, [pc, #72]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 8009650:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009652:	f023 7200 	bic.w	r2, r3, #33554432	; 0x2000000
 8009656:	687b      	ldr	r3, [r7, #4]
 8009658:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800965a:	490f      	ldr	r1, [pc, #60]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 800965c:	4313      	orrs	r3, r2
 800965e:	630b      	str	r3, [r1, #48]	; 0x30
  }

  /*------------------------------ TIM15 clock Configuration ------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM15) == RCC_PERIPHCLK_TIM15)
 8009660:	687b      	ldr	r3, [r7, #4]
 8009662:	681b      	ldr	r3, [r3, #0]
 8009664:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009668:	2b00      	cmp	r3, #0
 800966a:	d008      	beq.n	800967e <HAL_RCCEx_PeriphCLKConfig+0x3ce>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIM15CLKSOURCE(PeriphClkInit->Tim15ClockSelection));
    
    /* Configure the CEC clock source */
    __HAL_RCC_TIM15_CONFIG(PeriphClkInit->Tim15ClockSelection);
 800966c:	4b0a      	ldr	r3, [pc, #40]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 800966e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009670:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8009674:	687b      	ldr	r3, [r7, #4]
 8009676:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009678:	4907      	ldr	r1, [pc, #28]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 800967a:	4313      	orrs	r3, r2
 800967c:	630b      	str	r3, [r1, #48]	; 0x30
  }

  /*------------------------------ TIM16 clock Configuration ------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM16) == RCC_PERIPHCLK_TIM16)
 800967e:	687b      	ldr	r3, [r7, #4]
 8009680:	681b      	ldr	r3, [r3, #0]
 8009682:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8009686:	2b00      	cmp	r3, #0
 8009688:	d00c      	beq.n	80096a4 <HAL_RCCEx_PeriphCLKConfig+0x3f4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIM16CLKSOURCE(PeriphClkInit->Tim16ClockSelection));
    
    /* Configure the CEC clock source */
    __HAL_RCC_TIM16_CONFIG(PeriphClkInit->Tim16ClockSelection);
 800968a:	4b03      	ldr	r3, [pc, #12]	; (8009698 <HAL_RCCEx_PeriphCLKConfig+0x3e8>)
 800968c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800968e:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8009692:	687b      	ldr	r3, [r7, #4]
 8009694:	e002      	b.n	800969c <HAL_RCCEx_PeriphCLKConfig+0x3ec>
 8009696:	bf00      	nop
 8009698:	40021000 	.word	0x40021000
 800969c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800969e:	4913      	ldr	r1, [pc, #76]	; (80096ec <HAL_RCCEx_PeriphCLKConfig+0x43c>)
 80096a0:	4313      	orrs	r3, r2
 80096a2:	630b      	str	r3, [r1, #48]	; 0x30
  }

  /*------------------------------ TIM17 clock Configuration ------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM17) == RCC_PERIPHCLK_TIM17)
 80096a4:	687b      	ldr	r3, [r7, #4]
 80096a6:	681b      	ldr	r3, [r3, #0]
 80096a8:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80096ac:	2b00      	cmp	r3, #0
 80096ae:	d008      	beq.n	80096c2 <HAL_RCCEx_PeriphCLKConfig+0x412>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIM17CLKSOURCE(PeriphClkInit->Tim17ClockSelection));
    
    /* Configure the CEC clock source */
    __HAL_RCC_TIM17_CONFIG(PeriphClkInit->Tim17ClockSelection);
 80096b0:	4b0e      	ldr	r3, [pc, #56]	; (80096ec <HAL_RCCEx_PeriphCLKConfig+0x43c>)
 80096b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80096b4:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 80096b8:	687b      	ldr	r3, [r7, #4]
 80096ba:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80096bc:	490b      	ldr	r1, [pc, #44]	; (80096ec <HAL_RCCEx_PeriphCLKConfig+0x43c>)
 80096be:	4313      	orrs	r3, r2
 80096c0:	630b      	str	r3, [r1, #48]	; 0x30

#endif /* STM32F302xE || STM32F303xE || STM32F398xx */  

#if defined(STM32F303xE) || defined(STM32F398xx)
  /*------------------------------ TIM20 clock Configuration ------------------*/ 
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM20) == RCC_PERIPHCLK_TIM20)
 80096c2:	687b      	ldr	r3, [r7, #4]
 80096c4:	681b      	ldr	r3, [r3, #0]
 80096c6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80096ca:	2b00      	cmp	r3, #0
 80096cc:	d008      	beq.n	80096e0 <HAL_RCCEx_PeriphCLKConfig+0x430>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIM20CLKSOURCE(PeriphClkInit->Tim20ClockSelection));
    
    /* Configure the CEC clock source */
    __HAL_RCC_TIM20_CONFIG(PeriphClkInit->Tim20ClockSelection);
 80096ce:	4b07      	ldr	r3, [pc, #28]	; (80096ec <HAL_RCCEx_PeriphCLKConfig+0x43c>)
 80096d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80096d2:	f423 4200 	bic.w	r2, r3, #32768	; 0x8000
 80096d6:	687b      	ldr	r3, [r7, #4]
 80096d8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80096da:	4904      	ldr	r1, [pc, #16]	; (80096ec <HAL_RCCEx_PeriphCLKConfig+0x43c>)
 80096dc:	4313      	orrs	r3, r2
 80096de:	630b      	str	r3, [r1, #48]	; 0x30
  }
#endif /* STM32F303xE || STM32F398xx */  

  
  return HAL_OK;
 80096e0:	2300      	movs	r3, #0
}
 80096e2:	4618      	mov	r0, r3
 80096e4:	3748      	adds	r7, #72	; 0x48
 80096e6:	46bd      	mov	sp, r7
 80096e8:	bd80      	pop	{r7, pc}
 80096ea:	bf00      	nop
 80096ec:	40021000 	.word	0x40021000

080096f0 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 80096f0:	b580      	push	{r7, lr}
 80096f2:	b082      	sub	sp, #8
 80096f4:	af00      	add	r7, sp, #0
 80096f6:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 80096f8:	687b      	ldr	r3, [r7, #4]
 80096fa:	2b00      	cmp	r3, #0
 80096fc:	d101      	bne.n	8009702 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 80096fe:	2301      	movs	r3, #1
 8009700:	e040      	b.n	8009784 <HAL_UART_Init+0x94>
  {
    /* Check the parameters */
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 8009702:	687b      	ldr	r3, [r7, #4]
 8009704:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009706:	2b00      	cmp	r3, #0
 8009708:	d106      	bne.n	8009718 <HAL_UART_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 800970a:	687b      	ldr	r3, [r7, #4]
 800970c:	2200      	movs	r2, #0
 800970e:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8009712:	6878      	ldr	r0, [r7, #4]
 8009714:	f7fd fef0 	bl	80074f8 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8009718:	687b      	ldr	r3, [r7, #4]
 800971a:	2224      	movs	r2, #36	; 0x24
 800971c:	67da      	str	r2, [r3, #124]	; 0x7c

  __HAL_UART_DISABLE(huart);
 800971e:	687b      	ldr	r3, [r7, #4]
 8009720:	681b      	ldr	r3, [r3, #0]
 8009722:	681a      	ldr	r2, [r3, #0]
 8009724:	687b      	ldr	r3, [r7, #4]
 8009726:	681b      	ldr	r3, [r3, #0]
 8009728:	f022 0201 	bic.w	r2, r2, #1
 800972c:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 800972e:	6878      	ldr	r0, [r7, #4]
 8009730:	f000 f8b8 	bl	80098a4 <UART_SetConfig>
 8009734:	4603      	mov	r3, r0
 8009736:	2b01      	cmp	r3, #1
 8009738:	d101      	bne.n	800973e <HAL_UART_Init+0x4e>
  {
    return HAL_ERROR;
 800973a:	2301      	movs	r3, #1
 800973c:	e022      	b.n	8009784 <HAL_UART_Init+0x94>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 800973e:	687b      	ldr	r3, [r7, #4]
 8009740:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009742:	2b00      	cmp	r3, #0
 8009744:	d002      	beq.n	800974c <HAL_UART_Init+0x5c>
  {
    UART_AdvFeatureConfig(huart);
 8009746:	6878      	ldr	r0, [r7, #4]
 8009748:	f000 fa84 	bl	8009c54 <UART_AdvFeatureConfig>
  }

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN and CLKEN bits in the USART_CR2 register,
  - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800974c:	687b      	ldr	r3, [r7, #4]
 800974e:	681b      	ldr	r3, [r3, #0]
 8009750:	685a      	ldr	r2, [r3, #4]
 8009752:	687b      	ldr	r3, [r7, #4]
 8009754:	681b      	ldr	r3, [r3, #0]
 8009756:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800975a:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800975c:	687b      	ldr	r3, [r7, #4]
 800975e:	681b      	ldr	r3, [r3, #0]
 8009760:	689a      	ldr	r2, [r3, #8]
 8009762:	687b      	ldr	r3, [r7, #4]
 8009764:	681b      	ldr	r3, [r3, #0]
 8009766:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800976a:	609a      	str	r2, [r3, #8]

  __HAL_UART_ENABLE(huart);
 800976c:	687b      	ldr	r3, [r7, #4]
 800976e:	681b      	ldr	r3, [r3, #0]
 8009770:	681a      	ldr	r2, [r3, #0]
 8009772:	687b      	ldr	r3, [r7, #4]
 8009774:	681b      	ldr	r3, [r3, #0]
 8009776:	f042 0201 	orr.w	r2, r2, #1
 800977a:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 800977c:	6878      	ldr	r0, [r7, #4]
 800977e:	f000 fb0b 	bl	8009d98 <UART_CheckIdleState>
 8009782:	4603      	mov	r3, r0
}
 8009784:	4618      	mov	r0, r3
 8009786:	3708      	adds	r7, #8
 8009788:	46bd      	mov	sp, r7
 800978a:	bd80      	pop	{r7, pc}

0800978c <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800978c:	b580      	push	{r7, lr}
 800978e:	b08a      	sub	sp, #40	; 0x28
 8009790:	af02      	add	r7, sp, #8
 8009792:	60f8      	str	r0, [r7, #12]
 8009794:	60b9      	str	r1, [r7, #8]
 8009796:	603b      	str	r3, [r7, #0]
 8009798:	4613      	mov	r3, r2
 800979a:	80fb      	strh	r3, [r7, #6]
  const uint8_t  *pdata8bits;
  const uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 800979c:	68fb      	ldr	r3, [r7, #12]
 800979e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80097a0:	2b20      	cmp	r3, #32
 80097a2:	d179      	bne.n	8009898 <HAL_UART_Transmit+0x10c>
  {
    if ((pData == NULL) || (Size == 0U))
 80097a4:	68bb      	ldr	r3, [r7, #8]
 80097a6:	2b00      	cmp	r3, #0
 80097a8:	d002      	beq.n	80097b0 <HAL_UART_Transmit+0x24>
 80097aa:	88fb      	ldrh	r3, [r7, #6]
 80097ac:	2b00      	cmp	r3, #0
 80097ae:	d101      	bne.n	80097b4 <HAL_UART_Transmit+0x28>
    {
      return  HAL_ERROR;
 80097b0:	2301      	movs	r3, #1
 80097b2:	e072      	b.n	800989a <HAL_UART_Transmit+0x10e>
    }

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 80097b4:	68fb      	ldr	r3, [r7, #12]
 80097b6:	2200      	movs	r2, #0
 80097b8:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    huart->gState = HAL_UART_STATE_BUSY_TX;
 80097bc:	68fb      	ldr	r3, [r7, #12]
 80097be:	2221      	movs	r2, #33	; 0x21
 80097c0:	67da      	str	r2, [r3, #124]	; 0x7c

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 80097c2:	f7fe f861 	bl	8007888 <HAL_GetTick>
 80097c6:	4603      	mov	r3, r0
 80097c8:	617b      	str	r3, [r7, #20]

    huart->TxXferSize  = Size;
 80097ca:	68fb      	ldr	r3, [r7, #12]
 80097cc:	88fa      	ldrh	r2, [r7, #6]
 80097ce:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
    huart->TxXferCount = Size;
 80097d2:	68fb      	ldr	r3, [r7, #12]
 80097d4:	88fa      	ldrh	r2, [r7, #6]
 80097d6:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80097da:	68fb      	ldr	r3, [r7, #12]
 80097dc:	689b      	ldr	r3, [r3, #8]
 80097de:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80097e2:	d108      	bne.n	80097f6 <HAL_UART_Transmit+0x6a>
 80097e4:	68fb      	ldr	r3, [r7, #12]
 80097e6:	691b      	ldr	r3, [r3, #16]
 80097e8:	2b00      	cmp	r3, #0
 80097ea:	d104      	bne.n	80097f6 <HAL_UART_Transmit+0x6a>
    {
      pdata8bits  = NULL;
 80097ec:	2300      	movs	r3, #0
 80097ee:	61fb      	str	r3, [r7, #28]
      pdata16bits = (const uint16_t *) pData;
 80097f0:	68bb      	ldr	r3, [r7, #8]
 80097f2:	61bb      	str	r3, [r7, #24]
 80097f4:	e003      	b.n	80097fe <HAL_UART_Transmit+0x72>
    }
    else
    {
      pdata8bits  = pData;
 80097f6:	68bb      	ldr	r3, [r7, #8]
 80097f8:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 80097fa:	2300      	movs	r3, #0
 80097fc:	61bb      	str	r3, [r7, #24]
    }

    while (huart->TxXferCount > 0U)
 80097fe:	e030      	b.n	8009862 <HAL_UART_Transmit+0xd6>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8009800:	683b      	ldr	r3, [r7, #0]
 8009802:	9300      	str	r3, [sp, #0]
 8009804:	697b      	ldr	r3, [r7, #20]
 8009806:	2200      	movs	r2, #0
 8009808:	2180      	movs	r1, #128	; 0x80
 800980a:	68f8      	ldr	r0, [r7, #12]
 800980c:	f000 fb6d 	bl	8009eea <UART_WaitOnFlagUntilTimeout>
 8009810:	4603      	mov	r3, r0
 8009812:	2b00      	cmp	r3, #0
 8009814:	d004      	beq.n	8009820 <HAL_UART_Transmit+0x94>
      {

        huart->gState = HAL_UART_STATE_READY;
 8009816:	68fb      	ldr	r3, [r7, #12]
 8009818:	2220      	movs	r2, #32
 800981a:	67da      	str	r2, [r3, #124]	; 0x7c

        return HAL_TIMEOUT;
 800981c:	2303      	movs	r3, #3
 800981e:	e03c      	b.n	800989a <HAL_UART_Transmit+0x10e>
      }
      if (pdata8bits == NULL)
 8009820:	69fb      	ldr	r3, [r7, #28]
 8009822:	2b00      	cmp	r3, #0
 8009824:	d10b      	bne.n	800983e <HAL_UART_Transmit+0xb2>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8009826:	69bb      	ldr	r3, [r7, #24]
 8009828:	881a      	ldrh	r2, [r3, #0]
 800982a:	68fb      	ldr	r3, [r7, #12]
 800982c:	681b      	ldr	r3, [r3, #0]
 800982e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8009832:	b292      	uxth	r2, r2
 8009834:	851a      	strh	r2, [r3, #40]	; 0x28
        pdata16bits++;
 8009836:	69bb      	ldr	r3, [r7, #24]
 8009838:	3302      	adds	r3, #2
 800983a:	61bb      	str	r3, [r7, #24]
 800983c:	e008      	b.n	8009850 <HAL_UART_Transmit+0xc4>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 800983e:	69fb      	ldr	r3, [r7, #28]
 8009840:	781a      	ldrb	r2, [r3, #0]
 8009842:	68fb      	ldr	r3, [r7, #12]
 8009844:	681b      	ldr	r3, [r3, #0]
 8009846:	b292      	uxth	r2, r2
 8009848:	851a      	strh	r2, [r3, #40]	; 0x28
        pdata8bits++;
 800984a:	69fb      	ldr	r3, [r7, #28]
 800984c:	3301      	adds	r3, #1
 800984e:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 8009850:	68fb      	ldr	r3, [r7, #12]
 8009852:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8009856:	b29b      	uxth	r3, r3
 8009858:	3b01      	subs	r3, #1
 800985a:	b29a      	uxth	r2, r3
 800985c:	68fb      	ldr	r3, [r7, #12]
 800985e:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
    while (huart->TxXferCount > 0U)
 8009862:	68fb      	ldr	r3, [r7, #12]
 8009864:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8009868:	b29b      	uxth	r3, r3
 800986a:	2b00      	cmp	r3, #0
 800986c:	d1c8      	bne.n	8009800 <HAL_UART_Transmit+0x74>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 800986e:	683b      	ldr	r3, [r7, #0]
 8009870:	9300      	str	r3, [sp, #0]
 8009872:	697b      	ldr	r3, [r7, #20]
 8009874:	2200      	movs	r2, #0
 8009876:	2140      	movs	r1, #64	; 0x40
 8009878:	68f8      	ldr	r0, [r7, #12]
 800987a:	f000 fb36 	bl	8009eea <UART_WaitOnFlagUntilTimeout>
 800987e:	4603      	mov	r3, r0
 8009880:	2b00      	cmp	r3, #0
 8009882:	d004      	beq.n	800988e <HAL_UART_Transmit+0x102>
    {
      huart->gState = HAL_UART_STATE_READY;
 8009884:	68fb      	ldr	r3, [r7, #12]
 8009886:	2220      	movs	r2, #32
 8009888:	67da      	str	r2, [r3, #124]	; 0x7c

      return HAL_TIMEOUT;
 800988a:	2303      	movs	r3, #3
 800988c:	e005      	b.n	800989a <HAL_UART_Transmit+0x10e>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 800988e:	68fb      	ldr	r3, [r7, #12]
 8009890:	2220      	movs	r2, #32
 8009892:	67da      	str	r2, [r3, #124]	; 0x7c

    return HAL_OK;
 8009894:	2300      	movs	r3, #0
 8009896:	e000      	b.n	800989a <HAL_UART_Transmit+0x10e>
  }
  else
  {
    return HAL_BUSY;
 8009898:	2302      	movs	r3, #2
  }
}
 800989a:	4618      	mov	r0, r3
 800989c:	3720      	adds	r7, #32
 800989e:	46bd      	mov	sp, r7
 80098a0:	bd80      	pop	{r7, pc}
	...

080098a4 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 80098a4:	b580      	push	{r7, lr}
 80098a6:	b088      	sub	sp, #32
 80098a8:	af00      	add	r7, sp, #0
 80098aa:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 80098ac:	2300      	movs	r3, #0
 80098ae:	77bb      	strb	r3, [r7, #30]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80098b0:	687b      	ldr	r3, [r7, #4]
 80098b2:	689a      	ldr	r2, [r3, #8]
 80098b4:	687b      	ldr	r3, [r7, #4]
 80098b6:	691b      	ldr	r3, [r3, #16]
 80098b8:	431a      	orrs	r2, r3
 80098ba:	687b      	ldr	r3, [r7, #4]
 80098bc:	695b      	ldr	r3, [r3, #20]
 80098be:	431a      	orrs	r2, r3
 80098c0:	687b      	ldr	r3, [r7, #4]
 80098c2:	69db      	ldr	r3, [r3, #28]
 80098c4:	4313      	orrs	r3, r2
 80098c6:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80098c8:	687b      	ldr	r3, [r7, #4]
 80098ca:	681b      	ldr	r3, [r3, #0]
 80098cc:	681a      	ldr	r2, [r3, #0]
 80098ce:	4b93      	ldr	r3, [pc, #588]	; (8009b1c <UART_SetConfig+0x278>)
 80098d0:	4013      	ands	r3, r2
 80098d2:	687a      	ldr	r2, [r7, #4]
 80098d4:	6812      	ldr	r2, [r2, #0]
 80098d6:	6979      	ldr	r1, [r7, #20]
 80098d8:	430b      	orrs	r3, r1
 80098da:	6013      	str	r3, [r2, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80098dc:	687b      	ldr	r3, [r7, #4]
 80098de:	681b      	ldr	r3, [r3, #0]
 80098e0:	685b      	ldr	r3, [r3, #4]
 80098e2:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 80098e6:	687b      	ldr	r3, [r7, #4]
 80098e8:	68da      	ldr	r2, [r3, #12]
 80098ea:	687b      	ldr	r3, [r7, #4]
 80098ec:	681b      	ldr	r3, [r3, #0]
 80098ee:	430a      	orrs	r2, r1
 80098f0:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 80098f2:	687b      	ldr	r3, [r7, #4]
 80098f4:	699b      	ldr	r3, [r3, #24]
 80098f6:	617b      	str	r3, [r7, #20]

  tmpreg |= huart->Init.OneBitSampling;
 80098f8:	687b      	ldr	r3, [r7, #4]
 80098fa:	6a1b      	ldr	r3, [r3, #32]
 80098fc:	697a      	ldr	r2, [r7, #20]
 80098fe:	4313      	orrs	r3, r2
 8009900:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8009902:	687b      	ldr	r3, [r7, #4]
 8009904:	681b      	ldr	r3, [r3, #0]
 8009906:	689b      	ldr	r3, [r3, #8]
 8009908:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 800990c:	687b      	ldr	r3, [r7, #4]
 800990e:	681b      	ldr	r3, [r3, #0]
 8009910:	697a      	ldr	r2, [r7, #20]
 8009912:	430a      	orrs	r2, r1
 8009914:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 8009916:	687b      	ldr	r3, [r7, #4]
 8009918:	681b      	ldr	r3, [r3, #0]
 800991a:	4a81      	ldr	r2, [pc, #516]	; (8009b20 <UART_SetConfig+0x27c>)
 800991c:	4293      	cmp	r3, r2
 800991e:	d120      	bne.n	8009962 <UART_SetConfig+0xbe>
 8009920:	4b80      	ldr	r3, [pc, #512]	; (8009b24 <UART_SetConfig+0x280>)
 8009922:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009924:	f003 0303 	and.w	r3, r3, #3
 8009928:	2b03      	cmp	r3, #3
 800992a:	d817      	bhi.n	800995c <UART_SetConfig+0xb8>
 800992c:	a201      	add	r2, pc, #4	; (adr r2, 8009934 <UART_SetConfig+0x90>)
 800992e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009932:	bf00      	nop
 8009934:	08009945 	.word	0x08009945
 8009938:	08009951 	.word	0x08009951
 800993c:	08009957 	.word	0x08009957
 8009940:	0800994b 	.word	0x0800994b
 8009944:	2301      	movs	r3, #1
 8009946:	77fb      	strb	r3, [r7, #31]
 8009948:	e0b5      	b.n	8009ab6 <UART_SetConfig+0x212>
 800994a:	2302      	movs	r3, #2
 800994c:	77fb      	strb	r3, [r7, #31]
 800994e:	e0b2      	b.n	8009ab6 <UART_SetConfig+0x212>
 8009950:	2304      	movs	r3, #4
 8009952:	77fb      	strb	r3, [r7, #31]
 8009954:	e0af      	b.n	8009ab6 <UART_SetConfig+0x212>
 8009956:	2308      	movs	r3, #8
 8009958:	77fb      	strb	r3, [r7, #31]
 800995a:	e0ac      	b.n	8009ab6 <UART_SetConfig+0x212>
 800995c:	2310      	movs	r3, #16
 800995e:	77fb      	strb	r3, [r7, #31]
 8009960:	e0a9      	b.n	8009ab6 <UART_SetConfig+0x212>
 8009962:	687b      	ldr	r3, [r7, #4]
 8009964:	681b      	ldr	r3, [r3, #0]
 8009966:	4a70      	ldr	r2, [pc, #448]	; (8009b28 <UART_SetConfig+0x284>)
 8009968:	4293      	cmp	r3, r2
 800996a:	d124      	bne.n	80099b6 <UART_SetConfig+0x112>
 800996c:	4b6d      	ldr	r3, [pc, #436]	; (8009b24 <UART_SetConfig+0x280>)
 800996e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009970:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8009974:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8009978:	d011      	beq.n	800999e <UART_SetConfig+0xfa>
 800997a:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 800997e:	d817      	bhi.n	80099b0 <UART_SetConfig+0x10c>
 8009980:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009984:	d011      	beq.n	80099aa <UART_SetConfig+0x106>
 8009986:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800998a:	d811      	bhi.n	80099b0 <UART_SetConfig+0x10c>
 800998c:	2b00      	cmp	r3, #0
 800998e:	d003      	beq.n	8009998 <UART_SetConfig+0xf4>
 8009990:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009994:	d006      	beq.n	80099a4 <UART_SetConfig+0x100>
 8009996:	e00b      	b.n	80099b0 <UART_SetConfig+0x10c>
 8009998:	2300      	movs	r3, #0
 800999a:	77fb      	strb	r3, [r7, #31]
 800999c:	e08b      	b.n	8009ab6 <UART_SetConfig+0x212>
 800999e:	2302      	movs	r3, #2
 80099a0:	77fb      	strb	r3, [r7, #31]
 80099a2:	e088      	b.n	8009ab6 <UART_SetConfig+0x212>
 80099a4:	2304      	movs	r3, #4
 80099a6:	77fb      	strb	r3, [r7, #31]
 80099a8:	e085      	b.n	8009ab6 <UART_SetConfig+0x212>
 80099aa:	2308      	movs	r3, #8
 80099ac:	77fb      	strb	r3, [r7, #31]
 80099ae:	e082      	b.n	8009ab6 <UART_SetConfig+0x212>
 80099b0:	2310      	movs	r3, #16
 80099b2:	77fb      	strb	r3, [r7, #31]
 80099b4:	e07f      	b.n	8009ab6 <UART_SetConfig+0x212>
 80099b6:	687b      	ldr	r3, [r7, #4]
 80099b8:	681b      	ldr	r3, [r3, #0]
 80099ba:	4a5c      	ldr	r2, [pc, #368]	; (8009b2c <UART_SetConfig+0x288>)
 80099bc:	4293      	cmp	r3, r2
 80099be:	d124      	bne.n	8009a0a <UART_SetConfig+0x166>
 80099c0:	4b58      	ldr	r3, [pc, #352]	; (8009b24 <UART_SetConfig+0x280>)
 80099c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80099c4:	f403 2340 	and.w	r3, r3, #786432	; 0xc0000
 80099c8:	f5b3 2f40 	cmp.w	r3, #786432	; 0xc0000
 80099cc:	d011      	beq.n	80099f2 <UART_SetConfig+0x14e>
 80099ce:	f5b3 2f40 	cmp.w	r3, #786432	; 0xc0000
 80099d2:	d817      	bhi.n	8009a04 <UART_SetConfig+0x160>
 80099d4:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 80099d8:	d011      	beq.n	80099fe <UART_SetConfig+0x15a>
 80099da:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 80099de:	d811      	bhi.n	8009a04 <UART_SetConfig+0x160>
 80099e0:	2b00      	cmp	r3, #0
 80099e2:	d003      	beq.n	80099ec <UART_SetConfig+0x148>
 80099e4:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 80099e8:	d006      	beq.n	80099f8 <UART_SetConfig+0x154>
 80099ea:	e00b      	b.n	8009a04 <UART_SetConfig+0x160>
 80099ec:	2300      	movs	r3, #0
 80099ee:	77fb      	strb	r3, [r7, #31]
 80099f0:	e061      	b.n	8009ab6 <UART_SetConfig+0x212>
 80099f2:	2302      	movs	r3, #2
 80099f4:	77fb      	strb	r3, [r7, #31]
 80099f6:	e05e      	b.n	8009ab6 <UART_SetConfig+0x212>
 80099f8:	2304      	movs	r3, #4
 80099fa:	77fb      	strb	r3, [r7, #31]
 80099fc:	e05b      	b.n	8009ab6 <UART_SetConfig+0x212>
 80099fe:	2308      	movs	r3, #8
 8009a00:	77fb      	strb	r3, [r7, #31]
 8009a02:	e058      	b.n	8009ab6 <UART_SetConfig+0x212>
 8009a04:	2310      	movs	r3, #16
 8009a06:	77fb      	strb	r3, [r7, #31]
 8009a08:	e055      	b.n	8009ab6 <UART_SetConfig+0x212>
 8009a0a:	687b      	ldr	r3, [r7, #4]
 8009a0c:	681b      	ldr	r3, [r3, #0]
 8009a0e:	4a48      	ldr	r2, [pc, #288]	; (8009b30 <UART_SetConfig+0x28c>)
 8009a10:	4293      	cmp	r3, r2
 8009a12:	d124      	bne.n	8009a5e <UART_SetConfig+0x1ba>
 8009a14:	4b43      	ldr	r3, [pc, #268]	; (8009b24 <UART_SetConfig+0x280>)
 8009a16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009a18:	f403 1340 	and.w	r3, r3, #3145728	; 0x300000
 8009a1c:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8009a20:	d011      	beq.n	8009a46 <UART_SetConfig+0x1a2>
 8009a22:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8009a26:	d817      	bhi.n	8009a58 <UART_SetConfig+0x1b4>
 8009a28:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8009a2c:	d011      	beq.n	8009a52 <UART_SetConfig+0x1ae>
 8009a2e:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8009a32:	d811      	bhi.n	8009a58 <UART_SetConfig+0x1b4>
 8009a34:	2b00      	cmp	r3, #0
 8009a36:	d003      	beq.n	8009a40 <UART_SetConfig+0x19c>
 8009a38:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8009a3c:	d006      	beq.n	8009a4c <UART_SetConfig+0x1a8>
 8009a3e:	e00b      	b.n	8009a58 <UART_SetConfig+0x1b4>
 8009a40:	2300      	movs	r3, #0
 8009a42:	77fb      	strb	r3, [r7, #31]
 8009a44:	e037      	b.n	8009ab6 <UART_SetConfig+0x212>
 8009a46:	2302      	movs	r3, #2
 8009a48:	77fb      	strb	r3, [r7, #31]
 8009a4a:	e034      	b.n	8009ab6 <UART_SetConfig+0x212>
 8009a4c:	2304      	movs	r3, #4
 8009a4e:	77fb      	strb	r3, [r7, #31]
 8009a50:	e031      	b.n	8009ab6 <UART_SetConfig+0x212>
 8009a52:	2308      	movs	r3, #8
 8009a54:	77fb      	strb	r3, [r7, #31]
 8009a56:	e02e      	b.n	8009ab6 <UART_SetConfig+0x212>
 8009a58:	2310      	movs	r3, #16
 8009a5a:	77fb      	strb	r3, [r7, #31]
 8009a5c:	e02b      	b.n	8009ab6 <UART_SetConfig+0x212>
 8009a5e:	687b      	ldr	r3, [r7, #4]
 8009a60:	681b      	ldr	r3, [r3, #0]
 8009a62:	4a34      	ldr	r2, [pc, #208]	; (8009b34 <UART_SetConfig+0x290>)
 8009a64:	4293      	cmp	r3, r2
 8009a66:	d124      	bne.n	8009ab2 <UART_SetConfig+0x20e>
 8009a68:	4b2e      	ldr	r3, [pc, #184]	; (8009b24 <UART_SetConfig+0x280>)
 8009a6a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009a6c:	f403 0340 	and.w	r3, r3, #12582912	; 0xc00000
 8009a70:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 8009a74:	d011      	beq.n	8009a9a <UART_SetConfig+0x1f6>
 8009a76:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 8009a7a:	d817      	bhi.n	8009aac <UART_SetConfig+0x208>
 8009a7c:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8009a80:	d011      	beq.n	8009aa6 <UART_SetConfig+0x202>
 8009a82:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8009a86:	d811      	bhi.n	8009aac <UART_SetConfig+0x208>
 8009a88:	2b00      	cmp	r3, #0
 8009a8a:	d003      	beq.n	8009a94 <UART_SetConfig+0x1f0>
 8009a8c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8009a90:	d006      	beq.n	8009aa0 <UART_SetConfig+0x1fc>
 8009a92:	e00b      	b.n	8009aac <UART_SetConfig+0x208>
 8009a94:	2300      	movs	r3, #0
 8009a96:	77fb      	strb	r3, [r7, #31]
 8009a98:	e00d      	b.n	8009ab6 <UART_SetConfig+0x212>
 8009a9a:	2302      	movs	r3, #2
 8009a9c:	77fb      	strb	r3, [r7, #31]
 8009a9e:	e00a      	b.n	8009ab6 <UART_SetConfig+0x212>
 8009aa0:	2304      	movs	r3, #4
 8009aa2:	77fb      	strb	r3, [r7, #31]
 8009aa4:	e007      	b.n	8009ab6 <UART_SetConfig+0x212>
 8009aa6:	2308      	movs	r3, #8
 8009aa8:	77fb      	strb	r3, [r7, #31]
 8009aaa:	e004      	b.n	8009ab6 <UART_SetConfig+0x212>
 8009aac:	2310      	movs	r3, #16
 8009aae:	77fb      	strb	r3, [r7, #31]
 8009ab0:	e001      	b.n	8009ab6 <UART_SetConfig+0x212>
 8009ab2:	2310      	movs	r3, #16
 8009ab4:	77fb      	strb	r3, [r7, #31]

  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8009ab6:	687b      	ldr	r3, [r7, #4]
 8009ab8:	69db      	ldr	r3, [r3, #28]
 8009aba:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8009abe:	d16d      	bne.n	8009b9c <UART_SetConfig+0x2f8>
  {
    switch (clocksource)
 8009ac0:	7ffb      	ldrb	r3, [r7, #31]
 8009ac2:	2b08      	cmp	r3, #8
 8009ac4:	d83a      	bhi.n	8009b3c <UART_SetConfig+0x298>
 8009ac6:	a201      	add	r2, pc, #4	; (adr r2, 8009acc <UART_SetConfig+0x228>)
 8009ac8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009acc:	08009af1 	.word	0x08009af1
 8009ad0:	08009afb 	.word	0x08009afb
 8009ad4:	08009b05 	.word	0x08009b05
 8009ad8:	08009b3d 	.word	0x08009b3d
 8009adc:	08009b0b 	.word	0x08009b0b
 8009ae0:	08009b3d 	.word	0x08009b3d
 8009ae4:	08009b3d 	.word	0x08009b3d
 8009ae8:	08009b3d 	.word	0x08009b3d
 8009aec:	08009b15 	.word	0x08009b15
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8009af0:	f7ff fb9a 	bl	8009228 <HAL_RCC_GetPCLK1Freq>
 8009af4:	4603      	mov	r3, r0
 8009af6:	61bb      	str	r3, [r7, #24]
        break;
 8009af8:	e025      	b.n	8009b46 <UART_SetConfig+0x2a2>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 8009afa:	f7ff fbb7 	bl	800926c <HAL_RCC_GetPCLK2Freq>
 8009afe:	4603      	mov	r3, r0
 8009b00:	61bb      	str	r3, [r7, #24]
        break;
 8009b02:	e020      	b.n	8009b46 <UART_SetConfig+0x2a2>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8009b04:	4b0c      	ldr	r3, [pc, #48]	; (8009b38 <UART_SetConfig+0x294>)
 8009b06:	61bb      	str	r3, [r7, #24]
        break;
 8009b08:	e01d      	b.n	8009b46 <UART_SetConfig+0x2a2>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8009b0a:	f7ff fb17 	bl	800913c <HAL_RCC_GetSysClockFreq>
 8009b0e:	4603      	mov	r3, r0
 8009b10:	61bb      	str	r3, [r7, #24]
        break;
 8009b12:	e018      	b.n	8009b46 <UART_SetConfig+0x2a2>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8009b14:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8009b18:	61bb      	str	r3, [r7, #24]
        break;
 8009b1a:	e014      	b.n	8009b46 <UART_SetConfig+0x2a2>
 8009b1c:	efff69f3 	.word	0xefff69f3
 8009b20:	40013800 	.word	0x40013800
 8009b24:	40021000 	.word	0x40021000
 8009b28:	40004400 	.word	0x40004400
 8009b2c:	40004800 	.word	0x40004800
 8009b30:	40004c00 	.word	0x40004c00
 8009b34:	40005000 	.word	0x40005000
 8009b38:	007a1200 	.word	0x007a1200
      default:
        pclk = 0U;
 8009b3c:	2300      	movs	r3, #0
 8009b3e:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 8009b40:	2301      	movs	r3, #1
 8009b42:	77bb      	strb	r3, [r7, #30]
        break;
 8009b44:	bf00      	nop
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 8009b46:	69bb      	ldr	r3, [r7, #24]
 8009b48:	2b00      	cmp	r3, #0
 8009b4a:	d076      	beq.n	8009c3a <UART_SetConfig+0x396>
    {
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8009b4c:	69bb      	ldr	r3, [r7, #24]
 8009b4e:	005a      	lsls	r2, r3, #1
 8009b50:	687b      	ldr	r3, [r7, #4]
 8009b52:	685b      	ldr	r3, [r3, #4]
 8009b54:	085b      	lsrs	r3, r3, #1
 8009b56:	441a      	add	r2, r3
 8009b58:	687b      	ldr	r3, [r7, #4]
 8009b5a:	685b      	ldr	r3, [r3, #4]
 8009b5c:	fbb2 f3f3 	udiv	r3, r2, r3
 8009b60:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8009b62:	693b      	ldr	r3, [r7, #16]
 8009b64:	2b0f      	cmp	r3, #15
 8009b66:	d916      	bls.n	8009b96 <UART_SetConfig+0x2f2>
 8009b68:	693b      	ldr	r3, [r7, #16]
 8009b6a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009b6e:	d212      	bcs.n	8009b96 <UART_SetConfig+0x2f2>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8009b70:	693b      	ldr	r3, [r7, #16]
 8009b72:	b29b      	uxth	r3, r3
 8009b74:	f023 030f 	bic.w	r3, r3, #15
 8009b78:	81fb      	strh	r3, [r7, #14]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8009b7a:	693b      	ldr	r3, [r7, #16]
 8009b7c:	085b      	lsrs	r3, r3, #1
 8009b7e:	b29b      	uxth	r3, r3
 8009b80:	f003 0307 	and.w	r3, r3, #7
 8009b84:	b29a      	uxth	r2, r3
 8009b86:	89fb      	ldrh	r3, [r7, #14]
 8009b88:	4313      	orrs	r3, r2
 8009b8a:	81fb      	strh	r3, [r7, #14]
        huart->Instance->BRR = brrtemp;
 8009b8c:	687b      	ldr	r3, [r7, #4]
 8009b8e:	681b      	ldr	r3, [r3, #0]
 8009b90:	89fa      	ldrh	r2, [r7, #14]
 8009b92:	60da      	str	r2, [r3, #12]
 8009b94:	e051      	b.n	8009c3a <UART_SetConfig+0x396>
      }
      else
      {
        ret = HAL_ERROR;
 8009b96:	2301      	movs	r3, #1
 8009b98:	77bb      	strb	r3, [r7, #30]
 8009b9a:	e04e      	b.n	8009c3a <UART_SetConfig+0x396>
      }
    }
  }
  else
  {
    switch (clocksource)
 8009b9c:	7ffb      	ldrb	r3, [r7, #31]
 8009b9e:	2b08      	cmp	r3, #8
 8009ba0:	d82a      	bhi.n	8009bf8 <UART_SetConfig+0x354>
 8009ba2:	a201      	add	r2, pc, #4	; (adr r2, 8009ba8 <UART_SetConfig+0x304>)
 8009ba4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009ba8:	08009bcd 	.word	0x08009bcd
 8009bac:	08009bd7 	.word	0x08009bd7
 8009bb0:	08009be1 	.word	0x08009be1
 8009bb4:	08009bf9 	.word	0x08009bf9
 8009bb8:	08009be7 	.word	0x08009be7
 8009bbc:	08009bf9 	.word	0x08009bf9
 8009bc0:	08009bf9 	.word	0x08009bf9
 8009bc4:	08009bf9 	.word	0x08009bf9
 8009bc8:	08009bf1 	.word	0x08009bf1
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8009bcc:	f7ff fb2c 	bl	8009228 <HAL_RCC_GetPCLK1Freq>
 8009bd0:	4603      	mov	r3, r0
 8009bd2:	61bb      	str	r3, [r7, #24]
        break;
 8009bd4:	e015      	b.n	8009c02 <UART_SetConfig+0x35e>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 8009bd6:	f7ff fb49 	bl	800926c <HAL_RCC_GetPCLK2Freq>
 8009bda:	4603      	mov	r3, r0
 8009bdc:	61bb      	str	r3, [r7, #24]
        break;
 8009bde:	e010      	b.n	8009c02 <UART_SetConfig+0x35e>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8009be0:	4b1b      	ldr	r3, [pc, #108]	; (8009c50 <UART_SetConfig+0x3ac>)
 8009be2:	61bb      	str	r3, [r7, #24]
        break;
 8009be4:	e00d      	b.n	8009c02 <UART_SetConfig+0x35e>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8009be6:	f7ff faa9 	bl	800913c <HAL_RCC_GetSysClockFreq>
 8009bea:	4603      	mov	r3, r0
 8009bec:	61bb      	str	r3, [r7, #24]
        break;
 8009bee:	e008      	b.n	8009c02 <UART_SetConfig+0x35e>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8009bf0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8009bf4:	61bb      	str	r3, [r7, #24]
        break;
 8009bf6:	e004      	b.n	8009c02 <UART_SetConfig+0x35e>
      default:
        pclk = 0U;
 8009bf8:	2300      	movs	r3, #0
 8009bfa:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 8009bfc:	2301      	movs	r3, #1
 8009bfe:	77bb      	strb	r3, [r7, #30]
        break;
 8009c00:	bf00      	nop
    }

    if (pclk != 0U)
 8009c02:	69bb      	ldr	r3, [r7, #24]
 8009c04:	2b00      	cmp	r3, #0
 8009c06:	d018      	beq.n	8009c3a <UART_SetConfig+0x396>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8009c08:	687b      	ldr	r3, [r7, #4]
 8009c0a:	685b      	ldr	r3, [r3, #4]
 8009c0c:	085a      	lsrs	r2, r3, #1
 8009c0e:	69bb      	ldr	r3, [r7, #24]
 8009c10:	441a      	add	r2, r3
 8009c12:	687b      	ldr	r3, [r7, #4]
 8009c14:	685b      	ldr	r3, [r3, #4]
 8009c16:	fbb2 f3f3 	udiv	r3, r2, r3
 8009c1a:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8009c1c:	693b      	ldr	r3, [r7, #16]
 8009c1e:	2b0f      	cmp	r3, #15
 8009c20:	d909      	bls.n	8009c36 <UART_SetConfig+0x392>
 8009c22:	693b      	ldr	r3, [r7, #16]
 8009c24:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009c28:	d205      	bcs.n	8009c36 <UART_SetConfig+0x392>
      {
        huart->Instance->BRR = (uint16_t)usartdiv;
 8009c2a:	693b      	ldr	r3, [r7, #16]
 8009c2c:	b29a      	uxth	r2, r3
 8009c2e:	687b      	ldr	r3, [r7, #4]
 8009c30:	681b      	ldr	r3, [r3, #0]
 8009c32:	60da      	str	r2, [r3, #12]
 8009c34:	e001      	b.n	8009c3a <UART_SetConfig+0x396>
      }
      else
      {
        ret = HAL_ERROR;
 8009c36:	2301      	movs	r3, #1
 8009c38:	77bb      	strb	r3, [r7, #30]
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 8009c3a:	687b      	ldr	r3, [r7, #4]
 8009c3c:	2200      	movs	r2, #0
 8009c3e:	669a      	str	r2, [r3, #104]	; 0x68
  huart->TxISR = NULL;
 8009c40:	687b      	ldr	r3, [r7, #4]
 8009c42:	2200      	movs	r2, #0
 8009c44:	66da      	str	r2, [r3, #108]	; 0x6c

  return ret;
 8009c46:	7fbb      	ldrb	r3, [r7, #30]
}
 8009c48:	4618      	mov	r0, r3
 8009c4a:	3720      	adds	r7, #32
 8009c4c:	46bd      	mov	sp, r7
 8009c4e:	bd80      	pop	{r7, pc}
 8009c50:	007a1200 	.word	0x007a1200

08009c54 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 8009c54:	b480      	push	{r7}
 8009c56:	b083      	sub	sp, #12
 8009c58:	af00      	add	r7, sp, #0
 8009c5a:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8009c5c:	687b      	ldr	r3, [r7, #4]
 8009c5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009c60:	f003 0301 	and.w	r3, r3, #1
 8009c64:	2b00      	cmp	r3, #0
 8009c66:	d00a      	beq.n	8009c7e <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8009c68:	687b      	ldr	r3, [r7, #4]
 8009c6a:	681b      	ldr	r3, [r3, #0]
 8009c6c:	685b      	ldr	r3, [r3, #4]
 8009c6e:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 8009c72:	687b      	ldr	r3, [r7, #4]
 8009c74:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8009c76:	687b      	ldr	r3, [r7, #4]
 8009c78:	681b      	ldr	r3, [r3, #0]
 8009c7a:	430a      	orrs	r2, r1
 8009c7c:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8009c7e:	687b      	ldr	r3, [r7, #4]
 8009c80:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009c82:	f003 0302 	and.w	r3, r3, #2
 8009c86:	2b00      	cmp	r3, #0
 8009c88:	d00a      	beq.n	8009ca0 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8009c8a:	687b      	ldr	r3, [r7, #4]
 8009c8c:	681b      	ldr	r3, [r3, #0]
 8009c8e:	685b      	ldr	r3, [r3, #4]
 8009c90:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8009c94:	687b      	ldr	r3, [r7, #4]
 8009c96:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009c98:	687b      	ldr	r3, [r7, #4]
 8009c9a:	681b      	ldr	r3, [r3, #0]
 8009c9c:	430a      	orrs	r2, r1
 8009c9e:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8009ca0:	687b      	ldr	r3, [r7, #4]
 8009ca2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009ca4:	f003 0304 	and.w	r3, r3, #4
 8009ca8:	2b00      	cmp	r3, #0
 8009caa:	d00a      	beq.n	8009cc2 <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8009cac:	687b      	ldr	r3, [r7, #4]
 8009cae:	681b      	ldr	r3, [r3, #0]
 8009cb0:	685b      	ldr	r3, [r3, #4]
 8009cb2:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 8009cb6:	687b      	ldr	r3, [r7, #4]
 8009cb8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009cba:	687b      	ldr	r3, [r7, #4]
 8009cbc:	681b      	ldr	r3, [r3, #0]
 8009cbe:	430a      	orrs	r2, r1
 8009cc0:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8009cc2:	687b      	ldr	r3, [r7, #4]
 8009cc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009cc6:	f003 0308 	and.w	r3, r3, #8
 8009cca:	2b00      	cmp	r3, #0
 8009ccc:	d00a      	beq.n	8009ce4 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8009cce:	687b      	ldr	r3, [r7, #4]
 8009cd0:	681b      	ldr	r3, [r3, #0]
 8009cd2:	685b      	ldr	r3, [r3, #4]
 8009cd4:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 8009cd8:	687b      	ldr	r3, [r7, #4]
 8009cda:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009cdc:	687b      	ldr	r3, [r7, #4]
 8009cde:	681b      	ldr	r3, [r3, #0]
 8009ce0:	430a      	orrs	r2, r1
 8009ce2:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8009ce4:	687b      	ldr	r3, [r7, #4]
 8009ce6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009ce8:	f003 0310 	and.w	r3, r3, #16
 8009cec:	2b00      	cmp	r3, #0
 8009cee:	d00a      	beq.n	8009d06 <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8009cf0:	687b      	ldr	r3, [r7, #4]
 8009cf2:	681b      	ldr	r3, [r3, #0]
 8009cf4:	689b      	ldr	r3, [r3, #8]
 8009cf6:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 8009cfa:	687b      	ldr	r3, [r7, #4]
 8009cfc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009cfe:	687b      	ldr	r3, [r7, #4]
 8009d00:	681b      	ldr	r3, [r3, #0]
 8009d02:	430a      	orrs	r2, r1
 8009d04:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8009d06:	687b      	ldr	r3, [r7, #4]
 8009d08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009d0a:	f003 0320 	and.w	r3, r3, #32
 8009d0e:	2b00      	cmp	r3, #0
 8009d10:	d00a      	beq.n	8009d28 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8009d12:	687b      	ldr	r3, [r7, #4]
 8009d14:	681b      	ldr	r3, [r3, #0]
 8009d16:	689b      	ldr	r3, [r3, #8]
 8009d18:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 8009d1c:	687b      	ldr	r3, [r7, #4]
 8009d1e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8009d20:	687b      	ldr	r3, [r7, #4]
 8009d22:	681b      	ldr	r3, [r3, #0]
 8009d24:	430a      	orrs	r2, r1
 8009d26:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8009d28:	687b      	ldr	r3, [r7, #4]
 8009d2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009d2c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009d30:	2b00      	cmp	r3, #0
 8009d32:	d01a      	beq.n	8009d6a <UART_AdvFeatureConfig+0x116>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8009d34:	687b      	ldr	r3, [r7, #4]
 8009d36:	681b      	ldr	r3, [r3, #0]
 8009d38:	685b      	ldr	r3, [r3, #4]
 8009d3a:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 8009d3e:	687b      	ldr	r3, [r7, #4]
 8009d40:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8009d42:	687b      	ldr	r3, [r7, #4]
 8009d44:	681b      	ldr	r3, [r3, #0]
 8009d46:	430a      	orrs	r2, r1
 8009d48:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8009d4a:	687b      	ldr	r3, [r7, #4]
 8009d4c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009d4e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8009d52:	d10a      	bne.n	8009d6a <UART_AdvFeatureConfig+0x116>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8009d54:	687b      	ldr	r3, [r7, #4]
 8009d56:	681b      	ldr	r3, [r3, #0]
 8009d58:	685b      	ldr	r3, [r3, #4]
 8009d5a:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 8009d5e:	687b      	ldr	r3, [r7, #4]
 8009d60:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8009d62:	687b      	ldr	r3, [r7, #4]
 8009d64:	681b      	ldr	r3, [r3, #0]
 8009d66:	430a      	orrs	r2, r1
 8009d68:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8009d6a:	687b      	ldr	r3, [r7, #4]
 8009d6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009d6e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009d72:	2b00      	cmp	r3, #0
 8009d74:	d00a      	beq.n	8009d8c <UART_AdvFeatureConfig+0x138>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8009d76:	687b      	ldr	r3, [r7, #4]
 8009d78:	681b      	ldr	r3, [r3, #0]
 8009d7a:	685b      	ldr	r3, [r3, #4]
 8009d7c:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 8009d80:	687b      	ldr	r3, [r7, #4]
 8009d82:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8009d84:	687b      	ldr	r3, [r7, #4]
 8009d86:	681b      	ldr	r3, [r3, #0]
 8009d88:	430a      	orrs	r2, r1
 8009d8a:	605a      	str	r2, [r3, #4]
  }
}
 8009d8c:	bf00      	nop
 8009d8e:	370c      	adds	r7, #12
 8009d90:	46bd      	mov	sp, r7
 8009d92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d96:	4770      	bx	lr

08009d98 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 8009d98:	b580      	push	{r7, lr}
 8009d9a:	b098      	sub	sp, #96	; 0x60
 8009d9c:	af02      	add	r7, sp, #8
 8009d9e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8009da0:	687b      	ldr	r3, [r7, #4]
 8009da2:	2200      	movs	r2, #0
 8009da4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 8009da8:	f7fd fd6e 	bl	8007888 <HAL_GetTick>
 8009dac:	4603      	mov	r3, r0
 8009dae:	657b      	str	r3, [r7, #84]	; 0x54

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8009db0:	687b      	ldr	r3, [r7, #4]
 8009db2:	681b      	ldr	r3, [r3, #0]
 8009db4:	681b      	ldr	r3, [r3, #0]
 8009db6:	f003 0308 	and.w	r3, r3, #8
 8009dba:	2b08      	cmp	r3, #8
 8009dbc:	d12e      	bne.n	8009e1c <UART_CheckIdleState+0x84>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8009dbe:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8009dc2:	9300      	str	r3, [sp, #0]
 8009dc4:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8009dc6:	2200      	movs	r2, #0
 8009dc8:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8009dcc:	6878      	ldr	r0, [r7, #4]
 8009dce:	f000 f88c 	bl	8009eea <UART_WaitOnFlagUntilTimeout>
 8009dd2:	4603      	mov	r3, r0
 8009dd4:	2b00      	cmp	r3, #0
 8009dd6:	d021      	beq.n	8009e1c <UART_CheckIdleState+0x84>
    {
      /* Disable TXE interrupt for the interrupt process */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE));
 8009dd8:	687b      	ldr	r3, [r7, #4]
 8009dda:	681b      	ldr	r3, [r3, #0]
 8009ddc:	63bb      	str	r3, [r7, #56]	; 0x38
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009dde:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009de0:	e853 3f00 	ldrex	r3, [r3]
 8009de4:	637b      	str	r3, [r7, #52]	; 0x34
   return(result);
 8009de6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009de8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8009dec:	653b      	str	r3, [r7, #80]	; 0x50
 8009dee:	687b      	ldr	r3, [r7, #4]
 8009df0:	681b      	ldr	r3, [r3, #0]
 8009df2:	461a      	mov	r2, r3
 8009df4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8009df6:	647b      	str	r3, [r7, #68]	; 0x44
 8009df8:	643a      	str	r2, [r7, #64]	; 0x40
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009dfa:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8009dfc:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8009dfe:	e841 2300 	strex	r3, r2, [r1]
 8009e02:	63fb      	str	r3, [r7, #60]	; 0x3c
   return(result);
 8009e04:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8009e06:	2b00      	cmp	r3, #0
 8009e08:	d1e6      	bne.n	8009dd8 <UART_CheckIdleState+0x40>

      huart->gState = HAL_UART_STATE_READY;
 8009e0a:	687b      	ldr	r3, [r7, #4]
 8009e0c:	2220      	movs	r2, #32
 8009e0e:	67da      	str	r2, [r3, #124]	; 0x7c

      __HAL_UNLOCK(huart);
 8009e10:	687b      	ldr	r3, [r7, #4]
 8009e12:	2200      	movs	r2, #0
 8009e14:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78

      /* Timeout occurred */
      return HAL_TIMEOUT;
 8009e18:	2303      	movs	r3, #3
 8009e1a:	e062      	b.n	8009ee2 <UART_CheckIdleState+0x14a>
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 8009e1c:	687b      	ldr	r3, [r7, #4]
 8009e1e:	681b      	ldr	r3, [r3, #0]
 8009e20:	681b      	ldr	r3, [r3, #0]
 8009e22:	f003 0304 	and.w	r3, r3, #4
 8009e26:	2b04      	cmp	r3, #4
 8009e28:	d149      	bne.n	8009ebe <UART_CheckIdleState+0x126>
  {
    /* Wait until REACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8009e2a:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8009e2e:	9300      	str	r3, [sp, #0]
 8009e30:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8009e32:	2200      	movs	r2, #0
 8009e34:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8009e38:	6878      	ldr	r0, [r7, #4]
 8009e3a:	f000 f856 	bl	8009eea <UART_WaitOnFlagUntilTimeout>
 8009e3e:	4603      	mov	r3, r0
 8009e40:	2b00      	cmp	r3, #0
 8009e42:	d03c      	beq.n	8009ebe <UART_CheckIdleState+0x126>
    {
      /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error)
      interrupts for the interrupt process */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8009e44:	687b      	ldr	r3, [r7, #4]
 8009e46:	681b      	ldr	r3, [r3, #0]
 8009e48:	627b      	str	r3, [r7, #36]	; 0x24
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009e4a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009e4c:	e853 3f00 	ldrex	r3, [r3]
 8009e50:	623b      	str	r3, [r7, #32]
   return(result);
 8009e52:	6a3b      	ldr	r3, [r7, #32]
 8009e54:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8009e58:	64fb      	str	r3, [r7, #76]	; 0x4c
 8009e5a:	687b      	ldr	r3, [r7, #4]
 8009e5c:	681b      	ldr	r3, [r3, #0]
 8009e5e:	461a      	mov	r2, r3
 8009e60:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8009e62:	633b      	str	r3, [r7, #48]	; 0x30
 8009e64:	62fa      	str	r2, [r7, #44]	; 0x2c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009e66:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8009e68:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8009e6a:	e841 2300 	strex	r3, r2, [r1]
 8009e6e:	62bb      	str	r3, [r7, #40]	; 0x28
   return(result);
 8009e70:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009e72:	2b00      	cmp	r3, #0
 8009e74:	d1e6      	bne.n	8009e44 <UART_CheckIdleState+0xac>
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8009e76:	687b      	ldr	r3, [r7, #4]
 8009e78:	681b      	ldr	r3, [r3, #0]
 8009e7a:	3308      	adds	r3, #8
 8009e7c:	613b      	str	r3, [r7, #16]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009e7e:	693b      	ldr	r3, [r7, #16]
 8009e80:	e853 3f00 	ldrex	r3, [r3]
 8009e84:	60fb      	str	r3, [r7, #12]
   return(result);
 8009e86:	68fb      	ldr	r3, [r7, #12]
 8009e88:	f023 0301 	bic.w	r3, r3, #1
 8009e8c:	64bb      	str	r3, [r7, #72]	; 0x48
 8009e8e:	687b      	ldr	r3, [r7, #4]
 8009e90:	681b      	ldr	r3, [r3, #0]
 8009e92:	3308      	adds	r3, #8
 8009e94:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8009e96:	61fa      	str	r2, [r7, #28]
 8009e98:	61bb      	str	r3, [r7, #24]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009e9a:	69b9      	ldr	r1, [r7, #24]
 8009e9c:	69fa      	ldr	r2, [r7, #28]
 8009e9e:	e841 2300 	strex	r3, r2, [r1]
 8009ea2:	617b      	str	r3, [r7, #20]
   return(result);
 8009ea4:	697b      	ldr	r3, [r7, #20]
 8009ea6:	2b00      	cmp	r3, #0
 8009ea8:	d1e5      	bne.n	8009e76 <UART_CheckIdleState+0xde>

      huart->RxState = HAL_UART_STATE_READY;
 8009eaa:	687b      	ldr	r3, [r7, #4]
 8009eac:	2220      	movs	r2, #32
 8009eae:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

      __HAL_UNLOCK(huart);
 8009eb2:	687b      	ldr	r3, [r7, #4]
 8009eb4:	2200      	movs	r2, #0
 8009eb6:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78

      /* Timeout occurred */
      return HAL_TIMEOUT;
 8009eba:	2303      	movs	r3, #3
 8009ebc:	e011      	b.n	8009ee2 <UART_CheckIdleState+0x14a>
    }
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 8009ebe:	687b      	ldr	r3, [r7, #4]
 8009ec0:	2220      	movs	r2, #32
 8009ec2:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->RxState = HAL_UART_STATE_READY;
 8009ec4:	687b      	ldr	r3, [r7, #4]
 8009ec6:	2220      	movs	r2, #32
 8009ec8:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8009ecc:	687b      	ldr	r3, [r7, #4]
 8009ece:	2200      	movs	r2, #0
 8009ed0:	661a      	str	r2, [r3, #96]	; 0x60
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8009ed2:	687b      	ldr	r3, [r7, #4]
 8009ed4:	2200      	movs	r2, #0
 8009ed6:	665a      	str	r2, [r3, #100]	; 0x64

  __HAL_UNLOCK(huart);
 8009ed8:	687b      	ldr	r3, [r7, #4]
 8009eda:	2200      	movs	r2, #0
 8009edc:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78

  return HAL_OK;
 8009ee0:	2300      	movs	r3, #0
}
 8009ee2:	4618      	mov	r0, r3
 8009ee4:	3758      	adds	r7, #88	; 0x58
 8009ee6:	46bd      	mov	sp, r7
 8009ee8:	bd80      	pop	{r7, pc}

08009eea <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 8009eea:	b580      	push	{r7, lr}
 8009eec:	b084      	sub	sp, #16
 8009eee:	af00      	add	r7, sp, #0
 8009ef0:	60f8      	str	r0, [r7, #12]
 8009ef2:	60b9      	str	r1, [r7, #8]
 8009ef4:	603b      	str	r3, [r7, #0]
 8009ef6:	4613      	mov	r3, r2
 8009ef8:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8009efa:	e049      	b.n	8009f90 <UART_WaitOnFlagUntilTimeout+0xa6>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8009efc:	69bb      	ldr	r3, [r7, #24]
 8009efe:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009f02:	d045      	beq.n	8009f90 <UART_WaitOnFlagUntilTimeout+0xa6>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009f04:	f7fd fcc0 	bl	8007888 <HAL_GetTick>
 8009f08:	4602      	mov	r2, r0
 8009f0a:	683b      	ldr	r3, [r7, #0]
 8009f0c:	1ad3      	subs	r3, r2, r3
 8009f0e:	69ba      	ldr	r2, [r7, #24]
 8009f10:	429a      	cmp	r2, r3
 8009f12:	d302      	bcc.n	8009f1a <UART_WaitOnFlagUntilTimeout+0x30>
 8009f14:	69bb      	ldr	r3, [r7, #24]
 8009f16:	2b00      	cmp	r3, #0
 8009f18:	d101      	bne.n	8009f1e <UART_WaitOnFlagUntilTimeout+0x34>
      {

        return HAL_TIMEOUT;
 8009f1a:	2303      	movs	r3, #3
 8009f1c:	e048      	b.n	8009fb0 <UART_WaitOnFlagUntilTimeout+0xc6>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8009f1e:	68fb      	ldr	r3, [r7, #12]
 8009f20:	681b      	ldr	r3, [r3, #0]
 8009f22:	681b      	ldr	r3, [r3, #0]
 8009f24:	f003 0304 	and.w	r3, r3, #4
 8009f28:	2b00      	cmp	r3, #0
 8009f2a:	d031      	beq.n	8009f90 <UART_WaitOnFlagUntilTimeout+0xa6>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 8009f2c:	68fb      	ldr	r3, [r7, #12]
 8009f2e:	681b      	ldr	r3, [r3, #0]
 8009f30:	69db      	ldr	r3, [r3, #28]
 8009f32:	f003 0308 	and.w	r3, r3, #8
 8009f36:	2b08      	cmp	r3, #8
 8009f38:	d110      	bne.n	8009f5c <UART_WaitOnFlagUntilTimeout+0x72>
        {
           /* Clear Overrun Error flag*/
           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 8009f3a:	68fb      	ldr	r3, [r7, #12]
 8009f3c:	681b      	ldr	r3, [r3, #0]
 8009f3e:	2208      	movs	r2, #8
 8009f40:	621a      	str	r2, [r3, #32]

           /* Blocking error : transfer is aborted
           Set the UART state ready to be able to start again the process,
           Disable Rx Interrupts if ongoing */
           UART_EndRxTransfer(huart);
 8009f42:	68f8      	ldr	r0, [r7, #12]
 8009f44:	f000 f838 	bl	8009fb8 <UART_EndRxTransfer>

           huart->ErrorCode = HAL_UART_ERROR_ORE;
 8009f48:	68fb      	ldr	r3, [r7, #12]
 8009f4a:	2208      	movs	r2, #8
 8009f4c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84

           /* Process Unlocked */
           __HAL_UNLOCK(huart);
 8009f50:	68fb      	ldr	r3, [r7, #12]
 8009f52:	2200      	movs	r2, #0
 8009f54:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78

           return HAL_ERROR;
 8009f58:	2301      	movs	r3, #1
 8009f5a:	e029      	b.n	8009fb0 <UART_WaitOnFlagUntilTimeout+0xc6>
        }
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8009f5c:	68fb      	ldr	r3, [r7, #12]
 8009f5e:	681b      	ldr	r3, [r3, #0]
 8009f60:	69db      	ldr	r3, [r3, #28]
 8009f62:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8009f66:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8009f6a:	d111      	bne.n	8009f90 <UART_WaitOnFlagUntilTimeout+0xa6>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8009f6c:	68fb      	ldr	r3, [r7, #12]
 8009f6e:	681b      	ldr	r3, [r3, #0]
 8009f70:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8009f74:	621a      	str	r2, [r3, #32]

          /* Blocking error : transfer is aborted
          Set the UART state ready to be able to start again the process,
          Disable Rx Interrupts if ongoing */
          UART_EndRxTransfer(huart);
 8009f76:	68f8      	ldr	r0, [r7, #12]
 8009f78:	f000 f81e 	bl	8009fb8 <UART_EndRxTransfer>

          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8009f7c:	68fb      	ldr	r3, [r7, #12]
 8009f7e:	2220      	movs	r2, #32
 8009f80:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 8009f84:	68fb      	ldr	r3, [r7, #12]
 8009f86:	2200      	movs	r2, #0
 8009f88:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78

          return HAL_TIMEOUT;
 8009f8c:	2303      	movs	r3, #3
 8009f8e:	e00f      	b.n	8009fb0 <UART_WaitOnFlagUntilTimeout+0xc6>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8009f90:	68fb      	ldr	r3, [r7, #12]
 8009f92:	681b      	ldr	r3, [r3, #0]
 8009f94:	69da      	ldr	r2, [r3, #28]
 8009f96:	68bb      	ldr	r3, [r7, #8]
 8009f98:	4013      	ands	r3, r2
 8009f9a:	68ba      	ldr	r2, [r7, #8]
 8009f9c:	429a      	cmp	r2, r3
 8009f9e:	bf0c      	ite	eq
 8009fa0:	2301      	moveq	r3, #1
 8009fa2:	2300      	movne	r3, #0
 8009fa4:	b2db      	uxtb	r3, r3
 8009fa6:	461a      	mov	r2, r3
 8009fa8:	79fb      	ldrb	r3, [r7, #7]
 8009faa:	429a      	cmp	r2, r3
 8009fac:	d0a6      	beq.n	8009efc <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8009fae:	2300      	movs	r3, #0
}
 8009fb0:	4618      	mov	r0, r3
 8009fb2:	3710      	adds	r7, #16
 8009fb4:	46bd      	mov	sp, r7
 8009fb6:	bd80      	pop	{r7, pc}

08009fb8 <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 8009fb8:	b480      	push	{r7}
 8009fba:	b095      	sub	sp, #84	; 0x54
 8009fbc:	af00      	add	r7, sp, #0
 8009fbe:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8009fc0:	687b      	ldr	r3, [r7, #4]
 8009fc2:	681b      	ldr	r3, [r3, #0]
 8009fc4:	637b      	str	r3, [r7, #52]	; 0x34
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009fc6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009fc8:	e853 3f00 	ldrex	r3, [r3]
 8009fcc:	633b      	str	r3, [r7, #48]	; 0x30
   return(result);
 8009fce:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009fd0:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8009fd4:	64fb      	str	r3, [r7, #76]	; 0x4c
 8009fd6:	687b      	ldr	r3, [r7, #4]
 8009fd8:	681b      	ldr	r3, [r3, #0]
 8009fda:	461a      	mov	r2, r3
 8009fdc:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8009fde:	643b      	str	r3, [r7, #64]	; 0x40
 8009fe0:	63fa      	str	r2, [r7, #60]	; 0x3c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009fe2:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8009fe4:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8009fe6:	e841 2300 	strex	r3, r2, [r1]
 8009fea:	63bb      	str	r3, [r7, #56]	; 0x38
   return(result);
 8009fec:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009fee:	2b00      	cmp	r3, #0
 8009ff0:	d1e6      	bne.n	8009fc0 <UART_EndRxTransfer+0x8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8009ff2:	687b      	ldr	r3, [r7, #4]
 8009ff4:	681b      	ldr	r3, [r3, #0]
 8009ff6:	3308      	adds	r3, #8
 8009ff8:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009ffa:	6a3b      	ldr	r3, [r7, #32]
 8009ffc:	e853 3f00 	ldrex	r3, [r3]
 800a000:	61fb      	str	r3, [r7, #28]
   return(result);
 800a002:	69fb      	ldr	r3, [r7, #28]
 800a004:	f023 0301 	bic.w	r3, r3, #1
 800a008:	64bb      	str	r3, [r7, #72]	; 0x48
 800a00a:	687b      	ldr	r3, [r7, #4]
 800a00c:	681b      	ldr	r3, [r3, #0]
 800a00e:	3308      	adds	r3, #8
 800a010:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800a012:	62fa      	str	r2, [r7, #44]	; 0x2c
 800a014:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a016:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800a018:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800a01a:	e841 2300 	strex	r3, r2, [r1]
 800a01e:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 800a020:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a022:	2b00      	cmp	r3, #0
 800a024:	d1e5      	bne.n	8009ff2 <UART_EndRxTransfer+0x3a>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800a026:	687b      	ldr	r3, [r7, #4]
 800a028:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a02a:	2b01      	cmp	r3, #1
 800a02c:	d118      	bne.n	800a060 <UART_EndRxTransfer+0xa8>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800a02e:	687b      	ldr	r3, [r7, #4]
 800a030:	681b      	ldr	r3, [r3, #0]
 800a032:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a034:	68fb      	ldr	r3, [r7, #12]
 800a036:	e853 3f00 	ldrex	r3, [r3]
 800a03a:	60bb      	str	r3, [r7, #8]
   return(result);
 800a03c:	68bb      	ldr	r3, [r7, #8]
 800a03e:	f023 0310 	bic.w	r3, r3, #16
 800a042:	647b      	str	r3, [r7, #68]	; 0x44
 800a044:	687b      	ldr	r3, [r7, #4]
 800a046:	681b      	ldr	r3, [r3, #0]
 800a048:	461a      	mov	r2, r3
 800a04a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800a04c:	61bb      	str	r3, [r7, #24]
 800a04e:	617a      	str	r2, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a050:	6979      	ldr	r1, [r7, #20]
 800a052:	69ba      	ldr	r2, [r7, #24]
 800a054:	e841 2300 	strex	r3, r2, [r1]
 800a058:	613b      	str	r3, [r7, #16]
   return(result);
 800a05a:	693b      	ldr	r3, [r7, #16]
 800a05c:	2b00      	cmp	r3, #0
 800a05e:	d1e6      	bne.n	800a02e <UART_EndRxTransfer+0x76>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 800a060:	687b      	ldr	r3, [r7, #4]
 800a062:	2220      	movs	r2, #32
 800a064:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800a068:	687b      	ldr	r3, [r7, #4]
 800a06a:	2200      	movs	r2, #0
 800a06c:	661a      	str	r2, [r3, #96]	; 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 800a06e:	687b      	ldr	r3, [r7, #4]
 800a070:	2200      	movs	r2, #0
 800a072:	669a      	str	r2, [r3, #104]	; 0x68
}
 800a074:	bf00      	nop
 800a076:	3754      	adds	r7, #84	; 0x54
 800a078:	46bd      	mov	sp, r7
 800a07a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a07e:	4770      	bx	lr

0800a080 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
 800a080:	b570      	push	{r4, r5, r6, lr}
 800a082:	6803      	ldr	r3, [r0, #0]
 800a084:	b084      	sub	sp, #16
 800a086:	2400      	movs	r4, #0
 800a088:	699e      	ldr	r6, [r3, #24]
 800a08a:	9403      	str	r4, [sp, #12]
 800a08c:	2310      	movs	r3, #16
 800a08e:	4615      	mov	r5, r2
 800a090:	9302      	str	r3, [sp, #8]
 800a092:	e9cd 4400 	strd	r4, r4, [sp]
 800a096:	466b      	mov	r3, sp
 800a098:	6812      	ldr	r2, [r2, #0]
 800a09a:	47b0      	blx	r6
 800a09c:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800a0a0:	f003 0306 	and.w	r3, r3, #6
 800a0a4:	2b06      	cmp	r3, #6
 800a0a6:	bf03      	ittte	eq
 800a0a8:	9b00      	ldreq	r3, [sp, #0]
 800a0aa:	602b      	streq	r3, [r5, #0]
 800a0ac:	2001      	moveq	r0, #1
 800a0ae:	4620      	movne	r0, r4
 800a0b0:	b004      	add	sp, #16
 800a0b2:	bd70      	pop	{r4, r5, r6, pc}

0800a0b4 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
 800a0b4:	9800      	ldr	r0, [sp, #0]
 800a0b6:	4290      	cmp	r0, r2
 800a0b8:	bf14      	ite	ne
 800a0ba:	2001      	movne	r0, #1
 800a0bc:	2006      	moveq	r0, #6
 800a0be:	4770      	bx	lr

0800a0c0 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
 800a0c0:	b510      	push	{r4, lr}
 800a0c2:	4b03      	ldr	r3, [pc, #12]	; (800a0d0 <_ZN10__cxxabiv117__class_type_infoD1Ev+0x10>)
 800a0c4:	6003      	str	r3, [r0, #0]
 800a0c6:	4604      	mov	r4, r0
 800a0c8:	f000 fee0 	bl	800ae8c <_ZNSt9type_infoD1Ev>
 800a0cc:	4620      	mov	r0, r4
 800a0ce:	bd10      	pop	{r4, pc}
 800a0d0:	0800d13c 	.word	0x0800d13c

0800a0d4 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
 800a0d4:	b510      	push	{r4, lr}
 800a0d6:	4b05      	ldr	r3, [pc, #20]	; (800a0ec <_ZN10__cxxabiv117__class_type_infoD0Ev+0x18>)
 800a0d8:	6003      	str	r3, [r0, #0]
 800a0da:	4604      	mov	r4, r0
 800a0dc:	f000 fed6 	bl	800ae8c <_ZNSt9type_infoD1Ev>
 800a0e0:	4620      	mov	r0, r4
 800a0e2:	2108      	movs	r1, #8
 800a0e4:	f000 f84a 	bl	800a17c <_ZdlPvj>
 800a0e8:	4620      	mov	r0, r4
 800a0ea:	bd10      	pop	{r4, pc}
 800a0ec:	0800d13c 	.word	0x0800d13c

0800a0f0 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
 800a0f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a0f4:	9f06      	ldr	r7, [sp, #24]
 800a0f6:	9908      	ldr	r1, [sp, #32]
 800a0f8:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800a0fa:	428f      	cmp	r7, r1
 800a0fc:	4604      	mov	r4, r0
 800a0fe:	4690      	mov	r8, r2
 800a100:	461d      	mov	r5, r3
 800a102:	d00c      	beq.n	800a11e <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x2e>
 800a104:	4629      	mov	r1, r5
 800a106:	4620      	mov	r0, r4
 800a108:	f000 fec4 	bl	800ae94 <_ZNKSt9type_infoeqERKS_>
 800a10c:	b120      	cbz	r0, 800a118 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x28>
 800a10e:	2301      	movs	r3, #1
 800a110:	6037      	str	r7, [r6, #0]
 800a112:	f886 8004 	strb.w	r8, [r6, #4]
 800a116:	71b3      	strb	r3, [r6, #6]
 800a118:	2000      	movs	r0, #0
 800a11a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a11e:	9907      	ldr	r1, [sp, #28]
 800a120:	f000 feb8 	bl	800ae94 <_ZNKSt9type_infoeqERKS_>
 800a124:	2800      	cmp	r0, #0
 800a126:	d0ed      	beq.n	800a104 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x14>
 800a128:	f886 8005 	strb.w	r8, [r6, #5]
 800a12c:	2000      	movs	r0, #0
 800a12e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a132:	bf00      	nop

0800a134 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
 800a134:	b538      	push	{r3, r4, r5, lr}
 800a136:	4615      	mov	r5, r2
 800a138:	461c      	mov	r4, r3
 800a13a:	f000 feab 	bl	800ae94 <_ZNKSt9type_infoeqERKS_>
 800a13e:	b900      	cbnz	r0, 800a142 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0xe>
 800a140:	bd38      	pop	{r3, r4, r5, pc}
 800a142:	2208      	movs	r2, #8
 800a144:	2306      	movs	r3, #6
 800a146:	6025      	str	r5, [r4, #0]
 800a148:	60e2      	str	r2, [r4, #12]
 800a14a:	7123      	strb	r3, [r4, #4]
 800a14c:	bd38      	pop	{r3, r4, r5, pc}
 800a14e:	bf00      	nop

0800a150 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
 800a150:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a154:	4606      	mov	r6, r0
 800a156:	4617      	mov	r7, r2
 800a158:	461d      	mov	r5, r3
 800a15a:	460c      	mov	r4, r1
 800a15c:	f000 fe9a 	bl	800ae94 <_ZNKSt9type_infoeqERKS_>
 800a160:	b948      	cbnz	r0, 800a176 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x26>
 800a162:	2d03      	cmp	r5, #3
 800a164:	d807      	bhi.n	800a176 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x26>
 800a166:	6823      	ldr	r3, [r4, #0]
 800a168:	463a      	mov	r2, r7
 800a16a:	4631      	mov	r1, r6
 800a16c:	4620      	mov	r0, r4
 800a16e:	695b      	ldr	r3, [r3, #20]
 800a170:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a174:	4718      	bx	r3
 800a176:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a17a:	bf00      	nop

0800a17c <_ZdlPvj>:
 800a17c:	f001 b8e2 	b.w	800b344 <_ZdlPv>

0800a180 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0>:
 800a180:	4920      	ldr	r1, [pc, #128]	; (800a204 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x84>)
 800a182:	684b      	ldr	r3, [r1, #4]
 800a184:	b530      	push	{r4, r5, lr}
 800a186:	f850 5c08 	ldr.w	r5, [r0, #-8]
 800a18a:	f1a0 0408 	sub.w	r4, r0, #8
 800a18e:	b35b      	cbz	r3, 800a1e8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x68>
 800a190:	eb04 0e05 	add.w	lr, r4, r5
 800a194:	4573      	cmp	r3, lr
 800a196:	d827      	bhi.n	800a1e8 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x68>
 800a198:	d021      	beq.n	800a1de <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x5e>
 800a19a:	685a      	ldr	r2, [r3, #4]
 800a19c:	f101 0c04 	add.w	ip, r1, #4
 800a1a0:	b932      	cbnz	r2, 800a1b0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x30>
 800a1a2:	e00f      	b.n	800a1c4 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x44>
 800a1a4:	6851      	ldr	r1, [r2, #4]
 800a1a6:	f103 0c04 	add.w	ip, r3, #4
 800a1aa:	b321      	cbz	r1, 800a1f6 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x76>
 800a1ac:	4613      	mov	r3, r2
 800a1ae:	460a      	mov	r2, r1
 800a1b0:	4596      	cmp	lr, r2
 800a1b2:	d3f7      	bcc.n	800a1a4 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x24>
 800a1b4:	bf04      	itt	eq
 800a1b6:	e9de 2100 	ldrdeq	r2, r1, [lr]
 800a1ba:	6059      	streq	r1, [r3, #4]
 800a1bc:	f8dc 3000 	ldr.w	r3, [ip]
 800a1c0:	bf08      	it	eq
 800a1c2:	18ad      	addeq	r5, r5, r2
 800a1c4:	681a      	ldr	r2, [r3, #0]
 800a1c6:	1899      	adds	r1, r3, r2
 800a1c8:	428c      	cmp	r4, r1
 800a1ca:	d011      	beq.n	800a1f0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x70>
 800a1cc:	685b      	ldr	r3, [r3, #4]
 800a1ce:	f840 3c04 	str.w	r3, [r0, #-4]
 800a1d2:	f8dc 3000 	ldr.w	r3, [ip]
 800a1d6:	f840 5c08 	str.w	r5, [r0, #-8]
 800a1da:	605c      	str	r4, [r3, #4]
 800a1dc:	bd30      	pop	{r4, r5, pc}
 800a1de:	681a      	ldr	r2, [r3, #0]
 800a1e0:	685b      	ldr	r3, [r3, #4]
 800a1e2:	442a      	add	r2, r5
 800a1e4:	f840 2c08 	str.w	r2, [r0, #-8]
 800a1e8:	f840 3c04 	str.w	r3, [r0, #-4]
 800a1ec:	604c      	str	r4, [r1, #4]
 800a1ee:	bd30      	pop	{r4, r5, pc}
 800a1f0:	442a      	add	r2, r5
 800a1f2:	601a      	str	r2, [r3, #0]
 800a1f4:	bd30      	pop	{r4, r5, pc}
 800a1f6:	685b      	ldr	r3, [r3, #4]
 800a1f8:	681a      	ldr	r2, [r3, #0]
 800a1fa:	1899      	adds	r1, r3, r2
 800a1fc:	428c      	cmp	r4, r1
 800a1fe:	d1e5      	bne.n	800a1cc <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x4c>
 800a200:	e7f6      	b.n	800a1f0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0+0x70>
 800a202:	bf00      	nop
 800a204:	20000528 	.word	0x20000528

0800a208 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0>:
 800a208:	4914      	ldr	r1, [pc, #80]	; (800a25c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x54>)
 800a20a:	f100 0308 	add.w	r3, r0, #8
 800a20e:	6848      	ldr	r0, [r1, #4]
 800a210:	2b08      	cmp	r3, #8
 800a212:	bf38      	it	cc
 800a214:	2308      	movcc	r3, #8
 800a216:	b1f8      	cbz	r0, 800a258 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x50>
 800a218:	3307      	adds	r3, #7
 800a21a:	f023 0307 	bic.w	r3, r3, #7
 800a21e:	3104      	adds	r1, #4
 800a220:	e002      	b.n	800a228 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x20>
 800a222:	1d01      	adds	r1, r0, #4
 800a224:	6840      	ldr	r0, [r0, #4]
 800a226:	b180      	cbz	r0, 800a24a <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x42>
 800a228:	6802      	ldr	r2, [r0, #0]
 800a22a:	4293      	cmp	r3, r2
 800a22c:	d8f9      	bhi.n	800a222 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x1a>
 800a22e:	b430      	push	{r4, r5}
 800a230:	1ad4      	subs	r4, r2, r3
 800a232:	2c07      	cmp	r4, #7
 800a234:	d90a      	bls.n	800a24c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0+0x44>
 800a236:	18c5      	adds	r5, r0, r3
 800a238:	6842      	ldr	r2, [r0, #4]
 800a23a:	606a      	str	r2, [r5, #4]
 800a23c:	50c4      	str	r4, [r0, r3]
 800a23e:	6808      	ldr	r0, [r1, #0]
 800a240:	6003      	str	r3, [r0, #0]
 800a242:	600d      	str	r5, [r1, #0]
 800a244:	3008      	adds	r0, #8
 800a246:	bc30      	pop	{r4, r5}
 800a248:	4770      	bx	lr
 800a24a:	4770      	bx	lr
 800a24c:	6845      	ldr	r5, [r0, #4]
 800a24e:	6002      	str	r2, [r0, #0]
 800a250:	600d      	str	r5, [r1, #0]
 800a252:	3008      	adds	r0, #8
 800a254:	bc30      	pop	{r4, r5}
 800a256:	4770      	bx	lr
 800a258:	4770      	bx	lr
 800a25a:	bf00      	nop
 800a25c:	20000528 	.word	0x20000528

0800a260 <__cxa_allocate_exception>:
 800a260:	b510      	push	{r4, lr}
 800a262:	f100 0480 	add.w	r4, r0, #128	; 0x80
 800a266:	4620      	mov	r0, r4
 800a268:	f001 f94a 	bl	800b500 <malloc>
 800a26c:	4603      	mov	r3, r0
 800a26e:	b130      	cbz	r0, 800a27e <__cxa_allocate_exception+0x1e>
 800a270:	2280      	movs	r2, #128	; 0x80
 800a272:	2100      	movs	r1, #0
 800a274:	4618      	mov	r0, r3
 800a276:	f001 fd63 	bl	800bd40 <memset>
 800a27a:	3080      	adds	r0, #128	; 0x80
 800a27c:	bd10      	pop	{r4, pc}
 800a27e:	4620      	mov	r0, r4
 800a280:	f7ff ffc2 	bl	800a208 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.0>
 800a284:	4603      	mov	r3, r0
 800a286:	2800      	cmp	r0, #0
 800a288:	d1f2      	bne.n	800a270 <__cxa_allocate_exception+0x10>
 800a28a:	f000 fca7 	bl	800abdc <_ZSt9terminatev>
 800a28e:	bf00      	nop

0800a290 <__cxa_free_exception>:
 800a290:	4a06      	ldr	r2, [pc, #24]	; (800a2ac <__cxa_free_exception+0x1c>)
 800a292:	6893      	ldr	r3, [r2, #8]
 800a294:	3880      	subs	r0, #128	; 0x80
 800a296:	4298      	cmp	r0, r3
 800a298:	d905      	bls.n	800a2a6 <__cxa_free_exception+0x16>
 800a29a:	68d2      	ldr	r2, [r2, #12]
 800a29c:	4413      	add	r3, r2
 800a29e:	4298      	cmp	r0, r3
 800a2a0:	d201      	bcs.n	800a2a6 <__cxa_free_exception+0x16>
 800a2a2:	f7ff bf6d 	b.w	800a180 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.0>
 800a2a6:	f001 b933 	b.w	800b510 <free>
 800a2aa:	bf00      	nop
 800a2ac:	20000528 	.word	0x20000528

0800a2b0 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv>:
 800a2b0:	b538      	push	{r3, r4, r5, lr}
 800a2b2:	4c08      	ldr	r4, [pc, #32]	; (800a2d4 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x24>)
 800a2b4:	f44f 651e 	mov.w	r5, #2528	; 0x9e0
 800a2b8:	4628      	mov	r0, r5
 800a2ba:	60e5      	str	r5, [r4, #12]
 800a2bc:	f001 f920 	bl	800b500 <malloc>
 800a2c0:	60a0      	str	r0, [r4, #8]
 800a2c2:	b120      	cbz	r0, 800a2ce <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x1e>
 800a2c4:	2300      	movs	r3, #0
 800a2c6:	e9c0 5300 	strd	r5, r3, [r0]
 800a2ca:	6060      	str	r0, [r4, #4]
 800a2cc:	bd38      	pop	{r3, r4, r5, pc}
 800a2ce:	60e0      	str	r0, [r4, #12]
 800a2d0:	6060      	str	r0, [r4, #4]
 800a2d2:	bd38      	pop	{r3, r4, r5, pc}
 800a2d4:	20000528 	.word	0x20000528

0800a2d8 <__cxa_end_cleanup>:
 800a2d8:	b41e      	push	{r1, r2, r3, r4}
 800a2da:	f000 f88d 	bl	800a3f8 <__gnu_end_cleanup>
 800a2de:	bc1e      	pop	{r1, r2, r3, r4}
 800a2e0:	f7fc fd4c 	bl	8006d7c <_Unwind_Resume>

0800a2e4 <__cxa_type_match>:
 800a2e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a2e6:	7802      	ldrb	r2, [r0, #0]
 800a2e8:	2a47      	cmp	r2, #71	; 0x47
 800a2ea:	b083      	sub	sp, #12
 800a2ec:	460c      	mov	r4, r1
 800a2ee:	461d      	mov	r5, r3
 800a2f0:	d019      	beq.n	800a326 <__cxa_type_match+0x42>
 800a2f2:	4e26      	ldr	r6, [pc, #152]	; (800a38c <__cxa_type_match+0xa8>)
 800a2f4:	2000      	movs	r0, #0
 800a2f6:	6833      	ldr	r3, [r6, #0]
 800a2f8:	9001      	str	r0, [sp, #4]
 800a2fa:	689b      	ldr	r3, [r3, #8]
 800a2fc:	4630      	mov	r0, r6
 800a2fe:	4798      	blx	r3
 800a300:	b178      	cbz	r0, 800a322 <__cxa_type_match+0x3e>
 800a302:	9b01      	ldr	r3, [sp, #4]
 800a304:	681b      	ldr	r3, [r3, #0]
 800a306:	9301      	str	r3, [sp, #4]
 800a308:	2702      	movs	r7, #2
 800a30a:	6823      	ldr	r3, [r4, #0]
 800a30c:	4631      	mov	r1, r6
 800a30e:	4620      	mov	r0, r4
 800a310:	691e      	ldr	r6, [r3, #16]
 800a312:	aa01      	add	r2, sp, #4
 800a314:	2301      	movs	r3, #1
 800a316:	47b0      	blx	r6
 800a318:	bb10      	cbnz	r0, 800a360 <__cxa_type_match+0x7c>
 800a31a:	4607      	mov	r7, r0
 800a31c:	4638      	mov	r0, r7
 800a31e:	b003      	add	sp, #12
 800a320:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a322:	2701      	movs	r7, #1
 800a324:	e7f1      	b.n	800a30a <__cxa_type_match+0x26>
 800a326:	7843      	ldrb	r3, [r0, #1]
 800a328:	2b4e      	cmp	r3, #78	; 0x4e
 800a32a:	d1e2      	bne.n	800a2f2 <__cxa_type_match+0xe>
 800a32c:	7883      	ldrb	r3, [r0, #2]
 800a32e:	2b55      	cmp	r3, #85	; 0x55
 800a330:	d1df      	bne.n	800a2f2 <__cxa_type_match+0xe>
 800a332:	78c3      	ldrb	r3, [r0, #3]
 800a334:	2b43      	cmp	r3, #67	; 0x43
 800a336:	d1dc      	bne.n	800a2f2 <__cxa_type_match+0xe>
 800a338:	7903      	ldrb	r3, [r0, #4]
 800a33a:	2b46      	cmp	r3, #70	; 0x46
 800a33c:	d01a      	beq.n	800a374 <__cxa_type_match+0x90>
 800a33e:	7903      	ldrb	r3, [r0, #4]
 800a340:	2b43      	cmp	r3, #67	; 0x43
 800a342:	d1d6      	bne.n	800a2f2 <__cxa_type_match+0xe>
 800a344:	7943      	ldrb	r3, [r0, #5]
 800a346:	2b2b      	cmp	r3, #43	; 0x2b
 800a348:	d1d3      	bne.n	800a2f2 <__cxa_type_match+0xe>
 800a34a:	7983      	ldrb	r3, [r0, #6]
 800a34c:	2b2b      	cmp	r3, #43	; 0x2b
 800a34e:	d1d0      	bne.n	800a2f2 <__cxa_type_match+0xe>
 800a350:	79c3      	ldrb	r3, [r0, #7]
 800a352:	2b01      	cmp	r3, #1
 800a354:	d8cd      	bhi.n	800a2f2 <__cxa_type_match+0xe>
 800a356:	d008      	beq.n	800a36a <__cxa_type_match+0x86>
 800a358:	f850 6c20 	ldr.w	r6, [r0, #-32]
 800a35c:	3058      	adds	r0, #88	; 0x58
 800a35e:	e7ca      	b.n	800a2f6 <__cxa_type_match+0x12>
 800a360:	9b01      	ldr	r3, [sp, #4]
 800a362:	602b      	str	r3, [r5, #0]
 800a364:	4638      	mov	r0, r7
 800a366:	b003      	add	sp, #12
 800a368:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a36a:	f850 0c20 	ldr.w	r0, [r0, #-32]
 800a36e:	f850 6c78 	ldr.w	r6, [r0, #-120]
 800a372:	e7c0      	b.n	800a2f6 <__cxa_type_match+0x12>
 800a374:	7943      	ldrb	r3, [r0, #5]
 800a376:	2b4f      	cmp	r3, #79	; 0x4f
 800a378:	d1e1      	bne.n	800a33e <__cxa_type_match+0x5a>
 800a37a:	7983      	ldrb	r3, [r0, #6]
 800a37c:	2b52      	cmp	r3, #82	; 0x52
 800a37e:	d1de      	bne.n	800a33e <__cxa_type_match+0x5a>
 800a380:	79c3      	ldrb	r3, [r0, #7]
 800a382:	2b00      	cmp	r3, #0
 800a384:	d1db      	bne.n	800a33e <__cxa_type_match+0x5a>
 800a386:	4e02      	ldr	r6, [pc, #8]	; (800a390 <__cxa_type_match+0xac>)
 800a388:	4618      	mov	r0, r3
 800a38a:	e7b4      	b.n	800a2f6 <__cxa_type_match+0x12>
 800a38c:	0800d17c 	.word	0x0800d17c
 800a390:	0800d174 	.word	0x0800d174

0800a394 <__cxa_begin_cleanup>:
 800a394:	b510      	push	{r4, lr}
 800a396:	4604      	mov	r4, r0
 800a398:	f000 f8fe 	bl	800a598 <__cxa_get_globals>
 800a39c:	4622      	mov	r2, r4
 800a39e:	f812 3920 	ldrb.w	r3, [r2], #-32
 800a3a2:	2b47      	cmp	r3, #71	; 0x47
 800a3a4:	d004      	beq.n	800a3b0 <__cxa_begin_cleanup+0x1c>
 800a3a6:	6883      	ldr	r3, [r0, #8]
 800a3a8:	bb23      	cbnz	r3, 800a3f4 <__cxa_begin_cleanup+0x60>
 800a3aa:	6082      	str	r2, [r0, #8]
 800a3ac:	2001      	movs	r0, #1
 800a3ae:	bd10      	pop	{r4, pc}
 800a3b0:	7863      	ldrb	r3, [r4, #1]
 800a3b2:	2b4e      	cmp	r3, #78	; 0x4e
 800a3b4:	d1f7      	bne.n	800a3a6 <__cxa_begin_cleanup+0x12>
 800a3b6:	78a3      	ldrb	r3, [r4, #2]
 800a3b8:	2b55      	cmp	r3, #85	; 0x55
 800a3ba:	d1f4      	bne.n	800a3a6 <__cxa_begin_cleanup+0x12>
 800a3bc:	78e3      	ldrb	r3, [r4, #3]
 800a3be:	2b43      	cmp	r3, #67	; 0x43
 800a3c0:	d1f1      	bne.n	800a3a6 <__cxa_begin_cleanup+0x12>
 800a3c2:	7923      	ldrb	r3, [r4, #4]
 800a3c4:	2b43      	cmp	r3, #67	; 0x43
 800a3c6:	d1ee      	bne.n	800a3a6 <__cxa_begin_cleanup+0x12>
 800a3c8:	7963      	ldrb	r3, [r4, #5]
 800a3ca:	2b2b      	cmp	r3, #43	; 0x2b
 800a3cc:	d1eb      	bne.n	800a3a6 <__cxa_begin_cleanup+0x12>
 800a3ce:	79a3      	ldrb	r3, [r4, #6]
 800a3d0:	2b2b      	cmp	r3, #43	; 0x2b
 800a3d2:	d1e8      	bne.n	800a3a6 <__cxa_begin_cleanup+0x12>
 800a3d4:	79e3      	ldrb	r3, [r4, #7]
 800a3d6:	2b01      	cmp	r3, #1
 800a3d8:	d8e5      	bhi.n	800a3a6 <__cxa_begin_cleanup+0x12>
 800a3da:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a3de:	3301      	adds	r3, #1
 800a3e0:	2b01      	cmp	r3, #1
 800a3e2:	f844 3c04 	str.w	r3, [r4, #-4]
 800a3e6:	d1e1      	bne.n	800a3ac <__cxa_begin_cleanup+0x18>
 800a3e8:	6883      	ldr	r3, [r0, #8]
 800a3ea:	f844 3c08 	str.w	r3, [r4, #-8]
 800a3ee:	6082      	str	r2, [r0, #8]
 800a3f0:	2001      	movs	r0, #1
 800a3f2:	bd10      	pop	{r4, pc}
 800a3f4:	f000 fbf2 	bl	800abdc <_ZSt9terminatev>

0800a3f8 <__gnu_end_cleanup>:
 800a3f8:	b508      	push	{r3, lr}
 800a3fa:	f000 f8cd 	bl	800a598 <__cxa_get_globals>
 800a3fe:	6883      	ldr	r3, [r0, #8]
 800a400:	b383      	cbz	r3, 800a464 <__gnu_end_cleanup+0x6c>
 800a402:	f893 2020 	ldrb.w	r2, [r3, #32]
 800a406:	2a47      	cmp	r2, #71	; 0x47
 800a408:	d004      	beq.n	800a414 <__gnu_end_cleanup+0x1c>
 800a40a:	2200      	movs	r2, #0
 800a40c:	6082      	str	r2, [r0, #8]
 800a40e:	f103 0020 	add.w	r0, r3, #32
 800a412:	bd08      	pop	{r3, pc}
 800a414:	f893 2021 	ldrb.w	r2, [r3, #33]	; 0x21
 800a418:	2a4e      	cmp	r2, #78	; 0x4e
 800a41a:	d1f6      	bne.n	800a40a <__gnu_end_cleanup+0x12>
 800a41c:	f893 2022 	ldrb.w	r2, [r3, #34]	; 0x22
 800a420:	2a55      	cmp	r2, #85	; 0x55
 800a422:	d1f2      	bne.n	800a40a <__gnu_end_cleanup+0x12>
 800a424:	f893 2023 	ldrb.w	r2, [r3, #35]	; 0x23
 800a428:	2a43      	cmp	r2, #67	; 0x43
 800a42a:	d1ee      	bne.n	800a40a <__gnu_end_cleanup+0x12>
 800a42c:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
 800a430:	2a43      	cmp	r2, #67	; 0x43
 800a432:	d1ea      	bne.n	800a40a <__gnu_end_cleanup+0x12>
 800a434:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
 800a438:	2a2b      	cmp	r2, #43	; 0x2b
 800a43a:	d1e6      	bne.n	800a40a <__gnu_end_cleanup+0x12>
 800a43c:	f893 2026 	ldrb.w	r2, [r3, #38]	; 0x26
 800a440:	2a2b      	cmp	r2, #43	; 0x2b
 800a442:	d1e2      	bne.n	800a40a <__gnu_end_cleanup+0x12>
 800a444:	f893 2027 	ldrb.w	r2, [r3, #39]	; 0x27
 800a448:	2a01      	cmp	r2, #1
 800a44a:	d8de      	bhi.n	800a40a <__gnu_end_cleanup+0x12>
 800a44c:	69da      	ldr	r2, [r3, #28]
 800a44e:	3a01      	subs	r2, #1
 800a450:	61da      	str	r2, [r3, #28]
 800a452:	2a00      	cmp	r2, #0
 800a454:	d1db      	bne.n	800a40e <__gnu_end_cleanup+0x16>
 800a456:	6999      	ldr	r1, [r3, #24]
 800a458:	6081      	str	r1, [r0, #8]
 800a45a:	2200      	movs	r2, #0
 800a45c:	619a      	str	r2, [r3, #24]
 800a45e:	f103 0020 	add.w	r0, r3, #32
 800a462:	bd08      	pop	{r3, pc}
 800a464:	f000 fbba 	bl	800abdc <_ZSt9terminatev>

0800a468 <__cxa_begin_catch>:
 800a468:	b538      	push	{r3, r4, r5, lr}
 800a46a:	4604      	mov	r4, r0
 800a46c:	f000 f894 	bl	800a598 <__cxa_get_globals>
 800a470:	4622      	mov	r2, r4
 800a472:	6805      	ldr	r5, [r0, #0]
 800a474:	f812 3920 	ldrb.w	r3, [r2], #-32
 800a478:	2b47      	cmp	r3, #71	; 0x47
 800a47a:	d003      	beq.n	800a484 <__cxa_begin_catch+0x1c>
 800a47c:	bb85      	cbnz	r5, 800a4e0 <__cxa_begin_catch+0x78>
 800a47e:	6002      	str	r2, [r0, #0]
 800a480:	4628      	mov	r0, r5
 800a482:	bd38      	pop	{r3, r4, r5, pc}
 800a484:	7863      	ldrb	r3, [r4, #1]
 800a486:	2b4e      	cmp	r3, #78	; 0x4e
 800a488:	d1f8      	bne.n	800a47c <__cxa_begin_catch+0x14>
 800a48a:	78a3      	ldrb	r3, [r4, #2]
 800a48c:	2b55      	cmp	r3, #85	; 0x55
 800a48e:	d1f5      	bne.n	800a47c <__cxa_begin_catch+0x14>
 800a490:	78e3      	ldrb	r3, [r4, #3]
 800a492:	2b43      	cmp	r3, #67	; 0x43
 800a494:	d1f2      	bne.n	800a47c <__cxa_begin_catch+0x14>
 800a496:	7923      	ldrb	r3, [r4, #4]
 800a498:	2b43      	cmp	r3, #67	; 0x43
 800a49a:	d1ef      	bne.n	800a47c <__cxa_begin_catch+0x14>
 800a49c:	7963      	ldrb	r3, [r4, #5]
 800a49e:	2b2b      	cmp	r3, #43	; 0x2b
 800a4a0:	d1ec      	bne.n	800a47c <__cxa_begin_catch+0x14>
 800a4a2:	79a3      	ldrb	r3, [r4, #6]
 800a4a4:	2b2b      	cmp	r3, #43	; 0x2b
 800a4a6:	d1e9      	bne.n	800a47c <__cxa_begin_catch+0x14>
 800a4a8:	79e3      	ldrb	r3, [r4, #7]
 800a4aa:	2b01      	cmp	r3, #1
 800a4ac:	d8e6      	bhi.n	800a47c <__cxa_begin_catch+0x14>
 800a4ae:	f854 3c0c 	ldr.w	r3, [r4, #-12]
 800a4b2:	2b00      	cmp	r3, #0
 800a4b4:	db11      	blt.n	800a4da <__cxa_begin_catch+0x72>
 800a4b6:	3301      	adds	r3, #1
 800a4b8:	f844 3c0c 	str.w	r3, [r4, #-12]
 800a4bc:	6843      	ldr	r3, [r0, #4]
 800a4be:	3b01      	subs	r3, #1
 800a4c0:	6043      	str	r3, [r0, #4]
 800a4c2:	4295      	cmp	r5, r2
 800a4c4:	bf18      	it	ne
 800a4c6:	f844 5c10 	strne.w	r5, [r4, #-16]
 800a4ca:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800a4cc:	bf18      	it	ne
 800a4ce:	6002      	strne	r2, [r0, #0]
 800a4d0:	4620      	mov	r0, r4
 800a4d2:	f7fc f87f 	bl	80065d4 <_Unwind_Complete>
 800a4d6:	4628      	mov	r0, r5
 800a4d8:	bd38      	pop	{r3, r4, r5, pc}
 800a4da:	f1c3 0301 	rsb	r3, r3, #1
 800a4de:	e7eb      	b.n	800a4b8 <__cxa_begin_catch+0x50>
 800a4e0:	f000 fb7c 	bl	800abdc <_ZSt9terminatev>

0800a4e4 <__cxa_end_catch>:
 800a4e4:	b508      	push	{r3, lr}
 800a4e6:	f000 f853 	bl	800a590 <__cxa_get_globals_fast>
 800a4ea:	6803      	ldr	r3, [r0, #0]
 800a4ec:	b37b      	cbz	r3, 800a54e <__cxa_end_catch+0x6a>
 800a4ee:	f893 2020 	ldrb.w	r2, [r3, #32]
 800a4f2:	2a47      	cmp	r2, #71	; 0x47
 800a4f4:	d007      	beq.n	800a506 <__cxa_end_catch+0x22>
 800a4f6:	2200      	movs	r2, #0
 800a4f8:	6002      	str	r2, [r0, #0]
 800a4fa:	f103 0020 	add.w	r0, r3, #32
 800a4fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a502:	f7fc b869 	b.w	80065d8 <_Unwind_DeleteException>
 800a506:	f893 2021 	ldrb.w	r2, [r3, #33]	; 0x21
 800a50a:	2a4e      	cmp	r2, #78	; 0x4e
 800a50c:	d1f3      	bne.n	800a4f6 <__cxa_end_catch+0x12>
 800a50e:	f893 2022 	ldrb.w	r2, [r3, #34]	; 0x22
 800a512:	2a55      	cmp	r2, #85	; 0x55
 800a514:	d1ef      	bne.n	800a4f6 <__cxa_end_catch+0x12>
 800a516:	f893 2023 	ldrb.w	r2, [r3, #35]	; 0x23
 800a51a:	2a43      	cmp	r2, #67	; 0x43
 800a51c:	d1eb      	bne.n	800a4f6 <__cxa_end_catch+0x12>
 800a51e:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
 800a522:	2a43      	cmp	r2, #67	; 0x43
 800a524:	d1e7      	bne.n	800a4f6 <__cxa_end_catch+0x12>
 800a526:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
 800a52a:	2a2b      	cmp	r2, #43	; 0x2b
 800a52c:	d1e3      	bne.n	800a4f6 <__cxa_end_catch+0x12>
 800a52e:	f893 2026 	ldrb.w	r2, [r3, #38]	; 0x26
 800a532:	2a2b      	cmp	r2, #43	; 0x2b
 800a534:	d1df      	bne.n	800a4f6 <__cxa_end_catch+0x12>
 800a536:	f893 2027 	ldrb.w	r2, [r3, #39]	; 0x27
 800a53a:	2a01      	cmp	r2, #1
 800a53c:	d8db      	bhi.n	800a4f6 <__cxa_end_catch+0x12>
 800a53e:	695a      	ldr	r2, [r3, #20]
 800a540:	2a00      	cmp	r2, #0
 800a542:	db05      	blt.n	800a550 <__cxa_end_catch+0x6c>
 800a544:	3a01      	subs	r2, #1
 800a546:	d008      	beq.n	800a55a <__cxa_end_catch+0x76>
 800a548:	1c51      	adds	r1, r2, #1
 800a54a:	d00e      	beq.n	800a56a <__cxa_end_catch+0x86>
 800a54c:	615a      	str	r2, [r3, #20]
 800a54e:	bd08      	pop	{r3, pc}
 800a550:	3201      	adds	r2, #1
 800a552:	d1fb      	bne.n	800a54c <__cxa_end_catch+0x68>
 800a554:	6919      	ldr	r1, [r3, #16]
 800a556:	6001      	str	r1, [r0, #0]
 800a558:	e7f8      	b.n	800a54c <__cxa_end_catch+0x68>
 800a55a:	691a      	ldr	r2, [r3, #16]
 800a55c:	6002      	str	r2, [r0, #0]
 800a55e:	f103 0020 	add.w	r0, r3, #32
 800a562:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a566:	f7fc b837 	b.w	80065d8 <_Unwind_DeleteException>
 800a56a:	f000 fb37 	bl	800abdc <_ZSt9terminatev>
 800a56e:	bf00      	nop

0800a570 <_ZNSt9exceptionD1Ev>:
 800a570:	4770      	bx	lr
 800a572:	bf00      	nop

0800a574 <_ZNSt13bad_exceptionD1Ev>:
 800a574:	4770      	bx	lr
 800a576:	bf00      	nop

0800a578 <_ZGTtNKSt13bad_exception4whatEv>:
 800a578:	4800      	ldr	r0, [pc, #0]	; (800a57c <_ZGTtNKSt13bad_exception4whatEv+0x4>)
 800a57a:	4770      	bx	lr
 800a57c:	0800d160 	.word	0x0800d160

0800a580 <_ZNSt13bad_exceptionD0Ev>:
 800a580:	b510      	push	{r4, lr}
 800a582:	2104      	movs	r1, #4
 800a584:	4604      	mov	r4, r0
 800a586:	f7ff fdf9 	bl	800a17c <_ZdlPvj>
 800a58a:	4620      	mov	r0, r4
 800a58c:	bd10      	pop	{r4, pc}
 800a58e:	bf00      	nop

0800a590 <__cxa_get_globals_fast>:
 800a590:	4800      	ldr	r0, [pc, #0]	; (800a594 <__cxa_get_globals_fast+0x4>)
 800a592:	4770      	bx	lr
 800a594:	20000538 	.word	0x20000538

0800a598 <__cxa_get_globals>:
 800a598:	4800      	ldr	r0, [pc, #0]	; (800a59c <__cxa_get_globals+0x4>)
 800a59a:	4770      	bx	lr
 800a59c:	20000538 	.word	0x20000538

0800a5a0 <_ZL28read_encoded_value_with_basehjPKhPj>:
 800a5a0:	2850      	cmp	r0, #80	; 0x50
 800a5a2:	b570      	push	{r4, r5, r6, lr}
 800a5a4:	d01d      	beq.n	800a5e2 <_ZL28read_encoded_value_with_basehjPKhPj+0x42>
 800a5a6:	4684      	mov	ip, r0
 800a5a8:	f000 000f 	and.w	r0, r0, #15
 800a5ac:	280c      	cmp	r0, #12
 800a5ae:	d855      	bhi.n	800a65c <_ZL28read_encoded_value_with_basehjPKhPj+0xbc>
 800a5b0:	e8df f000 	tbb	[pc, r0]
 800a5b4:	07264407 	.word	0x07264407
 800a5b8:	5454541e 	.word	0x5454541e
 800a5bc:	07222a54 	.word	0x07222a54
 800a5c0:	1e          	.byte	0x1e
 800a5c1:	00          	.byte	0x00
 800a5c2:	4610      	mov	r0, r2
 800a5c4:	f850 6b04 	ldr.w	r6, [r0], #4
 800a5c8:	b14e      	cbz	r6, 800a5de <_ZL28read_encoded_value_with_basehjPKhPj+0x3e>
 800a5ca:	f00c 0470 	and.w	r4, ip, #112	; 0x70
 800a5ce:	2c10      	cmp	r4, #16
 800a5d0:	bf08      	it	eq
 800a5d2:	4611      	moveq	r1, r2
 800a5d4:	440e      	add	r6, r1
 800a5d6:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800a5da:	bf18      	it	ne
 800a5dc:	6836      	ldrne	r6, [r6, #0]
 800a5de:	601e      	str	r6, [r3, #0]
 800a5e0:	bd70      	pop	{r4, r5, r6, pc}
 800a5e2:	1cd0      	adds	r0, r2, #3
 800a5e4:	f020 0003 	bic.w	r0, r0, #3
 800a5e8:	f850 6b04 	ldr.w	r6, [r0], #4
 800a5ec:	601e      	str	r6, [r3, #0]
 800a5ee:	bd70      	pop	{r4, r5, r6, pc}
 800a5f0:	4610      	mov	r0, r2
 800a5f2:	f850 6b08 	ldr.w	r6, [r0], #8
 800a5f6:	e7e7      	b.n	800a5c8 <_ZL28read_encoded_value_with_basehjPKhPj+0x28>
 800a5f8:	4610      	mov	r0, r2
 800a5fa:	f930 6b02 	ldrsh.w	r6, [r0], #2
 800a5fe:	e7e3      	b.n	800a5c8 <_ZL28read_encoded_value_with_basehjPKhPj+0x28>
 800a600:	4610      	mov	r0, r2
 800a602:	f830 6b02 	ldrh.w	r6, [r0], #2
 800a606:	e7df      	b.n	800a5c8 <_ZL28read_encoded_value_with_basehjPKhPj+0x28>
 800a608:	2600      	movs	r6, #0
 800a60a:	4610      	mov	r0, r2
 800a60c:	4634      	mov	r4, r6
 800a60e:	f810 5b01 	ldrb.w	r5, [r0], #1
 800a612:	f005 0e7f 	and.w	lr, r5, #127	; 0x7f
 800a616:	fa0e fe04 	lsl.w	lr, lr, r4
 800a61a:	f015 0f80 	tst.w	r5, #128	; 0x80
 800a61e:	ea46 060e 	orr.w	r6, r6, lr
 800a622:	f104 0407 	add.w	r4, r4, #7
 800a626:	d1f2      	bne.n	800a60e <_ZL28read_encoded_value_with_basehjPKhPj+0x6e>
 800a628:	2c1f      	cmp	r4, #31
 800a62a:	d8cd      	bhi.n	800a5c8 <_ZL28read_encoded_value_with_basehjPKhPj+0x28>
 800a62c:	066d      	lsls	r5, r5, #25
 800a62e:	d5cb      	bpl.n	800a5c8 <_ZL28read_encoded_value_with_basehjPKhPj+0x28>
 800a630:	f04f 35ff 	mov.w	r5, #4294967295
 800a634:	fa05 f404 	lsl.w	r4, r5, r4
 800a638:	4326      	orrs	r6, r4
 800a63a:	e7c6      	b.n	800a5ca <_ZL28read_encoded_value_with_basehjPKhPj+0x2a>
 800a63c:	2600      	movs	r6, #0
 800a63e:	4610      	mov	r0, r2
 800a640:	4634      	mov	r4, r6
 800a642:	f810 5b01 	ldrb.w	r5, [r0], #1
 800a646:	f005 0e7f 	and.w	lr, r5, #127	; 0x7f
 800a64a:	fa0e fe04 	lsl.w	lr, lr, r4
 800a64e:	062d      	lsls	r5, r5, #24
 800a650:	ea46 060e 	orr.w	r6, r6, lr
 800a654:	f104 0407 	add.w	r4, r4, #7
 800a658:	d4f3      	bmi.n	800a642 <_ZL28read_encoded_value_with_basehjPKhPj+0xa2>
 800a65a:	e7b5      	b.n	800a5c8 <_ZL28read_encoded_value_with_basehjPKhPj+0x28>
 800a65c:	f000 ff48 	bl	800b4f0 <abort>

0800a660 <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
 800a660:	28ff      	cmp	r0, #255	; 0xff
 800a662:	b508      	push	{r3, lr}
 800a664:	4603      	mov	r3, r0
 800a666:	d019      	beq.n	800a69c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x3c>
 800a668:	f003 0270 	and.w	r2, r3, #112	; 0x70
 800a66c:	2a30      	cmp	r2, #48	; 0x30
 800a66e:	4608      	mov	r0, r1
 800a670:	d016      	beq.n	800a6a0 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x40>
 800a672:	d805      	bhi.n	800a680 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x20>
 800a674:	2a20      	cmp	r2, #32
 800a676:	d109      	bne.n	800a68c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x2c>
 800a678:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a67c:	f002 b8c1 	b.w	800c802 <_Unwind_GetTextRelBase>
 800a680:	2a40      	cmp	r2, #64	; 0x40
 800a682:	d109      	bne.n	800a698 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x38>
 800a684:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a688:	f7fc bd48 	b.w	800711c <_Unwind_GetRegionStart>
 800a68c:	d802      	bhi.n	800a694 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x34>
 800a68e:	f013 0f60 	tst.w	r3, #96	; 0x60
 800a692:	d003      	beq.n	800a69c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x3c>
 800a694:	f000 ff2c 	bl	800b4f0 <abort>
 800a698:	2a50      	cmp	r2, #80	; 0x50
 800a69a:	d1fb      	bne.n	800a694 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x34>
 800a69c:	2000      	movs	r0, #0
 800a69e:	bd08      	pop	{r3, pc}
 800a6a0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a6a4:	f002 b8aa 	b.w	800c7fc <_Unwind_GetDataRelBase>

0800a6a8 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
 800a6a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a6aa:	460c      	mov	r4, r1
 800a6ac:	4615      	mov	r5, r2
 800a6ae:	4606      	mov	r6, r0
 800a6b0:	b108      	cbz	r0, 800a6b6 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xe>
 800a6b2:	f7fc fd33 	bl	800711c <_Unwind_GetRegionStart>
 800a6b6:	6028      	str	r0, [r5, #0]
 800a6b8:	f814 7b01 	ldrb.w	r7, [r4], #1
 800a6bc:	2fff      	cmp	r7, #255	; 0xff
 800a6be:	d128      	bne.n	800a712 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x6a>
 800a6c0:	6068      	str	r0, [r5, #4]
 800a6c2:	4620      	mov	r0, r4
 800a6c4:	f810 3b01 	ldrb.w	r3, [r0], #1
 800a6c8:	2bff      	cmp	r3, #255	; 0xff
 800a6ca:	d032      	beq.n	800a732 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x8a>
 800a6cc:	2310      	movs	r3, #16
 800a6ce:	2400      	movs	r4, #0
 800a6d0:	752b      	strb	r3, [r5, #20]
 800a6d2:	4622      	mov	r2, r4
 800a6d4:	f810 1b01 	ldrb.w	r1, [r0], #1
 800a6d8:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800a6dc:	4093      	lsls	r3, r2
 800a6de:	0609      	lsls	r1, r1, #24
 800a6e0:	ea44 0403 	orr.w	r4, r4, r3
 800a6e4:	f102 0207 	add.w	r2, r2, #7
 800a6e8:	d4f4      	bmi.n	800a6d4 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x2c>
 800a6ea:	4404      	add	r4, r0
 800a6ec:	60ec      	str	r4, [r5, #12]
 800a6ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 800a6f2:	756b      	strb	r3, [r5, #21]
 800a6f4:	2400      	movs	r4, #0
 800a6f6:	4622      	mov	r2, r4
 800a6f8:	f810 1b01 	ldrb.w	r1, [r0], #1
 800a6fc:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800a700:	4093      	lsls	r3, r2
 800a702:	431c      	orrs	r4, r3
 800a704:	060b      	lsls	r3, r1, #24
 800a706:	f102 0207 	add.w	r2, r2, #7
 800a70a:	d4f5      	bmi.n	800a6f8 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x50>
 800a70c:	4404      	add	r4, r0
 800a70e:	612c      	str	r4, [r5, #16]
 800a710:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a712:	4631      	mov	r1, r6
 800a714:	4638      	mov	r0, r7
 800a716:	f7ff ffa3 	bl	800a660 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800a71a:	4622      	mov	r2, r4
 800a71c:	4601      	mov	r1, r0
 800a71e:	1d2b      	adds	r3, r5, #4
 800a720:	4638      	mov	r0, r7
 800a722:	f7ff ff3d 	bl	800a5a0 <_ZL28read_encoded_value_with_basehjPKhPj>
 800a726:	4604      	mov	r4, r0
 800a728:	4620      	mov	r0, r4
 800a72a:	f810 3b01 	ldrb.w	r3, [r0], #1
 800a72e:	2bff      	cmp	r3, #255	; 0xff
 800a730:	d1cc      	bne.n	800a6cc <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x24>
 800a732:	752b      	strb	r3, [r5, #20]
 800a734:	2400      	movs	r4, #0
 800a736:	e7d9      	b.n	800a6ec <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x44>

0800a738 <__gxx_personality_v0>:
 800a738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a73c:	f000 0403 	and.w	r4, r0, #3
 800a740:	b093      	sub	sp, #76	; 0x4c
 800a742:	2300      	movs	r3, #0
 800a744:	2c01      	cmp	r4, #1
 800a746:	9308      	str	r3, [sp, #32]
 800a748:	460f      	mov	r7, r1
 800a74a:	4690      	mov	r8, r2
 800a74c:	d013      	beq.n	800a776 <__gxx_personality_v0+0x3e>
 800a74e:	2c02      	cmp	r4, #2
 800a750:	d108      	bne.n	800a764 <__gxx_personality_v0+0x2c>
 800a752:	4641      	mov	r1, r8
 800a754:	4638      	mov	r0, r7
 800a756:	f7fc fccb 	bl	80070f0 <__gnu_unwind_frame>
 800a75a:	b940      	cbnz	r0, 800a76e <__gxx_personality_v0+0x36>
 800a75c:	2008      	movs	r0, #8
 800a75e:	b013      	add	sp, #76	; 0x4c
 800a760:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a764:	2c00      	cmp	r4, #0
 800a766:	f000 8093 	beq.w	800a890 <__gxx_personality_v0+0x158>
 800a76a:	f000 fec1 	bl	800b4f0 <abort>
 800a76e:	2009      	movs	r0, #9
 800a770:	b013      	add	sp, #76	; 0x4c
 800a772:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a776:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
 800a77a:	f010 0408 	ands.w	r4, r0, #8
 800a77e:	f8cd a000 	str.w	sl, [sp]
 800a782:	f000 809a 	beq.w	800a8ba <__gxx_personality_v0+0x182>
 800a786:	f044 0202 	orr.w	r2, r4, #2
 800a78a:	9202      	str	r2, [sp, #8]
 800a78c:	910c      	str	r1, [sp, #48]	; 0x30
 800a78e:	220c      	movs	r2, #12
 800a790:	4619      	mov	r1, r3
 800a792:	4640      	mov	r0, r8
 800a794:	f7fb ff4c 	bl	8006630 <_Unwind_VRS_Set>
 800a798:	4640      	mov	r0, r8
 800a79a:	f7fc fcc5 	bl	8007128 <_Unwind_GetLanguageSpecificData>
 800a79e:	4683      	mov	fp, r0
 800a7a0:	2800      	cmp	r0, #0
 800a7a2:	d0d6      	beq.n	800a752 <__gxx_personality_v0+0x1a>
 800a7a4:	4652      	mov	r2, sl
 800a7a6:	4601      	mov	r1, r0
 800a7a8:	4640      	mov	r0, r8
 800a7aa:	f7ff ff7d 	bl	800a6a8 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 800a7ae:	4641      	mov	r1, r8
 800a7b0:	4605      	mov	r5, r0
 800a7b2:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 800a7b6:	f7ff ff53 	bl	800a660 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800a7ba:	f10d 092c 	add.w	r9, sp, #44	; 0x2c
 800a7be:	2300      	movs	r3, #0
 800a7c0:	900e      	str	r0, [sp, #56]	; 0x38
 800a7c2:	4619      	mov	r1, r3
 800a7c4:	f8cd 9000 	str.w	r9, [sp]
 800a7c8:	220f      	movs	r2, #15
 800a7ca:	4640      	mov	r0, r8
 800a7cc:	f7fb ff0a 	bl	80065e4 <_Unwind_VRS_Get>
 800a7d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a7d2:	f023 0301 	bic.w	r3, r3, #1
 800a7d6:	1e5e      	subs	r6, r3, #1
 800a7d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800a7da:	429d      	cmp	r5, r3
 800a7dc:	f080 80bd 	bcs.w	800a95a <__gxx_personality_v0+0x222>
 800a7e0:	f89d 4045 	ldrb.w	r4, [sp, #69]	; 0x45
 800a7e4:	2100      	movs	r1, #0
 800a7e6:	4620      	mov	r0, r4
 800a7e8:	f7ff ff3a 	bl	800a660 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800a7ec:	462a      	mov	r2, r5
 800a7ee:	4601      	mov	r1, r0
 800a7f0:	ab09      	add	r3, sp, #36	; 0x24
 800a7f2:	4620      	mov	r0, r4
 800a7f4:	f7ff fed4 	bl	800a5a0 <_ZL28read_encoded_value_with_basehjPKhPj>
 800a7f8:	f89d 5045 	ldrb.w	r5, [sp, #69]	; 0x45
 800a7fc:	4604      	mov	r4, r0
 800a7fe:	2100      	movs	r1, #0
 800a800:	4628      	mov	r0, r5
 800a802:	f7ff ff2d 	bl	800a660 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800a806:	4622      	mov	r2, r4
 800a808:	4601      	mov	r1, r0
 800a80a:	ab0a      	add	r3, sp, #40	; 0x28
 800a80c:	4628      	mov	r0, r5
 800a80e:	f7ff fec7 	bl	800a5a0 <_ZL28read_encoded_value_with_basehjPKhPj>
 800a812:	f89d 5045 	ldrb.w	r5, [sp, #69]	; 0x45
 800a816:	4604      	mov	r4, r0
 800a818:	2100      	movs	r1, #0
 800a81a:	4628      	mov	r0, r5
 800a81c:	f7ff ff20 	bl	800a660 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800a820:	4622      	mov	r2, r4
 800a822:	4601      	mov	r1, r0
 800a824:	464b      	mov	r3, r9
 800a826:	4628      	mov	r0, r5
 800a828:	f7ff feba 	bl	800a5a0 <_ZL28read_encoded_value_with_basehjPKhPj>
 800a82c:	2400      	movs	r4, #0
 800a82e:	4605      	mov	r5, r0
 800a830:	4622      	mov	r2, r4
 800a832:	f815 1b01 	ldrb.w	r1, [r5], #1
 800a836:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800a83a:	4093      	lsls	r3, r2
 800a83c:	431c      	orrs	r4, r3
 800a83e:	060b      	lsls	r3, r1, #24
 800a840:	f102 0207 	add.w	r2, r2, #7
 800a844:	d4f5      	bmi.n	800a832 <__gxx_personality_v0+0xfa>
 800a846:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a848:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800a84a:	4413      	add	r3, r2
 800a84c:	42b3      	cmp	r3, r6
 800a84e:	d917      	bls.n	800a880 <__gxx_personality_v0+0x148>
 800a850:	9b02      	ldr	r3, [sp, #8]
 800a852:	07d8      	lsls	r0, r3, #31
 800a854:	d52d      	bpl.n	800a8b2 <__gxx_personality_v0+0x17a>
 800a856:	2400      	movs	r4, #0
 800a858:	9403      	str	r4, [sp, #12]
 800a85a:	2300      	movs	r3, #0
 800a85c:	4619      	mov	r1, r3
 800a85e:	f8cd 9000 	str.w	r9, [sp]
 800a862:	4640      	mov	r0, r8
 800a864:	220d      	movs	r2, #13
 800a866:	9d08      	ldr	r5, [sp, #32]
 800a868:	f7fb febc 	bl	80065e4 <_Unwind_VRS_Get>
 800a86c:	9b03      	ldr	r3, [sp, #12]
 800a86e:	633b      	str	r3, [r7, #48]	; 0x30
 800a870:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a872:	f8c7 b02c 	str.w	fp, [r7, #44]	; 0x2c
 800a876:	e9c7 5409 	strd	r5, r4, [r7, #36]	; 0x24
 800a87a:	2006      	movs	r0, #6
 800a87c:	623b      	str	r3, [r7, #32]
 800a87e:	e76e      	b.n	800a75e <__gxx_personality_v0+0x26>
 800a880:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800a882:	4413      	add	r3, r2
 800a884:	42b3      	cmp	r3, r6
 800a886:	d872      	bhi.n	800a96e <__gxx_personality_v0+0x236>
 800a888:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800a88a:	42ab      	cmp	r3, r5
 800a88c:	d8a8      	bhi.n	800a7e0 <__gxx_personality_v0+0xa8>
 800a88e:	e7df      	b.n	800a850 <__gxx_personality_v0+0x118>
 800a890:	0702      	lsls	r2, r0, #28
 800a892:	f53f af5e 	bmi.w	800a752 <__gxx_personality_v0+0x1a>
 800a896:	2301      	movs	r3, #1
 800a898:	9302      	str	r3, [sp, #8]
 800a89a:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
 800a89e:	2300      	movs	r3, #0
 800a8a0:	f8cd a000 	str.w	sl, [sp]
 800a8a4:	220c      	movs	r2, #12
 800a8a6:	4619      	mov	r1, r3
 800a8a8:	4640      	mov	r0, r8
 800a8aa:	970c      	str	r7, [sp, #48]	; 0x30
 800a8ac:	f7fb fec0 	bl	8006630 <_Unwind_VRS_Set>
 800a8b0:	e772      	b.n	800a798 <__gxx_personality_v0+0x60>
 800a8b2:	0719      	lsls	r1, r3, #28
 800a8b4:	d558      	bpl.n	800a968 <__gxx_personality_v0+0x230>
 800a8b6:	f000 f991 	bl	800abdc <_ZSt9terminatev>
 800a8ba:	6a0d      	ldr	r5, [r1, #32]
 800a8bc:	4623      	mov	r3, r4
 800a8be:	220d      	movs	r2, #13
 800a8c0:	4621      	mov	r1, r4
 800a8c2:	4640      	mov	r0, r8
 800a8c4:	f7fb fe8e 	bl	80065e4 <_Unwind_VRS_Get>
 800a8c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a8ca:	429d      	cmp	r5, r3
 800a8cc:	d002      	beq.n	800a8d4 <__gxx_personality_v0+0x19c>
 800a8ce:	2302      	movs	r3, #2
 800a8d0:	9302      	str	r3, [sp, #8]
 800a8d2:	e7e4      	b.n	800a89e <__gxx_personality_v0+0x166>
 800a8d4:	4623      	mov	r3, r4
 800a8d6:	4621      	mov	r1, r4
 800a8d8:	220c      	movs	r2, #12
 800a8da:	f8cd a000 	str.w	sl, [sp]
 800a8de:	4640      	mov	r0, r8
 800a8e0:	970c      	str	r7, [sp, #48]	; 0x30
 800a8e2:	f7fb fea5 	bl	8006630 <_Unwind_VRS_Set>
 800a8e6:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800a8e8:	9203      	str	r2, [sp, #12]
 800a8ea:	e9d7 430a 	ldrd	r4, r3, [r7, #40]	; 0x28
 800a8ee:	2a00      	cmp	r2, #0
 800a8f0:	d03a      	beq.n	800a968 <__gxx_personality_v0+0x230>
 800a8f2:	469b      	mov	fp, r3
 800a8f4:	f10d 092c 	add.w	r9, sp, #44	; 0x2c
 800a8f8:	2c00      	cmp	r4, #0
 800a8fa:	db54      	blt.n	800a9a6 <__gxx_personality_v0+0x26e>
 800a8fc:	2503      	movs	r5, #3
 800a8fe:	2300      	movs	r3, #0
 800a900:	461a      	mov	r2, r3
 800a902:	4619      	mov	r1, r3
 800a904:	f8cd 9000 	str.w	r9, [sp]
 800a908:	4640      	mov	r0, r8
 800a90a:	970b      	str	r7, [sp, #44]	; 0x2c
 800a90c:	f7fb fe90 	bl	8006630 <_Unwind_VRS_Set>
 800a910:	2300      	movs	r3, #0
 800a912:	4619      	mov	r1, r3
 800a914:	2201      	movs	r2, #1
 800a916:	f8cd 9000 	str.w	r9, [sp]
 800a91a:	4640      	mov	r0, r8
 800a91c:	940b      	str	r4, [sp, #44]	; 0x2c
 800a91e:	f7fb fe87 	bl	8006630 <_Unwind_VRS_Set>
 800a922:	2300      	movs	r3, #0
 800a924:	4619      	mov	r1, r3
 800a926:	220f      	movs	r2, #15
 800a928:	f8cd 9000 	str.w	r9, [sp]
 800a92c:	4640      	mov	r0, r8
 800a92e:	f7fb fe59 	bl	80065e4 <_Unwind_VRS_Get>
 800a932:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800a934:	9903      	ldr	r1, [sp, #12]
 800a936:	f8cd 9000 	str.w	r9, [sp]
 800a93a:	f002 0201 	and.w	r2, r2, #1
 800a93e:	430a      	orrs	r2, r1
 800a940:	2300      	movs	r3, #0
 800a942:	920b      	str	r2, [sp, #44]	; 0x2c
 800a944:	4640      	mov	r0, r8
 800a946:	220f      	movs	r2, #15
 800a948:	4619      	mov	r1, r3
 800a94a:	f7fb fe71 	bl	8006630 <_Unwind_VRS_Set>
 800a94e:	2d02      	cmp	r5, #2
 800a950:	d024      	beq.n	800a99c <__gxx_personality_v0+0x264>
 800a952:	2007      	movs	r0, #7
 800a954:	b013      	add	sp, #76	; 0x4c
 800a956:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a95a:	9b02      	ldr	r3, [sp, #8]
 800a95c:	07de      	lsls	r6, r3, #31
 800a95e:	f53f af7a 	bmi.w	800a856 <__gxx_personality_v0+0x11e>
 800a962:	9b02      	ldr	r3, [sp, #8]
 800a964:	071b      	lsls	r3, r3, #28
 800a966:	d4a6      	bmi.n	800a8b6 <__gxx_personality_v0+0x17e>
 800a968:	4638      	mov	r0, r7
 800a96a:	f000 fd0b 	bl	800b384 <__cxa_call_terminate>
 800a96e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a970:	2b00      	cmp	r3, #0
 800a972:	f43f aeee 	beq.w	800a752 <__gxx_personality_v0+0x1a>
 800a976:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800a978:	4413      	add	r3, r2
 800a97a:	9303      	str	r3, [sp, #12]
 800a97c:	2c00      	cmp	r4, #0
 800a97e:	d136      	bne.n	800a9ee <__gxx_personality_v0+0x2b6>
 800a980:	2b00      	cmp	r3, #0
 800a982:	f43f aee6 	beq.w	800a752 <__gxx_personality_v0+0x1a>
 800a986:	9b02      	ldr	r3, [sp, #8]
 800a988:	07dd      	lsls	r5, r3, #31
 800a98a:	f53f aee2 	bmi.w	800a752 <__gxx_personality_v0+0x1a>
 800a98e:	9b02      	ldr	r3, [sp, #8]
 800a990:	071a      	lsls	r2, r3, #28
 800a992:	f140 8116 	bpl.w	800abc2 <__gxx_personality_v0+0x48a>
 800a996:	2400      	movs	r4, #0
 800a998:	2502      	movs	r5, #2
 800a99a:	e7b0      	b.n	800a8fe <__gxx_personality_v0+0x1c6>
 800a99c:	4638      	mov	r0, r7
 800a99e:	f7ff fcf9 	bl	800a394 <__cxa_begin_cleanup>
 800a9a2:	2007      	movs	r0, #7
 800a9a4:	e6db      	b.n	800a75e <__gxx_personality_v0+0x26>
 800a9a6:	f06f 4340 	mvn.w	r3, #3221225472	; 0xc0000000
 800a9aa:	1b1b      	subs	r3, r3, r4
 800a9ac:	461e      	mov	r6, r3
 800a9ae:	4652      	mov	r2, sl
 800a9b0:	4659      	mov	r1, fp
 800a9b2:	4640      	mov	r0, r8
 800a9b4:	f7ff fe78 	bl	800a6a8 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 800a9b8:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 800a9bc:	4641      	mov	r1, r8
 800a9be:	f7ff fe4f 	bl	800a660 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 800a9c2:	900e      	str	r0, [sp, #56]	; 0x38
 800a9c4:	4605      	mov	r5, r0
 800a9c6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800a9c8:	f850 3026 	ldr.w	r3, [r0, r6, lsl #2]
 800a9cc:	eb00 0086 	add.w	r0, r0, r6, lsl #2
 800a9d0:	b133      	cbz	r3, 800a9e0 <__gxx_personality_v0+0x2a8>
 800a9d2:	4602      	mov	r2, r0
 800a9d4:	2300      	movs	r3, #0
 800a9d6:	f852 1f04 	ldr.w	r1, [r2, #4]!
 800a9da:	3301      	adds	r3, #1
 800a9dc:	2900      	cmp	r1, #0
 800a9de:	d1fa      	bne.n	800a9d6 <__gxx_personality_v0+0x29e>
 800a9e0:	e9c7 350a 	strd	r3, r5, [r7, #40]	; 0x28
 800a9e4:	2304      	movs	r3, #4
 800a9e6:	6378      	str	r0, [r7, #52]	; 0x34
 800a9e8:	633b      	str	r3, [r7, #48]	; 0x30
 800a9ea:	2503      	movs	r5, #3
 800a9ec:	e787      	b.n	800a8fe <__gxx_personality_v0+0x1c6>
 800a9ee:	9e10      	ldr	r6, [sp, #64]	; 0x40
 800a9f0:	9b03      	ldr	r3, [sp, #12]
 800a9f2:	3c01      	subs	r4, #1
 800a9f4:	4426      	add	r6, r4
 800a9f6:	2b00      	cmp	r3, #0
 800a9f8:	f43f aeab 	beq.w	800a752 <__gxx_personality_v0+0x1a>
 800a9fc:	9b02      	ldr	r3, [sp, #8]
 800a9fe:	2e00      	cmp	r6, #0
 800aa00:	f000 80d7 	beq.w	800abb2 <__gxx_personality_v0+0x47a>
 800aa04:	f013 0308 	ands.w	r3, r3, #8
 800aa08:	9304      	str	r3, [sp, #16]
 800aa0a:	f000 80c9 	beq.w	800aba0 <__gxx_personality_v0+0x468>
 800aa0e:	2347      	movs	r3, #71	; 0x47
 800aa10:	703b      	strb	r3, [r7, #0]
 800aa12:	234e      	movs	r3, #78	; 0x4e
 800aa14:	707b      	strb	r3, [r7, #1]
 800aa16:	2355      	movs	r3, #85	; 0x55
 800aa18:	70bb      	strb	r3, [r7, #2]
 800aa1a:	2343      	movs	r3, #67	; 0x43
 800aa1c:	70fb      	strb	r3, [r7, #3]
 800aa1e:	2346      	movs	r3, #70	; 0x46
 800aa20:	713b      	strb	r3, [r7, #4]
 800aa22:	234f      	movs	r3, #79	; 0x4f
 800aa24:	717b      	strb	r3, [r7, #5]
 800aa26:	2352      	movs	r3, #82	; 0x52
 800aa28:	71bb      	strb	r3, [r7, #6]
 800aa2a:	2300      	movs	r3, #0
 800aa2c:	71fb      	strb	r3, [r7, #7]
 800aa2e:	2300      	movs	r3, #0
 800aa30:	f8cd b018 	str.w	fp, [sp, #24]
 800aa34:	f8cd 8014 	str.w	r8, [sp, #20]
 800aa38:	469b      	mov	fp, r3
 800aa3a:	f8cd a01c 	str.w	sl, [sp, #28]
 800aa3e:	2400      	movs	r4, #0
 800aa40:	4622      	mov	r2, r4
 800aa42:	f816 1b01 	ldrb.w	r1, [r6], #1
 800aa46:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800aa4a:	4093      	lsls	r3, r2
 800aa4c:	0608      	lsls	r0, r1, #24
 800aa4e:	ea44 0403 	orr.w	r4, r4, r3
 800aa52:	f102 0207 	add.w	r2, r2, #7
 800aa56:	d4f4      	bmi.n	800aa42 <__gxx_personality_v0+0x30a>
 800aa58:	2a1f      	cmp	r2, #31
 800aa5a:	d805      	bhi.n	800aa68 <__gxx_personality_v0+0x330>
 800aa5c:	0649      	lsls	r1, r1, #25
 800aa5e:	d503      	bpl.n	800aa68 <__gxx_personality_v0+0x330>
 800aa60:	2301      	movs	r3, #1
 800aa62:	4093      	lsls	r3, r2
 800aa64:	425b      	negs	r3, r3
 800aa66:	431c      	orrs	r4, r3
 800aa68:	2500      	movs	r5, #0
 800aa6a:	4630      	mov	r0, r6
 800aa6c:	462a      	mov	r2, r5
 800aa6e:	f810 1b01 	ldrb.w	r1, [r0], #1
 800aa72:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800aa76:	4093      	lsls	r3, r2
 800aa78:	431d      	orrs	r5, r3
 800aa7a:	060b      	lsls	r3, r1, #24
 800aa7c:	f102 0207 	add.w	r2, r2, #7
 800aa80:	d4f5      	bmi.n	800aa6e <__gxx_personality_v0+0x336>
 800aa82:	2a1f      	cmp	r2, #31
 800aa84:	d805      	bhi.n	800aa92 <__gxx_personality_v0+0x35a>
 800aa86:	064b      	lsls	r3, r1, #25
 800aa88:	d503      	bpl.n	800aa92 <__gxx_personality_v0+0x35a>
 800aa8a:	2301      	movs	r3, #1
 800aa8c:	4093      	lsls	r3, r2
 800aa8e:	425b      	negs	r3, r3
 800aa90:	431d      	orrs	r5, r3
 800aa92:	2c00      	cmp	r4, #0
 800aa94:	d034      	beq.n	800ab00 <__gxx_personality_v0+0x3c8>
 800aa96:	dc36      	bgt.n	800ab06 <__gxx_personality_v0+0x3ce>
 800aa98:	b117      	cbz	r7, 800aaa0 <__gxx_personality_v0+0x368>
 800aa9a:	9b04      	ldr	r3, [sp, #16]
 800aa9c:	2b00      	cmp	r3, #0
 800aa9e:	d04f      	beq.n	800ab40 <__gxx_personality_v0+0x408>
 800aaa0:	f06f 4a40 	mvn.w	sl, #3221225472	; 0xc0000000
 800aaa4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800aaa6:	ebaa 0a04 	sub.w	sl, sl, r4
 800aaaa:	f853 302a 	ldr.w	r3, [r3, sl, lsl #2]
 800aaae:	b1b3      	cbz	r3, 800aade <__gxx_personality_v0+0x3a6>
 800aab0:	2d00      	cmp	r5, #0
 800aab2:	d06a      	beq.n	800ab8a <__gxx_personality_v0+0x452>
 800aab4:	442e      	add	r6, r5
 800aab6:	e7c2      	b.n	800aa3e <__gxx_personality_v0+0x306>
 800aab8:	00a3      	lsls	r3, r4, #2
 800aaba:	425b      	negs	r3, r3
 800aabc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800aabe:	990e      	ldr	r1, [sp, #56]	; 0x38
 800aac0:	441a      	add	r2, r3
 800aac2:	464b      	mov	r3, r9
 800aac4:	f7ff fd6c 	bl	800a5a0 <_ZL28read_encoded_value_with_basehjPKhPj>
 800aac8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800aaca:	b141      	cbz	r1, 800aade <__gxx_personality_v0+0x3a6>
 800aacc:	2f00      	cmp	r7, #0
 800aace:	d0ef      	beq.n	800aab0 <__gxx_personality_v0+0x378>
 800aad0:	ab08      	add	r3, sp, #32
 800aad2:	2200      	movs	r2, #0
 800aad4:	4638      	mov	r0, r7
 800aad6:	f7ff fc05 	bl	800a2e4 <__cxa_type_match>
 800aada:	2800      	cmp	r0, #0
 800aadc:	d0e8      	beq.n	800aab0 <__gxx_personality_v0+0x378>
 800aade:	9b02      	ldr	r3, [sp, #8]
 800aae0:	f8dd a01c 	ldr.w	sl, [sp, #28]
 800aae4:	07db      	lsls	r3, r3, #31
 800aae6:	e9dd 8b05 	ldrd	r8, fp, [sp, #20]
 800aaea:	f53f aeb6 	bmi.w	800a85a <__gxx_personality_v0+0x122>
 800aaee:	9b04      	ldr	r3, [sp, #16]
 800aaf0:	2b00      	cmp	r3, #0
 800aaf2:	f43f af01 	beq.w	800a8f8 <__gxx_personality_v0+0x1c0>
 800aaf6:	2c00      	cmp	r4, #0
 800aaf8:	f6bf af00 	bge.w	800a8fc <__gxx_personality_v0+0x1c4>
 800aafc:	f000 f87c 	bl	800abf8 <_ZSt10unexpectedv>
 800ab00:	f04f 0b01 	mov.w	fp, #1
 800ab04:	e7d4      	b.n	800aab0 <__gxx_personality_v0+0x378>
 800ab06:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 800ab0a:	28ff      	cmp	r0, #255	; 0xff
 800ab0c:	d031      	beq.n	800ab72 <__gxx_personality_v0+0x43a>
 800ab0e:	f000 0307 	and.w	r3, r0, #7
 800ab12:	2b04      	cmp	r3, #4
 800ab14:	f63f ae29 	bhi.w	800a76a <__gxx_personality_v0+0x32>
 800ab18:	a201      	add	r2, pc, #4	; (adr r2, 800ab20 <__gxx_personality_v0+0x3e8>)
 800ab1a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ab1e:	bf00      	nop
 800ab20:	0800aab9 	.word	0x0800aab9
 800ab24:	0800a76b 	.word	0x0800a76b
 800ab28:	0800ab3b 	.word	0x0800ab3b
 800ab2c:	0800aab9 	.word	0x0800aab9
 800ab30:	0800ab35 	.word	0x0800ab35
 800ab34:	00e3      	lsls	r3, r4, #3
 800ab36:	425b      	negs	r3, r3
 800ab38:	e7c0      	b.n	800aabc <__gxx_personality_v0+0x384>
 800ab3a:	0063      	lsls	r3, r4, #1
 800ab3c:	425b      	negs	r3, r3
 800ab3e:	e7bd      	b.n	800aabc <__gxx_personality_v0+0x384>
 800ab40:	f06f 4a40 	mvn.w	sl, #3221225472	; 0xc0000000
 800ab44:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ab46:	9a08      	ldr	r2, [sp, #32]
 800ab48:	920b      	str	r2, [sp, #44]	; 0x2c
 800ab4a:	ebaa 0a04 	sub.w	sl, sl, r4
 800ab4e:	eb03 088a 	add.w	r8, r3, sl, lsl #2
 800ab52:	f853 102a 	ldr.w	r1, [r3, sl, lsl #2]
 800ab56:	b919      	cbnz	r1, 800ab60 <__gxx_personality_v0+0x428>
 800ab58:	e00d      	b.n	800ab76 <__gxx_personality_v0+0x43e>
 800ab5a:	f858 1f04 	ldr.w	r1, [r8, #4]!
 800ab5e:	b151      	cbz	r1, 800ab76 <__gxx_personality_v0+0x43e>
 800ab60:	4441      	add	r1, r8
 800ab62:	464b      	mov	r3, r9
 800ab64:	2200      	movs	r2, #0
 800ab66:	4638      	mov	r0, r7
 800ab68:	f7ff fbbc 	bl	800a2e4 <__cxa_type_match>
 800ab6c:	2800      	cmp	r0, #0
 800ab6e:	d0f4      	beq.n	800ab5a <__gxx_personality_v0+0x422>
 800ab70:	e79e      	b.n	800aab0 <__gxx_personality_v0+0x378>
 800ab72:	2300      	movs	r3, #0
 800ab74:	e7a2      	b.n	800aabc <__gxx_personality_v0+0x384>
 800ab76:	9b02      	ldr	r3, [sp, #8]
 800ab78:	07d8      	lsls	r0, r3, #31
 800ab7a:	4656      	mov	r6, sl
 800ab7c:	e9dd 8b05 	ldrd	r8, fp, [sp, #20]
 800ab80:	f8dd a01c 	ldr.w	sl, [sp, #28]
 800ab84:	f53f ae69 	bmi.w	800a85a <__gxx_personality_v0+0x122>
 800ab88:	e711      	b.n	800a9ae <__gxx_personality_v0+0x276>
 800ab8a:	465b      	mov	r3, fp
 800ab8c:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800ab90:	2b00      	cmp	r3, #0
 800ab92:	f43f adde 	beq.w	800a752 <__gxx_personality_v0+0x1a>
 800ab96:	9b02      	ldr	r3, [sp, #8]
 800ab98:	07d9      	lsls	r1, r3, #31
 800ab9a:	f53f adda 	bmi.w	800a752 <__gxx_personality_v0+0x1a>
 800ab9e:	e6fa      	b.n	800a996 <__gxx_personality_v0+0x25e>
 800aba0:	79fb      	ldrb	r3, [r7, #7]
 800aba2:	2b01      	cmp	r3, #1
 800aba4:	bf0c      	ite	eq
 800aba6:	f857 3c20 	ldreq.w	r3, [r7, #-32]
 800abaa:	f107 0358 	addne.w	r3, r7, #88	; 0x58
 800abae:	9308      	str	r3, [sp, #32]
 800abb0:	e73d      	b.n	800aa2e <__gxx_personality_v0+0x2f6>
 800abb2:	07da      	lsls	r2, r3, #31
 800abb4:	f53f adcd 	bmi.w	800a752 <__gxx_personality_v0+0x1a>
 800abb8:	9b02      	ldr	r3, [sp, #8]
 800abba:	f013 0408 	ands.w	r4, r3, #8
 800abbe:	f47f aeea 	bne.w	800a996 <__gxx_personality_v0+0x25e>
 800abc2:	2502      	movs	r5, #2
 800abc4:	e69b      	b.n	800a8fe <__gxx_personality_v0+0x1c6>
 800abc6:	f7ff fc4f 	bl	800a468 <__cxa_begin_catch>
 800abca:	e674      	b.n	800a8b6 <__gxx_personality_v0+0x17e>

0800abcc <_ZN10__cxxabiv111__terminateEPFvvE>:
 800abcc:	b508      	push	{r3, lr}
 800abce:	4780      	blx	r0
 800abd0:	f000 fc8e 	bl	800b4f0 <abort>
 800abd4:	f7ff fc48 	bl	800a468 <__cxa_begin_catch>
 800abd8:	f000 fc8a 	bl	800b4f0 <abort>

0800abdc <_ZSt9terminatev>:
 800abdc:	b508      	push	{r3, lr}
 800abde:	4b03      	ldr	r3, [pc, #12]	; (800abec <_ZSt9terminatev+0x10>)
 800abe0:	6818      	ldr	r0, [r3, #0]
 800abe2:	f3bf 8f5b 	dmb	ish
 800abe6:	f7ff fff1 	bl	800abcc <_ZN10__cxxabiv111__terminateEPFvvE>
 800abea:	bf00      	nop
 800abec:	20000018 	.word	0x20000018

0800abf0 <_ZN10__cxxabiv112__unexpectedEPFvvE>:
 800abf0:	b508      	push	{r3, lr}
 800abf2:	4780      	blx	r0
 800abf4:	f7ff fff2 	bl	800abdc <_ZSt9terminatev>

0800abf8 <_ZSt10unexpectedv>:
 800abf8:	b508      	push	{r3, lr}
 800abfa:	4b03      	ldr	r3, [pc, #12]	; (800ac08 <_ZSt10unexpectedv+0x10>)
 800abfc:	6818      	ldr	r0, [r3, #0]
 800abfe:	f3bf 8f5b 	dmb	ish
 800ac02:	f7ff fff5 	bl	800abf0 <_ZN10__cxxabiv112__unexpectedEPFvvE>
 800ac06:	bf00      	nop
 800ac08:	20000014 	.word	0x20000014

0800ac0c <_ZSt13get_terminatev>:
 800ac0c:	4b02      	ldr	r3, [pc, #8]	; (800ac18 <_ZSt13get_terminatev+0xc>)
 800ac0e:	6818      	ldr	r0, [r3, #0]
 800ac10:	f3bf 8f5b 	dmb	ish
 800ac14:	4770      	bx	lr
 800ac16:	bf00      	nop
 800ac18:	20000018 	.word	0x20000018

0800ac1c <_ZSt14get_unexpectedv>:
 800ac1c:	4b02      	ldr	r3, [pc, #8]	; (800ac28 <_ZSt14get_unexpectedv+0xc>)
 800ac1e:	6818      	ldr	r0, [r3, #0]
 800ac20:	f3bf 8f5b 	dmb	ish
 800ac24:	4770      	bx	lr
 800ac26:	bf00      	nop
 800ac28:	20000014 	.word	0x20000014

0800ac2c <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block>:
 800ac2c:	b500      	push	{lr}
 800ac2e:	2801      	cmp	r0, #1
 800ac30:	b083      	sub	sp, #12
 800ac32:	d81d      	bhi.n	800ac70 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x44>
 800ac34:	f3bf 8f5b 	dmb	ish
 800ac38:	f1a1 0328 	sub.w	r3, r1, #40	; 0x28
 800ac3c:	e853 2f00 	ldrex	r2, [r3]
 800ac40:	3a01      	subs	r2, #1
 800ac42:	e843 2000 	strex	r0, r2, [r3]
 800ac46:	2800      	cmp	r0, #0
 800ac48:	d1f8      	bne.n	800ac3c <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x10>
 800ac4a:	f3bf 8f5b 	dmb	ish
 800ac4e:	b962      	cbnz	r2, 800ac6a <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x3e>
 800ac50:	f851 3c1c 	ldr.w	r3, [r1, #-28]
 800ac54:	f101 0058 	add.w	r0, r1, #88	; 0x58
 800ac58:	b113      	cbz	r3, 800ac60 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x34>
 800ac5a:	9001      	str	r0, [sp, #4]
 800ac5c:	4798      	blx	r3
 800ac5e:	9801      	ldr	r0, [sp, #4]
 800ac60:	b003      	add	sp, #12
 800ac62:	f85d eb04 	ldr.w	lr, [sp], #4
 800ac66:	f7ff bb13 	b.w	800a290 <__cxa_free_exception>
 800ac6a:	b003      	add	sp, #12
 800ac6c:	f85d fb04 	ldr.w	pc, [sp], #4
 800ac70:	f851 0c14 	ldr.w	r0, [r1, #-20]
 800ac74:	f7ff ffaa 	bl	800abcc <_ZN10__cxxabiv111__terminateEPFvvE>

0800ac78 <__cxa_init_primary_exception>:
 800ac78:	b538      	push	{r3, r4, r5, lr}
 800ac7a:	2500      	movs	r5, #0
 800ac7c:	e940 121e 	strd	r1, r2, [r0, #-120]	; 0x78
 800ac80:	f840 5c80 	str.w	r5, [r0, #-128]
 800ac84:	4604      	mov	r4, r0
 800ac86:	f7ff ffc9 	bl	800ac1c <_ZSt14get_unexpectedv>
 800ac8a:	f844 0c70 	str.w	r0, [r4, #-112]
 800ac8e:	f7ff ffbd 	bl	800ac0c <_ZSt13get_terminatev>
 800ac92:	2243      	movs	r2, #67	; 0x43
 800ac94:	232b      	movs	r3, #43	; 0x2b
 800ac96:	2147      	movs	r1, #71	; 0x47
 800ac98:	f804 2c55 	strb.w	r2, [r4, #-85]
 800ac9c:	f804 2c54 	strb.w	r2, [r4, #-84]
 800aca0:	f804 3c53 	strb.w	r3, [r4, #-83]
 800aca4:	f804 3c52 	strb.w	r3, [r4, #-82]
 800aca8:	224e      	movs	r2, #78	; 0x4e
 800acaa:	2355      	movs	r3, #85	; 0x55
 800acac:	f804 1c58 	strb.w	r1, [r4, #-88]
 800acb0:	f804 5c51 	strb.w	r5, [r4, #-81]
 800acb4:	4905      	ldr	r1, [pc, #20]	; (800accc <__cxa_init_primary_exception+0x54>)
 800acb6:	f804 2c57 	strb.w	r2, [r4, #-87]
 800acba:	f804 3c56 	strb.w	r3, [r4, #-86]
 800acbe:	f844 0c6c 	str.w	r0, [r4, #-108]
 800acc2:	f844 1c50 	str.w	r1, [r4, #-80]
 800acc6:	f1a4 0080 	sub.w	r0, r4, #128	; 0x80
 800acca:	bd38      	pop	{r3, r4, r5, pc}
 800accc:	0800ac2d 	.word	0x0800ac2d

0800acd0 <__cxa_throw>:
 800acd0:	b510      	push	{r4, lr}
 800acd2:	b082      	sub	sp, #8
 800acd4:	e9cd 2100 	strd	r2, r1, [sp]
 800acd8:	4604      	mov	r4, r0
 800acda:	f7ff fc5d 	bl	800a598 <__cxa_get_globals>
 800acde:	4603      	mov	r3, r0
 800ace0:	6840      	ldr	r0, [r0, #4]
 800ace2:	9a00      	ldr	r2, [sp, #0]
 800ace4:	9901      	ldr	r1, [sp, #4]
 800ace6:	3001      	adds	r0, #1
 800ace8:	6058      	str	r0, [r3, #4]
 800acea:	4620      	mov	r0, r4
 800acec:	f7ff ffc4 	bl	800ac78 <__cxa_init_primary_exception>
 800acf0:	4604      	mov	r4, r0
 800acf2:	2301      	movs	r3, #1
 800acf4:	f844 3b28 	str.w	r3, [r4], #40
 800acf8:	4620      	mov	r0, r4
 800acfa:	f7fc f82d 	bl	8006d58 <_Unwind_RaiseException>
 800acfe:	4620      	mov	r0, r4
 800ad00:	f7ff fbb2 	bl	800a468 <__cxa_begin_catch>
 800ad04:	f7ff ff6a 	bl	800abdc <_ZSt9terminatev>

0800ad08 <__cxa_rethrow>:
 800ad08:	b510      	push	{r4, lr}
 800ad0a:	f7ff fc45 	bl	800a598 <__cxa_get_globals>
 800ad0e:	e9d0 4200 	ldrd	r4, r2, [r0]
 800ad12:	3201      	adds	r2, #1
 800ad14:	6042      	str	r2, [r0, #4]
 800ad16:	b164      	cbz	r4, 800ad32 <__cxa_rethrow+0x2a>
 800ad18:	f894 2020 	ldrb.w	r2, [r4, #32]
 800ad1c:	2a47      	cmp	r2, #71	; 0x47
 800ad1e:	d00a      	beq.n	800ad36 <__cxa_rethrow+0x2e>
 800ad20:	2200      	movs	r2, #0
 800ad22:	6002      	str	r2, [r0, #0]
 800ad24:	3420      	adds	r4, #32
 800ad26:	4620      	mov	r0, r4
 800ad28:	f7fc f83a 	bl	8006da0 <_Unwind_Resume_or_Rethrow>
 800ad2c:	4620      	mov	r0, r4
 800ad2e:	f7ff fb9b 	bl	800a468 <__cxa_begin_catch>
 800ad32:	f7ff ff53 	bl	800abdc <_ZSt9terminatev>
 800ad36:	f894 2021 	ldrb.w	r2, [r4, #33]	; 0x21
 800ad3a:	2a4e      	cmp	r2, #78	; 0x4e
 800ad3c:	d1f0      	bne.n	800ad20 <__cxa_rethrow+0x18>
 800ad3e:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
 800ad42:	2a55      	cmp	r2, #85	; 0x55
 800ad44:	d1ec      	bne.n	800ad20 <__cxa_rethrow+0x18>
 800ad46:	f894 2023 	ldrb.w	r2, [r4, #35]	; 0x23
 800ad4a:	2a43      	cmp	r2, #67	; 0x43
 800ad4c:	d1e8      	bne.n	800ad20 <__cxa_rethrow+0x18>
 800ad4e:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 800ad52:	2a43      	cmp	r2, #67	; 0x43
 800ad54:	d1e4      	bne.n	800ad20 <__cxa_rethrow+0x18>
 800ad56:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 800ad5a:	2a2b      	cmp	r2, #43	; 0x2b
 800ad5c:	d1e0      	bne.n	800ad20 <__cxa_rethrow+0x18>
 800ad5e:	f894 2026 	ldrb.w	r2, [r4, #38]	; 0x26
 800ad62:	2a2b      	cmp	r2, #43	; 0x2b
 800ad64:	d1dc      	bne.n	800ad20 <__cxa_rethrow+0x18>
 800ad66:	f894 2027 	ldrb.w	r2, [r4, #39]	; 0x27
 800ad6a:	2a01      	cmp	r2, #1
 800ad6c:	d8d8      	bhi.n	800ad20 <__cxa_rethrow+0x18>
 800ad6e:	6962      	ldr	r2, [r4, #20]
 800ad70:	4252      	negs	r2, r2
 800ad72:	6162      	str	r2, [r4, #20]
 800ad74:	e7d6      	b.n	800ad24 <__cxa_rethrow+0x1c>
 800ad76:	bf00      	nop

0800ad78 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
 800ad78:	b510      	push	{r4, lr}
 800ad7a:	4b03      	ldr	r3, [pc, #12]	; (800ad88 <_ZN10__cxxabiv120__si_class_type_infoD1Ev+0x10>)
 800ad7c:	6003      	str	r3, [r0, #0]
 800ad7e:	4604      	mov	r4, r0
 800ad80:	f7ff f99e 	bl	800a0c0 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 800ad84:	4620      	mov	r0, r4
 800ad86:	bd10      	pop	{r4, pc}
 800ad88:	0800d250 	.word	0x0800d250

0800ad8c <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
 800ad8c:	b510      	push	{r4, lr}
 800ad8e:	4b05      	ldr	r3, [pc, #20]	; (800ada4 <_ZN10__cxxabiv120__si_class_type_infoD0Ev+0x18>)
 800ad90:	6003      	str	r3, [r0, #0]
 800ad92:	4604      	mov	r4, r0
 800ad94:	f7ff f994 	bl	800a0c0 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 800ad98:	4620      	mov	r0, r4
 800ad9a:	210c      	movs	r1, #12
 800ad9c:	f7ff f9ee 	bl	800a17c <_ZdlPvj>
 800ada0:	4620      	mov	r0, r4
 800ada2:	bd10      	pop	{r4, pc}
 800ada4:	0800d250 	.word	0x0800d250

0800ada8 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 800ada8:	b570      	push	{r4, r5, r6, lr}
 800adaa:	b082      	sub	sp, #8
 800adac:	4604      	mov	r4, r0
 800adae:	9e06      	ldr	r6, [sp, #24]
 800adb0:	4296      	cmp	r6, r2
 800adb2:	460d      	mov	r5, r1
 800adb4:	d009      	beq.n	800adca <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x22>
 800adb6:	68a0      	ldr	r0, [r4, #8]
 800adb8:	6804      	ldr	r4, [r0, #0]
 800adba:	9606      	str	r6, [sp, #24]
 800adbc:	6a24      	ldr	r4, [r4, #32]
 800adbe:	4629      	mov	r1, r5
 800adc0:	46a4      	mov	ip, r4
 800adc2:	b002      	add	sp, #8
 800adc4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800adc8:	4760      	bx	ip
 800adca:	4619      	mov	r1, r3
 800adcc:	9201      	str	r2, [sp, #4]
 800adce:	9300      	str	r3, [sp, #0]
 800add0:	f000 f860 	bl	800ae94 <_ZNKSt9type_infoeqERKS_>
 800add4:	e9dd 3200 	ldrd	r3, r2, [sp]
 800add8:	2800      	cmp	r0, #0
 800adda:	d0ec      	beq.n	800adb6 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xe>
 800addc:	2006      	movs	r0, #6
 800adde:	b002      	add	sp, #8
 800ade0:	bd70      	pop	{r4, r5, r6, pc}
 800ade2:	bf00      	nop

0800ade4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 800ade4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ade8:	460c      	mov	r4, r1
 800adea:	b081      	sub	sp, #4
 800adec:	4619      	mov	r1, r3
 800adee:	e9dd 690a 	ldrd	r6, r9, [sp, #40]	; 0x28
 800adf2:	e9dd 870c 	ldrd	r8, r7, [sp, #48]	; 0x30
 800adf6:	469b      	mov	fp, r3
 800adf8:	4605      	mov	r5, r0
 800adfa:	4692      	mov	sl, r2
 800adfc:	f000 f84a 	bl	800ae94 <_ZNKSt9type_infoeqERKS_>
 800ae00:	b980      	cbnz	r0, 800ae24 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x40>
 800ae02:	4546      	cmp	r6, r8
 800ae04:	d022      	beq.n	800ae4c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x68>
 800ae06:	68a8      	ldr	r0, [r5, #8]
 800ae08:	4621      	mov	r1, r4
 800ae0a:	6804      	ldr	r4, [r0, #0]
 800ae0c:	e9cd 870c 	strd	r8, r7, [sp, #48]	; 0x30
 800ae10:	e9cd 690a 	strd	r6, r9, [sp, #40]	; 0x28
 800ae14:	69e4      	ldr	r4, [r4, #28]
 800ae16:	465b      	mov	r3, fp
 800ae18:	4652      	mov	r2, sl
 800ae1a:	46a4      	mov	ip, r4
 800ae1c:	b001      	add	sp, #4
 800ae1e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ae22:	4760      	bx	ip
 800ae24:	2c00      	cmp	r4, #0
 800ae26:	603e      	str	r6, [r7, #0]
 800ae28:	f887 a004 	strb.w	sl, [r7, #4]
 800ae2c:	db09      	blt.n	800ae42 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x5e>
 800ae2e:	4426      	add	r6, r4
 800ae30:	45b0      	cmp	r8, r6
 800ae32:	bf0c      	ite	eq
 800ae34:	2606      	moveq	r6, #6
 800ae36:	2601      	movne	r6, #1
 800ae38:	71be      	strb	r6, [r7, #6]
 800ae3a:	2000      	movs	r0, #0
 800ae3c:	b001      	add	sp, #4
 800ae3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ae42:	3402      	adds	r4, #2
 800ae44:	d1f9      	bne.n	800ae3a <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x56>
 800ae46:	2301      	movs	r3, #1
 800ae48:	71bb      	strb	r3, [r7, #6]
 800ae4a:	e7f6      	b.n	800ae3a <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x56>
 800ae4c:	4649      	mov	r1, r9
 800ae4e:	4628      	mov	r0, r5
 800ae50:	f000 f820 	bl	800ae94 <_ZNKSt9type_infoeqERKS_>
 800ae54:	2800      	cmp	r0, #0
 800ae56:	d0d6      	beq.n	800ae06 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x22>
 800ae58:	f887 a005 	strb.w	sl, [r7, #5]
 800ae5c:	e7ed      	b.n	800ae3a <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x56>
 800ae5e:	bf00      	nop

0800ae60 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 800ae60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ae64:	4606      	mov	r6, r0
 800ae66:	460f      	mov	r7, r1
 800ae68:	4614      	mov	r4, r2
 800ae6a:	461d      	mov	r5, r3
 800ae6c:	f7ff f962 	bl	800a134 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 800ae70:	b948      	cbnz	r0, 800ae86 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x26>
 800ae72:	68b0      	ldr	r0, [r6, #8]
 800ae74:	6801      	ldr	r1, [r0, #0]
 800ae76:	4622      	mov	r2, r4
 800ae78:	698c      	ldr	r4, [r1, #24]
 800ae7a:	462b      	mov	r3, r5
 800ae7c:	4639      	mov	r1, r7
 800ae7e:	46a4      	mov	ip, r4
 800ae80:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ae84:	4760      	bx	ip
 800ae86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ae8a:	bf00      	nop

0800ae8c <_ZNSt9type_infoD1Ev>:
 800ae8c:	4770      	bx	lr
 800ae8e:	bf00      	nop

0800ae90 <_ZNKSt9type_info14__is_pointer_pEv>:
 800ae90:	2000      	movs	r0, #0
 800ae92:	4770      	bx	lr

0800ae94 <_ZNKSt9type_infoeqERKS_>:
 800ae94:	4281      	cmp	r1, r0
 800ae96:	d011      	beq.n	800aebc <_ZNKSt9type_infoeqERKS_+0x28>
 800ae98:	b508      	push	{r3, lr}
 800ae9a:	6840      	ldr	r0, [r0, #4]
 800ae9c:	7803      	ldrb	r3, [r0, #0]
 800ae9e:	2b2a      	cmp	r3, #42	; 0x2a
 800aea0:	d00a      	beq.n	800aeb8 <_ZNKSt9type_infoeqERKS_+0x24>
 800aea2:	6849      	ldr	r1, [r1, #4]
 800aea4:	780b      	ldrb	r3, [r1, #0]
 800aea6:	2b2a      	cmp	r3, #42	; 0x2a
 800aea8:	bf08      	it	eq
 800aeaa:	3101      	addeq	r1, #1
 800aeac:	f7fb f970 	bl	8006190 <strcmp>
 800aeb0:	fab0 f080 	clz	r0, r0
 800aeb4:	0940      	lsrs	r0, r0, #5
 800aeb6:	bd08      	pop	{r3, pc}
 800aeb8:	2000      	movs	r0, #0
 800aeba:	bd08      	pop	{r3, pc}
 800aebc:	2001      	movs	r0, #1
 800aebe:	4770      	bx	lr

0800aec0 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv>:
 800aec0:	b570      	push	{r4, r5, r6, lr}
 800aec2:	4b3b      	ldr	r3, [pc, #236]	; (800afb0 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf0>)
 800aec4:	781a      	ldrb	r2, [r3, #0]
 800aec6:	b082      	sub	sp, #8
 800aec8:	2a00      	cmp	r2, #0
 800aeca:	d141      	bne.n	800af50 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x90>
 800aecc:	2401      	movs	r4, #1
 800aece:	701c      	strb	r4, [r3, #0]
 800aed0:	f000 fada 	bl	800b488 <__cxa_current_exception_type>
 800aed4:	2800      	cmp	r0, #0
 800aed6:	d031      	beq.n	800af3c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x7c>
 800aed8:	6844      	ldr	r4, [r0, #4]
 800aeda:	4d36      	ldr	r5, [pc, #216]	; (800afb4 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf4>)
 800aedc:	7823      	ldrb	r3, [r4, #0]
 800aede:	2b2a      	cmp	r3, #42	; 0x2a
 800aee0:	bf08      	it	eq
 800aee2:	3401      	addeq	r4, #1
 800aee4:	2200      	movs	r2, #0
 800aee6:	f04f 30ff 	mov.w	r0, #4294967295
 800aeea:	4611      	mov	r1, r2
 800aeec:	ab01      	add	r3, sp, #4
 800aeee:	9001      	str	r0, [sp, #4]
 800aef0:	4620      	mov	r0, r4
 800aef2:	f7fb f8d9 	bl	80060a8 <__cxa_demangle>
 800aef6:	682b      	ldr	r3, [r5, #0]
 800aef8:	2230      	movs	r2, #48	; 0x30
 800aefa:	68db      	ldr	r3, [r3, #12]
 800aefc:	4606      	mov	r6, r0
 800aefe:	2101      	movs	r1, #1
 800af00:	482d      	ldr	r0, [pc, #180]	; (800afb8 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf8>)
 800af02:	f000 fd85 	bl	800ba10 <fwrite>
 800af06:	9b01      	ldr	r3, [sp, #4]
 800af08:	b193      	cbz	r3, 800af30 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x70>
 800af0a:	682b      	ldr	r3, [r5, #0]
 800af0c:	4620      	mov	r0, r4
 800af0e:	68d9      	ldr	r1, [r3, #12]
 800af10:	f000 fd0c 	bl	800b92c <fputs>
 800af14:	682b      	ldr	r3, [r5, #0]
 800af16:	4829      	ldr	r0, [pc, #164]	; (800afbc <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xfc>)
 800af18:	68db      	ldr	r3, [r3, #12]
 800af1a:	2202      	movs	r2, #2
 800af1c:	2101      	movs	r1, #1
 800af1e:	f000 fd77 	bl	800ba10 <fwrite>
 800af22:	9b01      	ldr	r3, [sp, #4]
 800af24:	b913      	cbnz	r3, 800af2c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x6c>
 800af26:	4630      	mov	r0, r6
 800af28:	f000 faf2 	bl	800b510 <free>
 800af2c:	f7ff feec 	bl	800ad08 <__cxa_rethrow>
 800af30:	682b      	ldr	r3, [r5, #0]
 800af32:	4630      	mov	r0, r6
 800af34:	68d9      	ldr	r1, [r3, #12]
 800af36:	f000 fcf9 	bl	800b92c <fputs>
 800af3a:	e7eb      	b.n	800af14 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x54>
 800af3c:	4b1d      	ldr	r3, [pc, #116]	; (800afb4 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf4>)
 800af3e:	4820      	ldr	r0, [pc, #128]	; (800afc0 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x100>)
 800af40:	681b      	ldr	r3, [r3, #0]
 800af42:	222d      	movs	r2, #45	; 0x2d
 800af44:	68db      	ldr	r3, [r3, #12]
 800af46:	4621      	mov	r1, r4
 800af48:	f000 fd62 	bl	800ba10 <fwrite>
 800af4c:	f000 fad0 	bl	800b4f0 <abort>
 800af50:	4b18      	ldr	r3, [pc, #96]	; (800afb4 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf4>)
 800af52:	481c      	ldr	r0, [pc, #112]	; (800afc4 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x104>)
 800af54:	681b      	ldr	r3, [r3, #0]
 800af56:	221d      	movs	r2, #29
 800af58:	68db      	ldr	r3, [r3, #12]
 800af5a:	2101      	movs	r1, #1
 800af5c:	f000 fd58 	bl	800ba10 <fwrite>
 800af60:	f000 fac6 	bl	800b4f0 <abort>
 800af64:	2901      	cmp	r1, #1
 800af66:	460c      	mov	r4, r1
 800af68:	d119      	bne.n	800af9e <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xde>
 800af6a:	f7ff fa7d 	bl	800a468 <__cxa_begin_catch>
 800af6e:	6803      	ldr	r3, [r0, #0]
 800af70:	689b      	ldr	r3, [r3, #8]
 800af72:	4798      	blx	r3
 800af74:	682b      	ldr	r3, [r5, #0]
 800af76:	4621      	mov	r1, r4
 800af78:	68db      	ldr	r3, [r3, #12]
 800af7a:	4604      	mov	r4, r0
 800af7c:	220b      	movs	r2, #11
 800af7e:	4812      	ldr	r0, [pc, #72]	; (800afc8 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x108>)
 800af80:	f000 fd46 	bl	800ba10 <fwrite>
 800af84:	682b      	ldr	r3, [r5, #0]
 800af86:	4620      	mov	r0, r4
 800af88:	68d9      	ldr	r1, [r3, #12]
 800af8a:	f000 fccf 	bl	800b92c <fputs>
 800af8e:	682b      	ldr	r3, [r5, #0]
 800af90:	200a      	movs	r0, #10
 800af92:	68d9      	ldr	r1, [r3, #12]
 800af94:	f000 fc70 	bl	800b878 <fputc>
 800af98:	f7ff faa4 	bl	800a4e4 <__cxa_end_catch>
 800af9c:	e7d6      	b.n	800af4c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x8c>
 800af9e:	f7ff fa63 	bl	800a468 <__cxa_begin_catch>
 800afa2:	f7ff fa9f 	bl	800a4e4 <__cxa_end_catch>
 800afa6:	e7d1      	b.n	800af4c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x8c>
 800afa8:	f7ff fa9c 	bl	800a4e4 <__cxa_end_catch>
 800afac:	f7ff f994 	bl	800a2d8 <__cxa_end_cleanup>
 800afb0:	20000544 	.word	0x20000544
 800afb4:	20000074 	.word	0x20000074
 800afb8:	0800d2ac 	.word	0x0800d2ac
 800afbc:	0800d2e0 	.word	0x0800d2e0
 800afc0:	0800d2e4 	.word	0x0800d2e4
 800afc4:	0800d28c 	.word	0x0800d28c
 800afc8:	0800d314 	.word	0x0800d314

0800afcc <_ZNKSt11logic_error4whatEv>:
 800afcc:	6840      	ldr	r0, [r0, #4]
 800afce:	4770      	bx	lr

0800afd0 <_ZNSt11logic_errorD1Ev>:
 800afd0:	b510      	push	{r4, lr}
 800afd2:	6843      	ldr	r3, [r0, #4]
 800afd4:	4a0c      	ldr	r2, [pc, #48]	; (800b008 <_ZNSt11logic_errorD1Ev+0x38>)
 800afd6:	490d      	ldr	r1, [pc, #52]	; (800b00c <_ZNSt11logic_errorD1Ev+0x3c>)
 800afd8:	4604      	mov	r4, r0
 800afda:	f1a3 000c 	sub.w	r0, r3, #12
 800afde:	4290      	cmp	r0, r2
 800afe0:	b082      	sub	sp, #8
 800afe2:	6021      	str	r1, [r4, #0]
 800afe4:	d105      	bne.n	800aff2 <_ZNSt11logic_errorD1Ev+0x22>
 800afe6:	4620      	mov	r0, r4
 800afe8:	f7ff fac2 	bl	800a570 <_ZNSt9exceptionD1Ev>
 800afec:	4620      	mov	r0, r4
 800afee:	b002      	add	sp, #8
 800aff0:	bd10      	pop	{r4, pc}
 800aff2:	f853 2c04 	ldr.w	r2, [r3, #-4]
 800aff6:	1e51      	subs	r1, r2, #1
 800aff8:	2a00      	cmp	r2, #0
 800affa:	f843 1c04 	str.w	r1, [r3, #-4]
 800affe:	dcf2      	bgt.n	800afe6 <_ZNSt11logic_errorD1Ev+0x16>
 800b000:	a901      	add	r1, sp, #4
 800b002:	f000 f941 	bl	800b288 <_ZNSs4_Rep10_M_destroyERKSaIcE>
 800b006:	e7ee      	b.n	800afe6 <_ZNSt11logic_errorD1Ev+0x16>
 800b008:	20000548 	.word	0x20000548
 800b00c:	0800d388 	.word	0x0800d388

0800b010 <_ZNSt12length_errorD1Ev>:
 800b010:	b510      	push	{r4, lr}
 800b012:	6843      	ldr	r3, [r0, #4]
 800b014:	4a0c      	ldr	r2, [pc, #48]	; (800b048 <_ZNSt12length_errorD1Ev+0x38>)
 800b016:	490d      	ldr	r1, [pc, #52]	; (800b04c <_ZNSt12length_errorD1Ev+0x3c>)
 800b018:	4604      	mov	r4, r0
 800b01a:	f1a3 000c 	sub.w	r0, r3, #12
 800b01e:	4290      	cmp	r0, r2
 800b020:	b082      	sub	sp, #8
 800b022:	6021      	str	r1, [r4, #0]
 800b024:	d105      	bne.n	800b032 <_ZNSt12length_errorD1Ev+0x22>
 800b026:	4620      	mov	r0, r4
 800b028:	f7ff faa2 	bl	800a570 <_ZNSt9exceptionD1Ev>
 800b02c:	4620      	mov	r0, r4
 800b02e:	b002      	add	sp, #8
 800b030:	bd10      	pop	{r4, pc}
 800b032:	f853 2c04 	ldr.w	r2, [r3, #-4]
 800b036:	1e51      	subs	r1, r2, #1
 800b038:	2a00      	cmp	r2, #0
 800b03a:	f843 1c04 	str.w	r1, [r3, #-4]
 800b03e:	dcf2      	bgt.n	800b026 <_ZNSt12length_errorD1Ev+0x16>
 800b040:	a901      	add	r1, sp, #4
 800b042:	f000 f921 	bl	800b288 <_ZNSs4_Rep10_M_destroyERKSaIcE>
 800b046:	e7ee      	b.n	800b026 <_ZNSt12length_errorD1Ev+0x16>
 800b048:	20000548 	.word	0x20000548
 800b04c:	0800d388 	.word	0x0800d388

0800b050 <_ZNSt16invalid_argumentD1Ev>:
 800b050:	b510      	push	{r4, lr}
 800b052:	6843      	ldr	r3, [r0, #4]
 800b054:	4a0c      	ldr	r2, [pc, #48]	; (800b088 <_ZNSt16invalid_argumentD1Ev+0x38>)
 800b056:	490d      	ldr	r1, [pc, #52]	; (800b08c <_ZNSt16invalid_argumentD1Ev+0x3c>)
 800b058:	4604      	mov	r4, r0
 800b05a:	f1a3 000c 	sub.w	r0, r3, #12
 800b05e:	4290      	cmp	r0, r2
 800b060:	b082      	sub	sp, #8
 800b062:	6021      	str	r1, [r4, #0]
 800b064:	d105      	bne.n	800b072 <_ZNSt16invalid_argumentD1Ev+0x22>
 800b066:	4620      	mov	r0, r4
 800b068:	f7ff fa82 	bl	800a570 <_ZNSt9exceptionD1Ev>
 800b06c:	4620      	mov	r0, r4
 800b06e:	b002      	add	sp, #8
 800b070:	bd10      	pop	{r4, pc}
 800b072:	f853 2c04 	ldr.w	r2, [r3, #-4]
 800b076:	1e51      	subs	r1, r2, #1
 800b078:	2a00      	cmp	r2, #0
 800b07a:	f843 1c04 	str.w	r1, [r3, #-4]
 800b07e:	dcf2      	bgt.n	800b066 <_ZNSt16invalid_argumentD1Ev+0x16>
 800b080:	a901      	add	r1, sp, #4
 800b082:	f000 f901 	bl	800b288 <_ZNSs4_Rep10_M_destroyERKSaIcE>
 800b086:	e7ee      	b.n	800b066 <_ZNSt16invalid_argumentD1Ev+0x16>
 800b088:	20000548 	.word	0x20000548
 800b08c:	0800d388 	.word	0x0800d388

0800b090 <_ZNSt11logic_errorD0Ev>:
 800b090:	b510      	push	{r4, lr}
 800b092:	6843      	ldr	r3, [r0, #4]
 800b094:	4a0e      	ldr	r2, [pc, #56]	; (800b0d0 <_ZNSt11logic_errorD0Ev+0x40>)
 800b096:	490f      	ldr	r1, [pc, #60]	; (800b0d4 <_ZNSt11logic_errorD0Ev+0x44>)
 800b098:	4604      	mov	r4, r0
 800b09a:	f1a3 000c 	sub.w	r0, r3, #12
 800b09e:	4290      	cmp	r0, r2
 800b0a0:	b082      	sub	sp, #8
 800b0a2:	6021      	str	r1, [r4, #0]
 800b0a4:	d108      	bne.n	800b0b8 <_ZNSt11logic_errorD0Ev+0x28>
 800b0a6:	4620      	mov	r0, r4
 800b0a8:	f7ff fa62 	bl	800a570 <_ZNSt9exceptionD1Ev>
 800b0ac:	4620      	mov	r0, r4
 800b0ae:	f000 f949 	bl	800b344 <_ZdlPv>
 800b0b2:	4620      	mov	r0, r4
 800b0b4:	b002      	add	sp, #8
 800b0b6:	bd10      	pop	{r4, pc}
 800b0b8:	f853 2c04 	ldr.w	r2, [r3, #-4]
 800b0bc:	1e51      	subs	r1, r2, #1
 800b0be:	2a00      	cmp	r2, #0
 800b0c0:	f843 1c04 	str.w	r1, [r3, #-4]
 800b0c4:	dcef      	bgt.n	800b0a6 <_ZNSt11logic_errorD0Ev+0x16>
 800b0c6:	a901      	add	r1, sp, #4
 800b0c8:	f000 f8de 	bl	800b288 <_ZNSs4_Rep10_M_destroyERKSaIcE>
 800b0cc:	e7eb      	b.n	800b0a6 <_ZNSt11logic_errorD0Ev+0x16>
 800b0ce:	bf00      	nop
 800b0d0:	20000548 	.word	0x20000548
 800b0d4:	0800d388 	.word	0x0800d388

0800b0d8 <_ZNSt16invalid_argumentD0Ev>:
 800b0d8:	b510      	push	{r4, lr}
 800b0da:	6843      	ldr	r3, [r0, #4]
 800b0dc:	4a0e      	ldr	r2, [pc, #56]	; (800b118 <_ZNSt16invalid_argumentD0Ev+0x40>)
 800b0de:	490f      	ldr	r1, [pc, #60]	; (800b11c <_ZNSt16invalid_argumentD0Ev+0x44>)
 800b0e0:	4604      	mov	r4, r0
 800b0e2:	f1a3 000c 	sub.w	r0, r3, #12
 800b0e6:	4290      	cmp	r0, r2
 800b0e8:	b082      	sub	sp, #8
 800b0ea:	6021      	str	r1, [r4, #0]
 800b0ec:	d108      	bne.n	800b100 <_ZNSt16invalid_argumentD0Ev+0x28>
 800b0ee:	4620      	mov	r0, r4
 800b0f0:	f7ff fa3e 	bl	800a570 <_ZNSt9exceptionD1Ev>
 800b0f4:	4620      	mov	r0, r4
 800b0f6:	f000 f925 	bl	800b344 <_ZdlPv>
 800b0fa:	4620      	mov	r0, r4
 800b0fc:	b002      	add	sp, #8
 800b0fe:	bd10      	pop	{r4, pc}
 800b100:	f853 2c04 	ldr.w	r2, [r3, #-4]
 800b104:	1e51      	subs	r1, r2, #1
 800b106:	2a00      	cmp	r2, #0
 800b108:	f843 1c04 	str.w	r1, [r3, #-4]
 800b10c:	dcef      	bgt.n	800b0ee <_ZNSt16invalid_argumentD0Ev+0x16>
 800b10e:	a901      	add	r1, sp, #4
 800b110:	f000 f8ba 	bl	800b288 <_ZNSs4_Rep10_M_destroyERKSaIcE>
 800b114:	e7eb      	b.n	800b0ee <_ZNSt16invalid_argumentD0Ev+0x16>
 800b116:	bf00      	nop
 800b118:	20000548 	.word	0x20000548
 800b11c:	0800d388 	.word	0x0800d388

0800b120 <_ZNSt12length_errorD0Ev>:
 800b120:	b510      	push	{r4, lr}
 800b122:	6843      	ldr	r3, [r0, #4]
 800b124:	4a0e      	ldr	r2, [pc, #56]	; (800b160 <_ZNSt12length_errorD0Ev+0x40>)
 800b126:	490f      	ldr	r1, [pc, #60]	; (800b164 <_ZNSt12length_errorD0Ev+0x44>)
 800b128:	4604      	mov	r4, r0
 800b12a:	f1a3 000c 	sub.w	r0, r3, #12
 800b12e:	4290      	cmp	r0, r2
 800b130:	b082      	sub	sp, #8
 800b132:	6021      	str	r1, [r4, #0]
 800b134:	d108      	bne.n	800b148 <_ZNSt12length_errorD0Ev+0x28>
 800b136:	4620      	mov	r0, r4
 800b138:	f7ff fa1a 	bl	800a570 <_ZNSt9exceptionD1Ev>
 800b13c:	4620      	mov	r0, r4
 800b13e:	f000 f901 	bl	800b344 <_ZdlPv>
 800b142:	4620      	mov	r0, r4
 800b144:	b002      	add	sp, #8
 800b146:	bd10      	pop	{r4, pc}
 800b148:	f853 2c04 	ldr.w	r2, [r3, #-4]
 800b14c:	1e51      	subs	r1, r2, #1
 800b14e:	2a00      	cmp	r2, #0
 800b150:	f843 1c04 	str.w	r1, [r3, #-4]
 800b154:	dcef      	bgt.n	800b136 <_ZNSt12length_errorD0Ev+0x16>
 800b156:	a901      	add	r1, sp, #4
 800b158:	f000 f896 	bl	800b288 <_ZNSs4_Rep10_M_destroyERKSaIcE>
 800b15c:	e7eb      	b.n	800b136 <_ZNSt12length_errorD0Ev+0x16>
 800b15e:	bf00      	nop
 800b160:	20000548 	.word	0x20000548
 800b164:	0800d388 	.word	0x0800d388

0800b168 <_ZNSt11logic_errorC1EPKc>:
 800b168:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b16a:	4b1b      	ldr	r3, [pc, #108]	; (800b1d8 <_ZNSt11logic_errorC1EPKc+0x70>)
 800b16c:	6003      	str	r3, [r0, #0]
 800b16e:	b083      	sub	sp, #12
 800b170:	4604      	mov	r4, r0
 800b172:	b349      	cbz	r1, 800b1c8 <_ZNSt11logic_errorC1EPKc+0x60>
 800b174:	4608      	mov	r0, r1
 800b176:	460d      	mov	r5, r1
 800b178:	f7fb f86a 	bl	8006250 <strlen>
 800b17c:	4607      	mov	r7, r0
 800b17e:	b1a8      	cbz	r0, 800b1ac <_ZNSt11logic_errorC1EPKc+0x44>
 800b180:	aa01      	add	r2, sp, #4
 800b182:	2100      	movs	r1, #0
 800b184:	f000 f844 	bl	800b210 <_ZNSs4_Rep9_S_createEjjRKSaIcE>
 800b188:	2f01      	cmp	r7, #1
 800b18a:	4606      	mov	r6, r0
 800b18c:	f100 030c 	add.w	r3, r0, #12
 800b190:	d011      	beq.n	800b1b6 <_ZNSt11logic_errorC1EPKc+0x4e>
 800b192:	4618      	mov	r0, r3
 800b194:	4629      	mov	r1, r5
 800b196:	463a      	mov	r2, r7
 800b198:	f000 feb3 	bl	800bf02 <memcpy>
 800b19c:	4603      	mov	r3, r0
 800b19e:	4a0f      	ldr	r2, [pc, #60]	; (800b1dc <_ZNSt11logic_errorC1EPKc+0x74>)
 800b1a0:	4296      	cmp	r6, r2
 800b1a2:	d10b      	bne.n	800b1bc <_ZNSt11logic_errorC1EPKc+0x54>
 800b1a4:	4620      	mov	r0, r4
 800b1a6:	6063      	str	r3, [r4, #4]
 800b1a8:	b003      	add	sp, #12
 800b1aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b1ac:	4b0c      	ldr	r3, [pc, #48]	; (800b1e0 <_ZNSt11logic_errorC1EPKc+0x78>)
 800b1ae:	6063      	str	r3, [r4, #4]
 800b1b0:	4620      	mov	r0, r4
 800b1b2:	b003      	add	sp, #12
 800b1b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b1b6:	782a      	ldrb	r2, [r5, #0]
 800b1b8:	7302      	strb	r2, [r0, #12]
 800b1ba:	e7f0      	b.n	800b19e <_ZNSt11logic_errorC1EPKc+0x36>
 800b1bc:	2200      	movs	r2, #0
 800b1be:	60b2      	str	r2, [r6, #8]
 800b1c0:	6037      	str	r7, [r6, #0]
 800b1c2:	443e      	add	r6, r7
 800b1c4:	7332      	strb	r2, [r6, #12]
 800b1c6:	e7ed      	b.n	800b1a4 <_ZNSt11logic_errorC1EPKc+0x3c>
 800b1c8:	4806      	ldr	r0, [pc, #24]	; (800b1e4 <_ZNSt11logic_errorC1EPKc+0x7c>)
 800b1ca:	f000 f86f 	bl	800b2ac <_ZSt19__throw_logic_errorPKc>
 800b1ce:	4620      	mov	r0, r4
 800b1d0:	f7ff f9ce 	bl	800a570 <_ZNSt9exceptionD1Ev>
 800b1d4:	f7ff f880 	bl	800a2d8 <__cxa_end_cleanup>
 800b1d8:	0800d388 	.word	0x0800d388
 800b1dc:	20000548 	.word	0x20000548
 800b1e0:	20000554 	.word	0x20000554
 800b1e4:	0800d3bc 	.word	0x0800d3bc

0800b1e8 <_ZNSt16invalid_argumentC1EPKc>:
 800b1e8:	b510      	push	{r4, lr}
 800b1ea:	4604      	mov	r4, r0
 800b1ec:	f7ff ffbc 	bl	800b168 <_ZNSt11logic_errorC1EPKc>
 800b1f0:	4b01      	ldr	r3, [pc, #4]	; (800b1f8 <_ZNSt16invalid_argumentC1EPKc+0x10>)
 800b1f2:	6023      	str	r3, [r4, #0]
 800b1f4:	4620      	mov	r0, r4
 800b1f6:	bd10      	pop	{r4, pc}
 800b1f8:	0800d3b0 	.word	0x0800d3b0

0800b1fc <_ZNSt12length_errorC1EPKc>:
 800b1fc:	b510      	push	{r4, lr}
 800b1fe:	4604      	mov	r4, r0
 800b200:	f7ff ffb2 	bl	800b168 <_ZNSt11logic_errorC1EPKc>
 800b204:	4b01      	ldr	r3, [pc, #4]	; (800b20c <_ZNSt12length_errorC1EPKc+0x10>)
 800b206:	6023      	str	r3, [r4, #0]
 800b208:	4620      	mov	r0, r4
 800b20a:	bd10      	pop	{r4, pc}
 800b20c:	0800d39c 	.word	0x0800d39c

0800b210 <_ZNSs4_Rep9_S_createEjjRKSaIcE>:
 800b210:	4b1b      	ldr	r3, [pc, #108]	; (800b280 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x70>)
 800b212:	4298      	cmp	r0, r3
 800b214:	b510      	push	{r4, lr}
 800b216:	d830      	bhi.n	800b27a <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x6a>
 800b218:	4288      	cmp	r0, r1
 800b21a:	4604      	mov	r4, r0
 800b21c:	d91c      	bls.n	800b258 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x48>
 800b21e:	004a      	lsls	r2, r1, #1
 800b220:	4290      	cmp	r0, r2
 800b222:	bf38      	it	cc
 800b224:	4614      	movcc	r4, r2
 800b226:	f104 021d 	add.w	r2, r4, #29
 800b22a:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
 800b22e:	f104 000d 	add.w	r0, r4, #13
 800b232:	d918      	bls.n	800b266 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x56>
 800b234:	428c      	cmp	r4, r1
 800b236:	d916      	bls.n	800b266 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x56>
 800b238:	f3c2 020b 	ubfx	r2, r2, #0, #12
 800b23c:	f504 5480 	add.w	r4, r4, #4096	; 0x1000
 800b240:	1aa4      	subs	r4, r4, r2
 800b242:	429c      	cmp	r4, r3
 800b244:	bf28      	it	cs
 800b246:	461c      	movcs	r4, r3
 800b248:	f104 000d 	add.w	r0, r4, #13
 800b24c:	f000 f92a 	bl	800b4a4 <_Znwj>
 800b250:	2200      	movs	r2, #0
 800b252:	e9c0 4201 	strd	r4, r2, [r0, #4]
 800b256:	bd10      	pop	{r4, pc}
 800b258:	f100 031d 	add.w	r3, r0, #29
 800b25c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b260:	f100 000d 	add.w	r0, r0, #13
 800b264:	d901      	bls.n	800b26a <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x5a>
 800b266:	2800      	cmp	r0, #0
 800b268:	db05      	blt.n	800b276 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x66>
 800b26a:	f000 f91b 	bl	800b4a4 <_Znwj>
 800b26e:	2200      	movs	r2, #0
 800b270:	e9c0 4201 	strd	r4, r2, [r0, #4]
 800b274:	bd10      	pop	{r4, pc}
 800b276:	f000 f809 	bl	800b28c <_ZSt17__throw_bad_allocv>
 800b27a:	4802      	ldr	r0, [pc, #8]	; (800b284 <_ZNSs4_Rep9_S_createEjjRKSaIcE+0x74>)
 800b27c:	f000 f82e 	bl	800b2dc <_ZSt20__throw_length_errorPKc>
 800b280:	3ffffffc 	.word	0x3ffffffc
 800b284:	0800d3e8 	.word	0x0800d3e8

0800b288 <_ZNSs4_Rep10_M_destroyERKSaIcE>:
 800b288:	f000 b85c 	b.w	800b344 <_ZdlPv>

0800b28c <_ZSt17__throw_bad_allocv>:
 800b28c:	b508      	push	{r3, lr}
 800b28e:	2004      	movs	r0, #4
 800b290:	f7fe ffe6 	bl	800a260 <__cxa_allocate_exception>
 800b294:	4b02      	ldr	r3, [pc, #8]	; (800b2a0 <_ZSt17__throw_bad_allocv+0x14>)
 800b296:	4a03      	ldr	r2, [pc, #12]	; (800b2a4 <_ZSt17__throw_bad_allocv+0x18>)
 800b298:	4903      	ldr	r1, [pc, #12]	; (800b2a8 <_ZSt17__throw_bad_allocv+0x1c>)
 800b29a:	6003      	str	r3, [r0, #0]
 800b29c:	f7ff fd18 	bl	800acd0 <__cxa_throw>
 800b2a0:	0800d434 	.word	0x0800d434
 800b2a4:	0800b315 	.word	0x0800b315
 800b2a8:	0800d410 	.word	0x0800d410

0800b2ac <_ZSt19__throw_logic_errorPKc>:
 800b2ac:	b510      	push	{r4, lr}
 800b2ae:	b082      	sub	sp, #8
 800b2b0:	9001      	str	r0, [sp, #4]
 800b2b2:	2008      	movs	r0, #8
 800b2b4:	f7fe ffd4 	bl	800a260 <__cxa_allocate_exception>
 800b2b8:	9901      	ldr	r1, [sp, #4]
 800b2ba:	4604      	mov	r4, r0
 800b2bc:	f7ff ff54 	bl	800b168 <_ZNSt11logic_errorC1EPKc>
 800b2c0:	4a04      	ldr	r2, [pc, #16]	; (800b2d4 <_ZSt19__throw_logic_errorPKc+0x28>)
 800b2c2:	4905      	ldr	r1, [pc, #20]	; (800b2d8 <_ZSt19__throw_logic_errorPKc+0x2c>)
 800b2c4:	4620      	mov	r0, r4
 800b2c6:	f7ff fd03 	bl	800acd0 <__cxa_throw>
 800b2ca:	4620      	mov	r0, r4
 800b2cc:	f7fe ffe0 	bl	800a290 <__cxa_free_exception>
 800b2d0:	f7ff f802 	bl	800a2d8 <__cxa_end_cleanup>
 800b2d4:	0800afd1 	.word	0x0800afd1
 800b2d8:	0800d320 	.word	0x0800d320

0800b2dc <_ZSt20__throw_length_errorPKc>:
 800b2dc:	b510      	push	{r4, lr}
 800b2de:	b082      	sub	sp, #8
 800b2e0:	9001      	str	r0, [sp, #4]
 800b2e2:	2008      	movs	r0, #8
 800b2e4:	f7fe ffbc 	bl	800a260 <__cxa_allocate_exception>
 800b2e8:	9901      	ldr	r1, [sp, #4]
 800b2ea:	4604      	mov	r4, r0
 800b2ec:	f7ff ff86 	bl	800b1fc <_ZNSt12length_errorC1EPKc>
 800b2f0:	4a04      	ldr	r2, [pc, #16]	; (800b304 <_ZSt20__throw_length_errorPKc+0x28>)
 800b2f2:	4905      	ldr	r1, [pc, #20]	; (800b308 <_ZSt20__throw_length_errorPKc+0x2c>)
 800b2f4:	4620      	mov	r0, r4
 800b2f6:	f7ff fceb 	bl	800acd0 <__cxa_throw>
 800b2fa:	4620      	mov	r0, r4
 800b2fc:	f7fe ffc8 	bl	800a290 <__cxa_free_exception>
 800b300:	f7fe ffea 	bl	800a2d8 <__cxa_end_cleanup>
 800b304:	0800b011 	.word	0x0800b011
 800b308:	0800d32c 	.word	0x0800d32c

0800b30c <_ZNKSt9bad_alloc4whatEv>:
 800b30c:	4800      	ldr	r0, [pc, #0]	; (800b310 <_ZNKSt9bad_alloc4whatEv+0x4>)
 800b30e:	4770      	bx	lr
 800b310:	0800d400 	.word	0x0800d400

0800b314 <_ZNSt9bad_allocD1Ev>:
 800b314:	b510      	push	{r4, lr}
 800b316:	4b03      	ldr	r3, [pc, #12]	; (800b324 <_ZNSt9bad_allocD1Ev+0x10>)
 800b318:	6003      	str	r3, [r0, #0]
 800b31a:	4604      	mov	r4, r0
 800b31c:	f7ff f928 	bl	800a570 <_ZNSt9exceptionD1Ev>
 800b320:	4620      	mov	r0, r4
 800b322:	bd10      	pop	{r4, pc}
 800b324:	0800d434 	.word	0x0800d434

0800b328 <_ZNSt9bad_allocD0Ev>:
 800b328:	b510      	push	{r4, lr}
 800b32a:	4b05      	ldr	r3, [pc, #20]	; (800b340 <_ZNSt9bad_allocD0Ev+0x18>)
 800b32c:	6003      	str	r3, [r0, #0]
 800b32e:	4604      	mov	r4, r0
 800b330:	f7ff f91e 	bl	800a570 <_ZNSt9exceptionD1Ev>
 800b334:	4620      	mov	r0, r4
 800b336:	2104      	movs	r1, #4
 800b338:	f7fe ff20 	bl	800a17c <_ZdlPvj>
 800b33c:	4620      	mov	r0, r4
 800b33e:	bd10      	pop	{r4, pc}
 800b340:	0800d434 	.word	0x0800d434

0800b344 <_ZdlPv>:
 800b344:	f000 b8e4 	b.w	800b510 <free>

0800b348 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>:
 800b348:	7803      	ldrb	r3, [r0, #0]
 800b34a:	2b47      	cmp	r3, #71	; 0x47
 800b34c:	d001      	beq.n	800b352 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xa>
 800b34e:	2000      	movs	r0, #0
 800b350:	4770      	bx	lr
 800b352:	7843      	ldrb	r3, [r0, #1]
 800b354:	2b4e      	cmp	r3, #78	; 0x4e
 800b356:	d1fa      	bne.n	800b34e <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800b358:	7883      	ldrb	r3, [r0, #2]
 800b35a:	2b55      	cmp	r3, #85	; 0x55
 800b35c:	d1f7      	bne.n	800b34e <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800b35e:	78c3      	ldrb	r3, [r0, #3]
 800b360:	2b43      	cmp	r3, #67	; 0x43
 800b362:	d1f4      	bne.n	800b34e <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800b364:	7903      	ldrb	r3, [r0, #4]
 800b366:	2b43      	cmp	r3, #67	; 0x43
 800b368:	d1f1      	bne.n	800b34e <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800b36a:	7943      	ldrb	r3, [r0, #5]
 800b36c:	2b2b      	cmp	r3, #43	; 0x2b
 800b36e:	d1ee      	bne.n	800b34e <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800b370:	7983      	ldrb	r3, [r0, #6]
 800b372:	2b2b      	cmp	r3, #43	; 0x2b
 800b374:	d1eb      	bne.n	800b34e <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800b376:	79c0      	ldrb	r0, [r0, #7]
 800b378:	2801      	cmp	r0, #1
 800b37a:	bf8c      	ite	hi
 800b37c:	2000      	movhi	r0, #0
 800b37e:	2001      	movls	r0, #1
 800b380:	4770      	bx	lr
 800b382:	bf00      	nop

0800b384 <__cxa_call_terminate>:
 800b384:	b510      	push	{r4, lr}
 800b386:	b130      	cbz	r0, 800b396 <__cxa_call_terminate+0x12>
 800b388:	4604      	mov	r4, r0
 800b38a:	f7ff f86d 	bl	800a468 <__cxa_begin_catch>
 800b38e:	4620      	mov	r0, r4
 800b390:	f7ff ffda 	bl	800b348 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 800b394:	b908      	cbnz	r0, 800b39a <__cxa_call_terminate+0x16>
 800b396:	f7ff fc21 	bl	800abdc <_ZSt9terminatev>
 800b39a:	f854 0c14 	ldr.w	r0, [r4, #-20]
 800b39e:	f7ff fc15 	bl	800abcc <_ZN10__cxxabiv111__terminateEPFvvE>
 800b3a2:	bf00      	nop

0800b3a4 <__cxa_call_unexpected>:
 800b3a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b3a8:	b085      	sub	sp, #20
 800b3aa:	4602      	mov	r2, r0
 800b3ac:	f7ff ffcc 	bl	800b348 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 800b3b0:	b138      	cbz	r0, 800b3c2 <__cxa_call_unexpected+0x1e>
 800b3b2:	e952 7406 	ldrd	r7, r4, [r2, #-24]
 800b3b6:	e9d2 850c 	ldrd	r8, r5, [r2, #48]	; 0x30
 800b3ba:	f8d2 a028 	ldr.w	sl, [r2, #40]	; 0x28
 800b3be:	2600      	movs	r6, #0
 800b3c0:	e005      	b.n	800b3ce <__cxa_call_unexpected+0x2a>
 800b3c2:	4604      	mov	r4, r0
 800b3c4:	4607      	mov	r7, r0
 800b3c6:	2601      	movs	r6, #1
 800b3c8:	4605      	mov	r5, r0
 800b3ca:	4680      	mov	r8, r0
 800b3cc:	4682      	mov	sl, r0
 800b3ce:	4610      	mov	r0, r2
 800b3d0:	f7ff f84a 	bl	800a468 <__cxa_begin_catch>
 800b3d4:	b10e      	cbz	r6, 800b3da <__cxa_call_unexpected+0x36>
 800b3d6:	f7ff fc0f 	bl	800abf8 <_ZSt10unexpectedv>
 800b3da:	4638      	mov	r0, r7
 800b3dc:	f7ff fc08 	bl	800abf0 <_ZN10__cxxabiv112__unexpectedEPFvvE>
 800b3e0:	f7ff f842 	bl	800a468 <__cxa_begin_catch>
 800b3e4:	b10e      	cbz	r6, 800b3ea <__cxa_call_unexpected+0x46>
 800b3e6:	f7ff fbf9 	bl	800abdc <_ZSt9terminatev>
 800b3ea:	f7ff f8d1 	bl	800a590 <__cxa_get_globals_fast>
 800b3ee:	6807      	ldr	r7, [r0, #0]
 800b3f0:	f8df b090 	ldr.w	fp, [pc, #144]	; 800b484 <__cxa_call_unexpected+0xe0>
 800b3f4:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800b3f8:	2b01      	cmp	r3, #1
 800b3fa:	bf0c      	ite	eq
 800b3fc:	683b      	ldreq	r3, [r7, #0]
 800b3fe:	f107 0378 	addne.w	r3, r7, #120	; 0x78
 800b402:	9302      	str	r3, [sp, #8]
 800b404:	f028 0303 	bic.w	r3, r8, #3
 800b408:	9301      	str	r3, [sp, #4]
 800b40a:	3720      	adds	r7, #32
 800b40c:	f04f 0900 	mov.w	r9, #0
 800b410:	45ca      	cmp	sl, r9
 800b412:	dd20      	ble.n	800b456 <__cxa_call_unexpected+0xb2>
 800b414:	f8d5 8000 	ldr.w	r8, [r5]
 800b418:	f1b8 0f00 	cmp.w	r8, #0
 800b41c:	d000      	beq.n	800b420 <__cxa_call_unexpected+0x7c>
 800b41e:	44a8      	add	r8, r5
 800b420:	ab02      	add	r3, sp, #8
 800b422:	2200      	movs	r2, #0
 800b424:	4641      	mov	r1, r8
 800b426:	4638      	mov	r0, r7
 800b428:	f7fe ff5c 	bl	800a2e4 <__cxa_type_match>
 800b42c:	b108      	cbz	r0, 800b432 <__cxa_call_unexpected+0x8e>
 800b42e:	f7ff fc6b 	bl	800ad08 <__cxa_rethrow>
 800b432:	f8d8 3000 	ldr.w	r3, [r8]
 800b436:	9003      	str	r0, [sp, #12]
 800b438:	aa03      	add	r2, sp, #12
 800b43a:	4640      	mov	r0, r8
 800b43c:	4659      	mov	r1, fp
 800b43e:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800b442:	2301      	movs	r3, #1
 800b444:	47c0      	blx	r8
 800b446:	9b01      	ldr	r3, [sp, #4]
 800b448:	2800      	cmp	r0, #0
 800b44a:	bf18      	it	ne
 800b44c:	4606      	movne	r6, r0
 800b44e:	f109 0901 	add.w	r9, r9, #1
 800b452:	441d      	add	r5, r3
 800b454:	e7dc      	b.n	800b410 <__cxa_call_unexpected+0x6c>
 800b456:	b146      	cbz	r6, 800b46a <__cxa_call_unexpected+0xc6>
 800b458:	2004      	movs	r0, #4
 800b45a:	f7fe ff01 	bl	800a260 <__cxa_allocate_exception>
 800b45e:	4b07      	ldr	r3, [pc, #28]	; (800b47c <__cxa_call_unexpected+0xd8>)
 800b460:	4a07      	ldr	r2, [pc, #28]	; (800b480 <__cxa_call_unexpected+0xdc>)
 800b462:	4908      	ldr	r1, [pc, #32]	; (800b484 <__cxa_call_unexpected+0xe0>)
 800b464:	6003      	str	r3, [r0, #0]
 800b466:	f7ff fc33 	bl	800acd0 <__cxa_throw>
 800b46a:	4620      	mov	r0, r4
 800b46c:	f7ff fbae 	bl	800abcc <_ZN10__cxxabiv111__terminateEPFvvE>
 800b470:	f7ff f838 	bl	800a4e4 <__cxa_end_catch>
 800b474:	f7ff f836 	bl	800a4e4 <__cxa_end_catch>
 800b478:	f7fe ff2e 	bl	800a2d8 <__cxa_end_cleanup>
 800b47c:	0800d208 	.word	0x0800d208
 800b480:	0800a575 	.word	0x0800a575
 800b484:	0800d184 	.word	0x0800d184

0800b488 <__cxa_current_exception_type>:
 800b488:	b508      	push	{r3, lr}
 800b48a:	f7ff f885 	bl	800a598 <__cxa_get_globals>
 800b48e:	6800      	ldr	r0, [r0, #0]
 800b490:	b130      	cbz	r0, 800b4a0 <__cxa_current_exception_type+0x18>
 800b492:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800b496:	2b01      	cmp	r3, #1
 800b498:	bf04      	itt	eq
 800b49a:	6800      	ldreq	r0, [r0, #0]
 800b49c:	3878      	subeq	r0, #120	; 0x78
 800b49e:	6800      	ldr	r0, [r0, #0]
 800b4a0:	bd08      	pop	{r3, pc}
 800b4a2:	bf00      	nop

0800b4a4 <_Znwj>:
 800b4a4:	2801      	cmp	r0, #1
 800b4a6:	bf38      	it	cc
 800b4a8:	2001      	movcc	r0, #1
 800b4aa:	b510      	push	{r4, lr}
 800b4ac:	4604      	mov	r4, r0
 800b4ae:	4620      	mov	r0, r4
 800b4b0:	f000 f826 	bl	800b500 <malloc>
 800b4b4:	b100      	cbz	r0, 800b4b8 <_Znwj+0x14>
 800b4b6:	bd10      	pop	{r4, pc}
 800b4b8:	f000 f812 	bl	800b4e0 <_ZSt15get_new_handlerv>
 800b4bc:	b108      	cbz	r0, 800b4c2 <_Znwj+0x1e>
 800b4be:	4780      	blx	r0
 800b4c0:	e7f5      	b.n	800b4ae <_Znwj+0xa>
 800b4c2:	2004      	movs	r0, #4
 800b4c4:	f7fe fecc 	bl	800a260 <__cxa_allocate_exception>
 800b4c8:	4b02      	ldr	r3, [pc, #8]	; (800b4d4 <_Znwj+0x30>)
 800b4ca:	4a03      	ldr	r2, [pc, #12]	; (800b4d8 <_Znwj+0x34>)
 800b4cc:	4903      	ldr	r1, [pc, #12]	; (800b4dc <_Znwj+0x38>)
 800b4ce:	6003      	str	r3, [r0, #0]
 800b4d0:	f7ff fbfe 	bl	800acd0 <__cxa_throw>
 800b4d4:	0800d434 	.word	0x0800d434
 800b4d8:	0800b315 	.word	0x0800b315
 800b4dc:	0800d410 	.word	0x0800d410

0800b4e0 <_ZSt15get_new_handlerv>:
 800b4e0:	4b02      	ldr	r3, [pc, #8]	; (800b4ec <_ZSt15get_new_handlerv+0xc>)
 800b4e2:	6818      	ldr	r0, [r3, #0]
 800b4e4:	f3bf 8f5b 	dmb	ish
 800b4e8:	4770      	bx	lr
 800b4ea:	bf00      	nop
 800b4ec:	20000558 	.word	0x20000558

0800b4f0 <abort>:
 800b4f0:	b508      	push	{r3, lr}
 800b4f2:	2006      	movs	r0, #6
 800b4f4:	f000 fc66 	bl	800bdc4 <raise>
 800b4f8:	2001      	movs	r0, #1
 800b4fa:	f7fc f881 	bl	8007600 <_exit>
	...

0800b500 <malloc>:
 800b500:	4b02      	ldr	r3, [pc, #8]	; (800b50c <malloc+0xc>)
 800b502:	4601      	mov	r1, r0
 800b504:	6818      	ldr	r0, [r3, #0]
 800b506:	f000 b82b 	b.w	800b560 <_malloc_r>
 800b50a:	bf00      	nop
 800b50c:	20000074 	.word	0x20000074

0800b510 <free>:
 800b510:	4b02      	ldr	r3, [pc, #8]	; (800b51c <free+0xc>)
 800b512:	4601      	mov	r1, r0
 800b514:	6818      	ldr	r0, [r3, #0]
 800b516:	f000 bd03 	b.w	800bf20 <_free_r>
 800b51a:	bf00      	nop
 800b51c:	20000074 	.word	0x20000074

0800b520 <sbrk_aligned>:
 800b520:	b570      	push	{r4, r5, r6, lr}
 800b522:	4e0e      	ldr	r6, [pc, #56]	; (800b55c <sbrk_aligned+0x3c>)
 800b524:	460c      	mov	r4, r1
 800b526:	6831      	ldr	r1, [r6, #0]
 800b528:	4605      	mov	r5, r0
 800b52a:	b911      	cbnz	r1, 800b532 <sbrk_aligned+0x12>
 800b52c:	f000 fc9a 	bl	800be64 <_sbrk_r>
 800b530:	6030      	str	r0, [r6, #0]
 800b532:	4621      	mov	r1, r4
 800b534:	4628      	mov	r0, r5
 800b536:	f000 fc95 	bl	800be64 <_sbrk_r>
 800b53a:	1c43      	adds	r3, r0, #1
 800b53c:	d00a      	beq.n	800b554 <sbrk_aligned+0x34>
 800b53e:	1cc4      	adds	r4, r0, #3
 800b540:	f024 0403 	bic.w	r4, r4, #3
 800b544:	42a0      	cmp	r0, r4
 800b546:	d007      	beq.n	800b558 <sbrk_aligned+0x38>
 800b548:	1a21      	subs	r1, r4, r0
 800b54a:	4628      	mov	r0, r5
 800b54c:	f000 fc8a 	bl	800be64 <_sbrk_r>
 800b550:	3001      	adds	r0, #1
 800b552:	d101      	bne.n	800b558 <sbrk_aligned+0x38>
 800b554:	f04f 34ff 	mov.w	r4, #4294967295
 800b558:	4620      	mov	r0, r4
 800b55a:	bd70      	pop	{r4, r5, r6, pc}
 800b55c:	20000560 	.word	0x20000560

0800b560 <_malloc_r>:
 800b560:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b564:	1ccd      	adds	r5, r1, #3
 800b566:	f025 0503 	bic.w	r5, r5, #3
 800b56a:	3508      	adds	r5, #8
 800b56c:	2d0c      	cmp	r5, #12
 800b56e:	bf38      	it	cc
 800b570:	250c      	movcc	r5, #12
 800b572:	2d00      	cmp	r5, #0
 800b574:	4607      	mov	r7, r0
 800b576:	db01      	blt.n	800b57c <_malloc_r+0x1c>
 800b578:	42a9      	cmp	r1, r5
 800b57a:	d905      	bls.n	800b588 <_malloc_r+0x28>
 800b57c:	230c      	movs	r3, #12
 800b57e:	603b      	str	r3, [r7, #0]
 800b580:	2600      	movs	r6, #0
 800b582:	4630      	mov	r0, r6
 800b584:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b588:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 800b65c <_malloc_r+0xfc>
 800b58c:	f000 f868 	bl	800b660 <__malloc_lock>
 800b590:	f8d8 3000 	ldr.w	r3, [r8]
 800b594:	461c      	mov	r4, r3
 800b596:	bb5c      	cbnz	r4, 800b5f0 <_malloc_r+0x90>
 800b598:	4629      	mov	r1, r5
 800b59a:	4638      	mov	r0, r7
 800b59c:	f7ff ffc0 	bl	800b520 <sbrk_aligned>
 800b5a0:	1c43      	adds	r3, r0, #1
 800b5a2:	4604      	mov	r4, r0
 800b5a4:	d155      	bne.n	800b652 <_malloc_r+0xf2>
 800b5a6:	f8d8 4000 	ldr.w	r4, [r8]
 800b5aa:	4626      	mov	r6, r4
 800b5ac:	2e00      	cmp	r6, #0
 800b5ae:	d145      	bne.n	800b63c <_malloc_r+0xdc>
 800b5b0:	2c00      	cmp	r4, #0
 800b5b2:	d048      	beq.n	800b646 <_malloc_r+0xe6>
 800b5b4:	6823      	ldr	r3, [r4, #0]
 800b5b6:	4631      	mov	r1, r6
 800b5b8:	4638      	mov	r0, r7
 800b5ba:	eb04 0903 	add.w	r9, r4, r3
 800b5be:	f000 fc51 	bl	800be64 <_sbrk_r>
 800b5c2:	4581      	cmp	r9, r0
 800b5c4:	d13f      	bne.n	800b646 <_malloc_r+0xe6>
 800b5c6:	6821      	ldr	r1, [r4, #0]
 800b5c8:	1a6d      	subs	r5, r5, r1
 800b5ca:	4629      	mov	r1, r5
 800b5cc:	4638      	mov	r0, r7
 800b5ce:	f7ff ffa7 	bl	800b520 <sbrk_aligned>
 800b5d2:	3001      	adds	r0, #1
 800b5d4:	d037      	beq.n	800b646 <_malloc_r+0xe6>
 800b5d6:	6823      	ldr	r3, [r4, #0]
 800b5d8:	442b      	add	r3, r5
 800b5da:	6023      	str	r3, [r4, #0]
 800b5dc:	f8d8 3000 	ldr.w	r3, [r8]
 800b5e0:	2b00      	cmp	r3, #0
 800b5e2:	d038      	beq.n	800b656 <_malloc_r+0xf6>
 800b5e4:	685a      	ldr	r2, [r3, #4]
 800b5e6:	42a2      	cmp	r2, r4
 800b5e8:	d12b      	bne.n	800b642 <_malloc_r+0xe2>
 800b5ea:	2200      	movs	r2, #0
 800b5ec:	605a      	str	r2, [r3, #4]
 800b5ee:	e00f      	b.n	800b610 <_malloc_r+0xb0>
 800b5f0:	6822      	ldr	r2, [r4, #0]
 800b5f2:	1b52      	subs	r2, r2, r5
 800b5f4:	d41f      	bmi.n	800b636 <_malloc_r+0xd6>
 800b5f6:	2a0b      	cmp	r2, #11
 800b5f8:	d917      	bls.n	800b62a <_malloc_r+0xca>
 800b5fa:	1961      	adds	r1, r4, r5
 800b5fc:	42a3      	cmp	r3, r4
 800b5fe:	6025      	str	r5, [r4, #0]
 800b600:	bf18      	it	ne
 800b602:	6059      	strne	r1, [r3, #4]
 800b604:	6863      	ldr	r3, [r4, #4]
 800b606:	bf08      	it	eq
 800b608:	f8c8 1000 	streq.w	r1, [r8]
 800b60c:	5162      	str	r2, [r4, r5]
 800b60e:	604b      	str	r3, [r1, #4]
 800b610:	4638      	mov	r0, r7
 800b612:	f104 060b 	add.w	r6, r4, #11
 800b616:	f000 f829 	bl	800b66c <__malloc_unlock>
 800b61a:	f026 0607 	bic.w	r6, r6, #7
 800b61e:	1d23      	adds	r3, r4, #4
 800b620:	1af2      	subs	r2, r6, r3
 800b622:	d0ae      	beq.n	800b582 <_malloc_r+0x22>
 800b624:	1b9b      	subs	r3, r3, r6
 800b626:	50a3      	str	r3, [r4, r2]
 800b628:	e7ab      	b.n	800b582 <_malloc_r+0x22>
 800b62a:	42a3      	cmp	r3, r4
 800b62c:	6862      	ldr	r2, [r4, #4]
 800b62e:	d1dd      	bne.n	800b5ec <_malloc_r+0x8c>
 800b630:	f8c8 2000 	str.w	r2, [r8]
 800b634:	e7ec      	b.n	800b610 <_malloc_r+0xb0>
 800b636:	4623      	mov	r3, r4
 800b638:	6864      	ldr	r4, [r4, #4]
 800b63a:	e7ac      	b.n	800b596 <_malloc_r+0x36>
 800b63c:	4634      	mov	r4, r6
 800b63e:	6876      	ldr	r6, [r6, #4]
 800b640:	e7b4      	b.n	800b5ac <_malloc_r+0x4c>
 800b642:	4613      	mov	r3, r2
 800b644:	e7cc      	b.n	800b5e0 <_malloc_r+0x80>
 800b646:	230c      	movs	r3, #12
 800b648:	603b      	str	r3, [r7, #0]
 800b64a:	4638      	mov	r0, r7
 800b64c:	f000 f80e 	bl	800b66c <__malloc_unlock>
 800b650:	e797      	b.n	800b582 <_malloc_r+0x22>
 800b652:	6025      	str	r5, [r4, #0]
 800b654:	e7dc      	b.n	800b610 <_malloc_r+0xb0>
 800b656:	605b      	str	r3, [r3, #4]
 800b658:	deff      	udf	#255	; 0xff
 800b65a:	bf00      	nop
 800b65c:	2000055c 	.word	0x2000055c

0800b660 <__malloc_lock>:
 800b660:	4801      	ldr	r0, [pc, #4]	; (800b668 <__malloc_lock+0x8>)
 800b662:	f000 bc4c 	b.w	800befe <__retarget_lock_acquire_recursive>
 800b666:	bf00      	nop
 800b668:	200006a4 	.word	0x200006a4

0800b66c <__malloc_unlock>:
 800b66c:	4801      	ldr	r0, [pc, #4]	; (800b674 <__malloc_unlock+0x8>)
 800b66e:	f000 bc47 	b.w	800bf00 <__retarget_lock_release_recursive>
 800b672:	bf00      	nop
 800b674:	200006a4 	.word	0x200006a4

0800b678 <realloc>:
 800b678:	4b02      	ldr	r3, [pc, #8]	; (800b684 <realloc+0xc>)
 800b67a:	460a      	mov	r2, r1
 800b67c:	4601      	mov	r1, r0
 800b67e:	6818      	ldr	r0, [r3, #0]
 800b680:	f000 b802 	b.w	800b688 <_realloc_r>
 800b684:	20000074 	.word	0x20000074

0800b688 <_realloc_r>:
 800b688:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b68c:	4680      	mov	r8, r0
 800b68e:	4614      	mov	r4, r2
 800b690:	460e      	mov	r6, r1
 800b692:	b921      	cbnz	r1, 800b69e <_realloc_r+0x16>
 800b694:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b698:	4611      	mov	r1, r2
 800b69a:	f7ff bf61 	b.w	800b560 <_malloc_r>
 800b69e:	b92a      	cbnz	r2, 800b6ac <_realloc_r+0x24>
 800b6a0:	f000 fc3e 	bl	800bf20 <_free_r>
 800b6a4:	4625      	mov	r5, r4
 800b6a6:	4628      	mov	r0, r5
 800b6a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b6ac:	f000 fc84 	bl	800bfb8 <_malloc_usable_size_r>
 800b6b0:	4284      	cmp	r4, r0
 800b6b2:	4607      	mov	r7, r0
 800b6b4:	d802      	bhi.n	800b6bc <_realloc_r+0x34>
 800b6b6:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800b6ba:	d812      	bhi.n	800b6e2 <_realloc_r+0x5a>
 800b6bc:	4621      	mov	r1, r4
 800b6be:	4640      	mov	r0, r8
 800b6c0:	f7ff ff4e 	bl	800b560 <_malloc_r>
 800b6c4:	4605      	mov	r5, r0
 800b6c6:	2800      	cmp	r0, #0
 800b6c8:	d0ed      	beq.n	800b6a6 <_realloc_r+0x1e>
 800b6ca:	42bc      	cmp	r4, r7
 800b6cc:	4622      	mov	r2, r4
 800b6ce:	4631      	mov	r1, r6
 800b6d0:	bf28      	it	cs
 800b6d2:	463a      	movcs	r2, r7
 800b6d4:	f000 fc15 	bl	800bf02 <memcpy>
 800b6d8:	4631      	mov	r1, r6
 800b6da:	4640      	mov	r0, r8
 800b6dc:	f000 fc20 	bl	800bf20 <_free_r>
 800b6e0:	e7e1      	b.n	800b6a6 <_realloc_r+0x1e>
 800b6e2:	4635      	mov	r5, r6
 800b6e4:	e7df      	b.n	800b6a6 <_realloc_r+0x1e>
	...

0800b6e8 <std>:
 800b6e8:	2300      	movs	r3, #0
 800b6ea:	b510      	push	{r4, lr}
 800b6ec:	4604      	mov	r4, r0
 800b6ee:	e9c0 3300 	strd	r3, r3, [r0]
 800b6f2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800b6f6:	6083      	str	r3, [r0, #8]
 800b6f8:	8181      	strh	r1, [r0, #12]
 800b6fa:	6643      	str	r3, [r0, #100]	; 0x64
 800b6fc:	81c2      	strh	r2, [r0, #14]
 800b6fe:	6183      	str	r3, [r0, #24]
 800b700:	4619      	mov	r1, r3
 800b702:	2208      	movs	r2, #8
 800b704:	305c      	adds	r0, #92	; 0x5c
 800b706:	f000 fb1b 	bl	800bd40 <memset>
 800b70a:	4b0d      	ldr	r3, [pc, #52]	; (800b740 <std+0x58>)
 800b70c:	6263      	str	r3, [r4, #36]	; 0x24
 800b70e:	4b0d      	ldr	r3, [pc, #52]	; (800b744 <std+0x5c>)
 800b710:	62a3      	str	r3, [r4, #40]	; 0x28
 800b712:	4b0d      	ldr	r3, [pc, #52]	; (800b748 <std+0x60>)
 800b714:	62e3      	str	r3, [r4, #44]	; 0x2c
 800b716:	4b0d      	ldr	r3, [pc, #52]	; (800b74c <std+0x64>)
 800b718:	6323      	str	r3, [r4, #48]	; 0x30
 800b71a:	4b0d      	ldr	r3, [pc, #52]	; (800b750 <std+0x68>)
 800b71c:	6224      	str	r4, [r4, #32]
 800b71e:	429c      	cmp	r4, r3
 800b720:	d006      	beq.n	800b730 <std+0x48>
 800b722:	f103 0268 	add.w	r2, r3, #104	; 0x68
 800b726:	4294      	cmp	r4, r2
 800b728:	d002      	beq.n	800b730 <std+0x48>
 800b72a:	33d0      	adds	r3, #208	; 0xd0
 800b72c:	429c      	cmp	r4, r3
 800b72e:	d105      	bne.n	800b73c <std+0x54>
 800b730:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800b734:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b738:	f000 bbe0 	b.w	800befc <__retarget_lock_init_recursive>
 800b73c:	bd10      	pop	{r4, pc}
 800b73e:	bf00      	nop
 800b740:	0800bb3d 	.word	0x0800bb3d
 800b744:	0800bb5f 	.word	0x0800bb5f
 800b748:	0800bb97 	.word	0x0800bb97
 800b74c:	0800bbbb 	.word	0x0800bbbb
 800b750:	20000564 	.word	0x20000564

0800b754 <stdio_exit_handler>:
 800b754:	4a02      	ldr	r2, [pc, #8]	; (800b760 <stdio_exit_handler+0xc>)
 800b756:	4903      	ldr	r1, [pc, #12]	; (800b764 <stdio_exit_handler+0x10>)
 800b758:	4803      	ldr	r0, [pc, #12]	; (800b768 <stdio_exit_handler+0x14>)
 800b75a:	f000 b8ef 	b.w	800b93c <_fwalk_sglue>
 800b75e:	bf00      	nop
 800b760:	2000001c 	.word	0x2000001c
 800b764:	0800c6a5 	.word	0x0800c6a5
 800b768:	20000028 	.word	0x20000028

0800b76c <cleanup_stdio>:
 800b76c:	6841      	ldr	r1, [r0, #4]
 800b76e:	4b0c      	ldr	r3, [pc, #48]	; (800b7a0 <cleanup_stdio+0x34>)
 800b770:	4299      	cmp	r1, r3
 800b772:	b510      	push	{r4, lr}
 800b774:	4604      	mov	r4, r0
 800b776:	d001      	beq.n	800b77c <cleanup_stdio+0x10>
 800b778:	f000 ff94 	bl	800c6a4 <_fflush_r>
 800b77c:	68a1      	ldr	r1, [r4, #8]
 800b77e:	4b09      	ldr	r3, [pc, #36]	; (800b7a4 <cleanup_stdio+0x38>)
 800b780:	4299      	cmp	r1, r3
 800b782:	d002      	beq.n	800b78a <cleanup_stdio+0x1e>
 800b784:	4620      	mov	r0, r4
 800b786:	f000 ff8d 	bl	800c6a4 <_fflush_r>
 800b78a:	68e1      	ldr	r1, [r4, #12]
 800b78c:	4b06      	ldr	r3, [pc, #24]	; (800b7a8 <cleanup_stdio+0x3c>)
 800b78e:	4299      	cmp	r1, r3
 800b790:	d004      	beq.n	800b79c <cleanup_stdio+0x30>
 800b792:	4620      	mov	r0, r4
 800b794:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b798:	f000 bf84 	b.w	800c6a4 <_fflush_r>
 800b79c:	bd10      	pop	{r4, pc}
 800b79e:	bf00      	nop
 800b7a0:	20000564 	.word	0x20000564
 800b7a4:	200005cc 	.word	0x200005cc
 800b7a8:	20000634 	.word	0x20000634

0800b7ac <global_stdio_init.part.0>:
 800b7ac:	b510      	push	{r4, lr}
 800b7ae:	4b0b      	ldr	r3, [pc, #44]	; (800b7dc <global_stdio_init.part.0+0x30>)
 800b7b0:	4c0b      	ldr	r4, [pc, #44]	; (800b7e0 <global_stdio_init.part.0+0x34>)
 800b7b2:	4a0c      	ldr	r2, [pc, #48]	; (800b7e4 <global_stdio_init.part.0+0x38>)
 800b7b4:	601a      	str	r2, [r3, #0]
 800b7b6:	4620      	mov	r0, r4
 800b7b8:	2200      	movs	r2, #0
 800b7ba:	2104      	movs	r1, #4
 800b7bc:	f7ff ff94 	bl	800b6e8 <std>
 800b7c0:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800b7c4:	2201      	movs	r2, #1
 800b7c6:	2109      	movs	r1, #9
 800b7c8:	f7ff ff8e 	bl	800b6e8 <std>
 800b7cc:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 800b7d0:	2202      	movs	r2, #2
 800b7d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b7d6:	2112      	movs	r1, #18
 800b7d8:	f7ff bf86 	b.w	800b6e8 <std>
 800b7dc:	2000069c 	.word	0x2000069c
 800b7e0:	20000564 	.word	0x20000564
 800b7e4:	0800b755 	.word	0x0800b755

0800b7e8 <__sfp_lock_acquire>:
 800b7e8:	4801      	ldr	r0, [pc, #4]	; (800b7f0 <__sfp_lock_acquire+0x8>)
 800b7ea:	f000 bb88 	b.w	800befe <__retarget_lock_acquire_recursive>
 800b7ee:	bf00      	nop
 800b7f0:	200006a5 	.word	0x200006a5

0800b7f4 <__sfp_lock_release>:
 800b7f4:	4801      	ldr	r0, [pc, #4]	; (800b7fc <__sfp_lock_release+0x8>)
 800b7f6:	f000 bb83 	b.w	800bf00 <__retarget_lock_release_recursive>
 800b7fa:	bf00      	nop
 800b7fc:	200006a5 	.word	0x200006a5

0800b800 <__sinit>:
 800b800:	b510      	push	{r4, lr}
 800b802:	4604      	mov	r4, r0
 800b804:	f7ff fff0 	bl	800b7e8 <__sfp_lock_acquire>
 800b808:	6a23      	ldr	r3, [r4, #32]
 800b80a:	b11b      	cbz	r3, 800b814 <__sinit+0x14>
 800b80c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b810:	f7ff bff0 	b.w	800b7f4 <__sfp_lock_release>
 800b814:	4b04      	ldr	r3, [pc, #16]	; (800b828 <__sinit+0x28>)
 800b816:	6223      	str	r3, [r4, #32]
 800b818:	4b04      	ldr	r3, [pc, #16]	; (800b82c <__sinit+0x2c>)
 800b81a:	681b      	ldr	r3, [r3, #0]
 800b81c:	2b00      	cmp	r3, #0
 800b81e:	d1f5      	bne.n	800b80c <__sinit+0xc>
 800b820:	f7ff ffc4 	bl	800b7ac <global_stdio_init.part.0>
 800b824:	e7f2      	b.n	800b80c <__sinit+0xc>
 800b826:	bf00      	nop
 800b828:	0800b76d 	.word	0x0800b76d
 800b82c:	2000069c 	.word	0x2000069c

0800b830 <_fputc_r>:
 800b830:	b570      	push	{r4, r5, r6, lr}
 800b832:	460e      	mov	r6, r1
 800b834:	4614      	mov	r4, r2
 800b836:	4605      	mov	r5, r0
 800b838:	b118      	cbz	r0, 800b842 <_fputc_r+0x12>
 800b83a:	6a03      	ldr	r3, [r0, #32]
 800b83c:	b90b      	cbnz	r3, 800b842 <_fputc_r+0x12>
 800b83e:	f7ff ffdf 	bl	800b800 <__sinit>
 800b842:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800b844:	07d8      	lsls	r0, r3, #31
 800b846:	d405      	bmi.n	800b854 <_fputc_r+0x24>
 800b848:	89a3      	ldrh	r3, [r4, #12]
 800b84a:	0599      	lsls	r1, r3, #22
 800b84c:	d402      	bmi.n	800b854 <_fputc_r+0x24>
 800b84e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b850:	f000 fb55 	bl	800befe <__retarget_lock_acquire_recursive>
 800b854:	4622      	mov	r2, r4
 800b856:	4628      	mov	r0, r5
 800b858:	4631      	mov	r1, r6
 800b85a:	f000 f8e7 	bl	800ba2c <_putc_r>
 800b85e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800b860:	07da      	lsls	r2, r3, #31
 800b862:	4605      	mov	r5, r0
 800b864:	d405      	bmi.n	800b872 <_fputc_r+0x42>
 800b866:	89a3      	ldrh	r3, [r4, #12]
 800b868:	059b      	lsls	r3, r3, #22
 800b86a:	d402      	bmi.n	800b872 <_fputc_r+0x42>
 800b86c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b86e:	f000 fb47 	bl	800bf00 <__retarget_lock_release_recursive>
 800b872:	4628      	mov	r0, r5
 800b874:	bd70      	pop	{r4, r5, r6, pc}
	...

0800b878 <fputc>:
 800b878:	4b02      	ldr	r3, [pc, #8]	; (800b884 <fputc+0xc>)
 800b87a:	460a      	mov	r2, r1
 800b87c:	4601      	mov	r1, r0
 800b87e:	6818      	ldr	r0, [r3, #0]
 800b880:	f7ff bfd6 	b.w	800b830 <_fputc_r>
 800b884:	20000074 	.word	0x20000074

0800b888 <_fputs_r>:
 800b888:	b570      	push	{r4, r5, r6, lr}
 800b88a:	460d      	mov	r5, r1
 800b88c:	4614      	mov	r4, r2
 800b88e:	4606      	mov	r6, r0
 800b890:	b118      	cbz	r0, 800b89a <_fputs_r+0x12>
 800b892:	6a03      	ldr	r3, [r0, #32]
 800b894:	b90b      	cbnz	r3, 800b89a <_fputs_r+0x12>
 800b896:	f7ff ffb3 	bl	800b800 <__sinit>
 800b89a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800b89c:	07da      	lsls	r2, r3, #31
 800b89e:	d405      	bmi.n	800b8ac <_fputs_r+0x24>
 800b8a0:	89a3      	ldrh	r3, [r4, #12]
 800b8a2:	059b      	lsls	r3, r3, #22
 800b8a4:	d402      	bmi.n	800b8ac <_fputs_r+0x24>
 800b8a6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b8a8:	f000 fb29 	bl	800befe <__retarget_lock_acquire_recursive>
 800b8ac:	89a3      	ldrh	r3, [r4, #12]
 800b8ae:	0718      	lsls	r0, r3, #28
 800b8b0:	d511      	bpl.n	800b8d6 <_fputs_r+0x4e>
 800b8b2:	6923      	ldr	r3, [r4, #16]
 800b8b4:	b17b      	cbz	r3, 800b8d6 <_fputs_r+0x4e>
 800b8b6:	3d01      	subs	r5, #1
 800b8b8:	f815 1f01 	ldrb.w	r1, [r5, #1]!
 800b8bc:	b9e9      	cbnz	r1, 800b8fa <_fputs_r+0x72>
 800b8be:	6e65      	ldr	r5, [r4, #100]	; 0x64
 800b8c0:	f015 0501 	ands.w	r5, r5, #1
 800b8c4:	d12f      	bne.n	800b926 <_fputs_r+0x9e>
 800b8c6:	89a3      	ldrh	r3, [r4, #12]
 800b8c8:	0599      	lsls	r1, r3, #22
 800b8ca:	d402      	bmi.n	800b8d2 <_fputs_r+0x4a>
 800b8cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b8ce:	f000 fb17 	bl	800bf00 <__retarget_lock_release_recursive>
 800b8d2:	4628      	mov	r0, r5
 800b8d4:	bd70      	pop	{r4, r5, r6, pc}
 800b8d6:	4621      	mov	r1, r4
 800b8d8:	4630      	mov	r0, r6
 800b8da:	f000 f9af 	bl	800bc3c <__swsetup_r>
 800b8de:	2800      	cmp	r0, #0
 800b8e0:	d0e9      	beq.n	800b8b6 <_fputs_r+0x2e>
 800b8e2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800b8e4:	07da      	lsls	r2, r3, #31
 800b8e6:	d405      	bmi.n	800b8f4 <_fputs_r+0x6c>
 800b8e8:	89a3      	ldrh	r3, [r4, #12]
 800b8ea:	059b      	lsls	r3, r3, #22
 800b8ec:	d402      	bmi.n	800b8f4 <_fputs_r+0x6c>
 800b8ee:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b8f0:	f000 fb06 	bl	800bf00 <__retarget_lock_release_recursive>
 800b8f4:	f04f 35ff 	mov.w	r5, #4294967295
 800b8f8:	e7eb      	b.n	800b8d2 <_fputs_r+0x4a>
 800b8fa:	68a3      	ldr	r3, [r4, #8]
 800b8fc:	3b01      	subs	r3, #1
 800b8fe:	2b00      	cmp	r3, #0
 800b900:	60a3      	str	r3, [r4, #8]
 800b902:	da04      	bge.n	800b90e <_fputs_r+0x86>
 800b904:	69a2      	ldr	r2, [r4, #24]
 800b906:	4293      	cmp	r3, r2
 800b908:	db06      	blt.n	800b918 <_fputs_r+0x90>
 800b90a:	290a      	cmp	r1, #10
 800b90c:	d004      	beq.n	800b918 <_fputs_r+0x90>
 800b90e:	6823      	ldr	r3, [r4, #0]
 800b910:	1c5a      	adds	r2, r3, #1
 800b912:	6022      	str	r2, [r4, #0]
 800b914:	7019      	strb	r1, [r3, #0]
 800b916:	e7cf      	b.n	800b8b8 <_fputs_r+0x30>
 800b918:	4622      	mov	r2, r4
 800b91a:	4630      	mov	r0, r6
 800b91c:	f000 f951 	bl	800bbc2 <__swbuf_r>
 800b920:	3001      	adds	r0, #1
 800b922:	d1c9      	bne.n	800b8b8 <_fputs_r+0x30>
 800b924:	e7dd      	b.n	800b8e2 <_fputs_r+0x5a>
 800b926:	460d      	mov	r5, r1
 800b928:	e7d3      	b.n	800b8d2 <_fputs_r+0x4a>
	...

0800b92c <fputs>:
 800b92c:	4b02      	ldr	r3, [pc, #8]	; (800b938 <fputs+0xc>)
 800b92e:	460a      	mov	r2, r1
 800b930:	4601      	mov	r1, r0
 800b932:	6818      	ldr	r0, [r3, #0]
 800b934:	f7ff bfa8 	b.w	800b888 <_fputs_r>
 800b938:	20000074 	.word	0x20000074

0800b93c <_fwalk_sglue>:
 800b93c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b940:	4607      	mov	r7, r0
 800b942:	4688      	mov	r8, r1
 800b944:	4614      	mov	r4, r2
 800b946:	2600      	movs	r6, #0
 800b948:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800b94c:	f1b9 0901 	subs.w	r9, r9, #1
 800b950:	d505      	bpl.n	800b95e <_fwalk_sglue+0x22>
 800b952:	6824      	ldr	r4, [r4, #0]
 800b954:	2c00      	cmp	r4, #0
 800b956:	d1f7      	bne.n	800b948 <_fwalk_sglue+0xc>
 800b958:	4630      	mov	r0, r6
 800b95a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b95e:	89ab      	ldrh	r3, [r5, #12]
 800b960:	2b01      	cmp	r3, #1
 800b962:	d907      	bls.n	800b974 <_fwalk_sglue+0x38>
 800b964:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800b968:	3301      	adds	r3, #1
 800b96a:	d003      	beq.n	800b974 <_fwalk_sglue+0x38>
 800b96c:	4629      	mov	r1, r5
 800b96e:	4638      	mov	r0, r7
 800b970:	47c0      	blx	r8
 800b972:	4306      	orrs	r6, r0
 800b974:	3568      	adds	r5, #104	; 0x68
 800b976:	e7e9      	b.n	800b94c <_fwalk_sglue+0x10>

0800b978 <_fwrite_r>:
 800b978:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b97c:	9c08      	ldr	r4, [sp, #32]
 800b97e:	468a      	mov	sl, r1
 800b980:	4690      	mov	r8, r2
 800b982:	fb02 f903 	mul.w	r9, r2, r3
 800b986:	4606      	mov	r6, r0
 800b988:	b118      	cbz	r0, 800b992 <_fwrite_r+0x1a>
 800b98a:	6a03      	ldr	r3, [r0, #32]
 800b98c:	b90b      	cbnz	r3, 800b992 <_fwrite_r+0x1a>
 800b98e:	f7ff ff37 	bl	800b800 <__sinit>
 800b992:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800b994:	07dd      	lsls	r5, r3, #31
 800b996:	d405      	bmi.n	800b9a4 <_fwrite_r+0x2c>
 800b998:	89a3      	ldrh	r3, [r4, #12]
 800b99a:	0598      	lsls	r0, r3, #22
 800b99c:	d402      	bmi.n	800b9a4 <_fwrite_r+0x2c>
 800b99e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b9a0:	f000 faad 	bl	800befe <__retarget_lock_acquire_recursive>
 800b9a4:	89a3      	ldrh	r3, [r4, #12]
 800b9a6:	0719      	lsls	r1, r3, #28
 800b9a8:	d516      	bpl.n	800b9d8 <_fwrite_r+0x60>
 800b9aa:	6923      	ldr	r3, [r4, #16]
 800b9ac:	b1a3      	cbz	r3, 800b9d8 <_fwrite_r+0x60>
 800b9ae:	2500      	movs	r5, #0
 800b9b0:	454d      	cmp	r5, r9
 800b9b2:	d01f      	beq.n	800b9f4 <_fwrite_r+0x7c>
 800b9b4:	68a7      	ldr	r7, [r4, #8]
 800b9b6:	f81a 1005 	ldrb.w	r1, [sl, r5]
 800b9ba:	3f01      	subs	r7, #1
 800b9bc:	2f00      	cmp	r7, #0
 800b9be:	60a7      	str	r7, [r4, #8]
 800b9c0:	da04      	bge.n	800b9cc <_fwrite_r+0x54>
 800b9c2:	69a3      	ldr	r3, [r4, #24]
 800b9c4:	429f      	cmp	r7, r3
 800b9c6:	db0f      	blt.n	800b9e8 <_fwrite_r+0x70>
 800b9c8:	290a      	cmp	r1, #10
 800b9ca:	d00d      	beq.n	800b9e8 <_fwrite_r+0x70>
 800b9cc:	6823      	ldr	r3, [r4, #0]
 800b9ce:	1c5a      	adds	r2, r3, #1
 800b9d0:	6022      	str	r2, [r4, #0]
 800b9d2:	7019      	strb	r1, [r3, #0]
 800b9d4:	3501      	adds	r5, #1
 800b9d6:	e7eb      	b.n	800b9b0 <_fwrite_r+0x38>
 800b9d8:	4621      	mov	r1, r4
 800b9da:	4630      	mov	r0, r6
 800b9dc:	f000 f92e 	bl	800bc3c <__swsetup_r>
 800b9e0:	2800      	cmp	r0, #0
 800b9e2:	d0e4      	beq.n	800b9ae <_fwrite_r+0x36>
 800b9e4:	2500      	movs	r5, #0
 800b9e6:	e005      	b.n	800b9f4 <_fwrite_r+0x7c>
 800b9e8:	4622      	mov	r2, r4
 800b9ea:	4630      	mov	r0, r6
 800b9ec:	f000 f8e9 	bl	800bbc2 <__swbuf_r>
 800b9f0:	3001      	adds	r0, #1
 800b9f2:	d1ef      	bne.n	800b9d4 <_fwrite_r+0x5c>
 800b9f4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800b9f6:	07da      	lsls	r2, r3, #31
 800b9f8:	d405      	bmi.n	800ba06 <_fwrite_r+0x8e>
 800b9fa:	89a3      	ldrh	r3, [r4, #12]
 800b9fc:	059b      	lsls	r3, r3, #22
 800b9fe:	d402      	bmi.n	800ba06 <_fwrite_r+0x8e>
 800ba00:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ba02:	f000 fa7d 	bl	800bf00 <__retarget_lock_release_recursive>
 800ba06:	fbb5 f0f8 	udiv	r0, r5, r8
 800ba0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800ba10 <fwrite>:
 800ba10:	b507      	push	{r0, r1, r2, lr}
 800ba12:	9300      	str	r3, [sp, #0]
 800ba14:	4613      	mov	r3, r2
 800ba16:	460a      	mov	r2, r1
 800ba18:	4601      	mov	r1, r0
 800ba1a:	4803      	ldr	r0, [pc, #12]	; (800ba28 <fwrite+0x18>)
 800ba1c:	6800      	ldr	r0, [r0, #0]
 800ba1e:	f7ff ffab 	bl	800b978 <_fwrite_r>
 800ba22:	b003      	add	sp, #12
 800ba24:	f85d fb04 	ldr.w	pc, [sp], #4
 800ba28:	20000074 	.word	0x20000074

0800ba2c <_putc_r>:
 800ba2c:	b570      	push	{r4, r5, r6, lr}
 800ba2e:	460d      	mov	r5, r1
 800ba30:	4614      	mov	r4, r2
 800ba32:	4606      	mov	r6, r0
 800ba34:	b118      	cbz	r0, 800ba3e <_putc_r+0x12>
 800ba36:	6a03      	ldr	r3, [r0, #32]
 800ba38:	b90b      	cbnz	r3, 800ba3e <_putc_r+0x12>
 800ba3a:	f7ff fee1 	bl	800b800 <__sinit>
 800ba3e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800ba40:	07d8      	lsls	r0, r3, #31
 800ba42:	d405      	bmi.n	800ba50 <_putc_r+0x24>
 800ba44:	89a3      	ldrh	r3, [r4, #12]
 800ba46:	0599      	lsls	r1, r3, #22
 800ba48:	d402      	bmi.n	800ba50 <_putc_r+0x24>
 800ba4a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ba4c:	f000 fa57 	bl	800befe <__retarget_lock_acquire_recursive>
 800ba50:	68a3      	ldr	r3, [r4, #8]
 800ba52:	3b01      	subs	r3, #1
 800ba54:	2b00      	cmp	r3, #0
 800ba56:	60a3      	str	r3, [r4, #8]
 800ba58:	da05      	bge.n	800ba66 <_putc_r+0x3a>
 800ba5a:	69a2      	ldr	r2, [r4, #24]
 800ba5c:	4293      	cmp	r3, r2
 800ba5e:	db12      	blt.n	800ba86 <_putc_r+0x5a>
 800ba60:	b2eb      	uxtb	r3, r5
 800ba62:	2b0a      	cmp	r3, #10
 800ba64:	d00f      	beq.n	800ba86 <_putc_r+0x5a>
 800ba66:	6823      	ldr	r3, [r4, #0]
 800ba68:	1c5a      	adds	r2, r3, #1
 800ba6a:	6022      	str	r2, [r4, #0]
 800ba6c:	701d      	strb	r5, [r3, #0]
 800ba6e:	b2ed      	uxtb	r5, r5
 800ba70:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800ba72:	07da      	lsls	r2, r3, #31
 800ba74:	d405      	bmi.n	800ba82 <_putc_r+0x56>
 800ba76:	89a3      	ldrh	r3, [r4, #12]
 800ba78:	059b      	lsls	r3, r3, #22
 800ba7a:	d402      	bmi.n	800ba82 <_putc_r+0x56>
 800ba7c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ba7e:	f000 fa3f 	bl	800bf00 <__retarget_lock_release_recursive>
 800ba82:	4628      	mov	r0, r5
 800ba84:	bd70      	pop	{r4, r5, r6, pc}
 800ba86:	4629      	mov	r1, r5
 800ba88:	4622      	mov	r2, r4
 800ba8a:	4630      	mov	r0, r6
 800ba8c:	f000 f899 	bl	800bbc2 <__swbuf_r>
 800ba90:	4605      	mov	r5, r0
 800ba92:	e7ed      	b.n	800ba70 <_putc_r+0x44>

0800ba94 <sniprintf>:
 800ba94:	b40c      	push	{r2, r3}
 800ba96:	b530      	push	{r4, r5, lr}
 800ba98:	4b17      	ldr	r3, [pc, #92]	; (800baf8 <sniprintf+0x64>)
 800ba9a:	1e0c      	subs	r4, r1, #0
 800ba9c:	681d      	ldr	r5, [r3, #0]
 800ba9e:	b09d      	sub	sp, #116	; 0x74
 800baa0:	da08      	bge.n	800bab4 <sniprintf+0x20>
 800baa2:	238b      	movs	r3, #139	; 0x8b
 800baa4:	602b      	str	r3, [r5, #0]
 800baa6:	f04f 30ff 	mov.w	r0, #4294967295
 800baaa:	b01d      	add	sp, #116	; 0x74
 800baac:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800bab0:	b002      	add	sp, #8
 800bab2:	4770      	bx	lr
 800bab4:	f44f 7302 	mov.w	r3, #520	; 0x208
 800bab8:	f8ad 3014 	strh.w	r3, [sp, #20]
 800babc:	bf14      	ite	ne
 800babe:	f104 33ff 	addne.w	r3, r4, #4294967295
 800bac2:	4623      	moveq	r3, r4
 800bac4:	9304      	str	r3, [sp, #16]
 800bac6:	9307      	str	r3, [sp, #28]
 800bac8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bacc:	9002      	str	r0, [sp, #8]
 800bace:	9006      	str	r0, [sp, #24]
 800bad0:	f8ad 3016 	strh.w	r3, [sp, #22]
 800bad4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800bad6:	ab21      	add	r3, sp, #132	; 0x84
 800bad8:	a902      	add	r1, sp, #8
 800bada:	4628      	mov	r0, r5
 800badc:	9301      	str	r3, [sp, #4]
 800bade:	f000 facd 	bl	800c07c <_svfiprintf_r>
 800bae2:	1c43      	adds	r3, r0, #1
 800bae4:	bfbc      	itt	lt
 800bae6:	238b      	movlt	r3, #139	; 0x8b
 800bae8:	602b      	strlt	r3, [r5, #0]
 800baea:	2c00      	cmp	r4, #0
 800baec:	d0dd      	beq.n	800baaa <sniprintf+0x16>
 800baee:	9b02      	ldr	r3, [sp, #8]
 800baf0:	2200      	movs	r2, #0
 800baf2:	701a      	strb	r2, [r3, #0]
 800baf4:	e7d9      	b.n	800baaa <sniprintf+0x16>
 800baf6:	bf00      	nop
 800baf8:	20000074 	.word	0x20000074

0800bafc <siprintf>:
 800bafc:	b40e      	push	{r1, r2, r3}
 800bafe:	b500      	push	{lr}
 800bb00:	b09c      	sub	sp, #112	; 0x70
 800bb02:	ab1d      	add	r3, sp, #116	; 0x74
 800bb04:	9002      	str	r0, [sp, #8]
 800bb06:	9006      	str	r0, [sp, #24]
 800bb08:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800bb0c:	4809      	ldr	r0, [pc, #36]	; (800bb34 <siprintf+0x38>)
 800bb0e:	9107      	str	r1, [sp, #28]
 800bb10:	9104      	str	r1, [sp, #16]
 800bb12:	4909      	ldr	r1, [pc, #36]	; (800bb38 <siprintf+0x3c>)
 800bb14:	f853 2b04 	ldr.w	r2, [r3], #4
 800bb18:	9105      	str	r1, [sp, #20]
 800bb1a:	6800      	ldr	r0, [r0, #0]
 800bb1c:	9301      	str	r3, [sp, #4]
 800bb1e:	a902      	add	r1, sp, #8
 800bb20:	f000 faac 	bl	800c07c <_svfiprintf_r>
 800bb24:	9b02      	ldr	r3, [sp, #8]
 800bb26:	2200      	movs	r2, #0
 800bb28:	701a      	strb	r2, [r3, #0]
 800bb2a:	b01c      	add	sp, #112	; 0x70
 800bb2c:	f85d eb04 	ldr.w	lr, [sp], #4
 800bb30:	b003      	add	sp, #12
 800bb32:	4770      	bx	lr
 800bb34:	20000074 	.word	0x20000074
 800bb38:	ffff0208 	.word	0xffff0208

0800bb3c <__sread>:
 800bb3c:	b510      	push	{r4, lr}
 800bb3e:	460c      	mov	r4, r1
 800bb40:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800bb44:	f000 f968 	bl	800be18 <_read_r>
 800bb48:	2800      	cmp	r0, #0
 800bb4a:	bfab      	itete	ge
 800bb4c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800bb4e:	89a3      	ldrhlt	r3, [r4, #12]
 800bb50:	181b      	addge	r3, r3, r0
 800bb52:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800bb56:	bfac      	ite	ge
 800bb58:	6563      	strge	r3, [r4, #84]	; 0x54
 800bb5a:	81a3      	strhlt	r3, [r4, #12]
 800bb5c:	bd10      	pop	{r4, pc}

0800bb5e <__swrite>:
 800bb5e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bb62:	461f      	mov	r7, r3
 800bb64:	898b      	ldrh	r3, [r1, #12]
 800bb66:	05db      	lsls	r3, r3, #23
 800bb68:	4605      	mov	r5, r0
 800bb6a:	460c      	mov	r4, r1
 800bb6c:	4616      	mov	r6, r2
 800bb6e:	d505      	bpl.n	800bb7c <__swrite+0x1e>
 800bb70:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800bb74:	2302      	movs	r3, #2
 800bb76:	2200      	movs	r2, #0
 800bb78:	f000 f93c 	bl	800bdf4 <_lseek_r>
 800bb7c:	89a3      	ldrh	r3, [r4, #12]
 800bb7e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800bb82:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800bb86:	81a3      	strh	r3, [r4, #12]
 800bb88:	4632      	mov	r2, r6
 800bb8a:	463b      	mov	r3, r7
 800bb8c:	4628      	mov	r0, r5
 800bb8e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800bb92:	f000 b977 	b.w	800be84 <_write_r>

0800bb96 <__sseek>:
 800bb96:	b510      	push	{r4, lr}
 800bb98:	460c      	mov	r4, r1
 800bb9a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800bb9e:	f000 f929 	bl	800bdf4 <_lseek_r>
 800bba2:	1c43      	adds	r3, r0, #1
 800bba4:	89a3      	ldrh	r3, [r4, #12]
 800bba6:	bf15      	itete	ne
 800bba8:	6560      	strne	r0, [r4, #84]	; 0x54
 800bbaa:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800bbae:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800bbb2:	81a3      	strheq	r3, [r4, #12]
 800bbb4:	bf18      	it	ne
 800bbb6:	81a3      	strhne	r3, [r4, #12]
 800bbb8:	bd10      	pop	{r4, pc}

0800bbba <__sclose>:
 800bbba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800bbbe:	f000 b909 	b.w	800bdd4 <_close_r>

0800bbc2 <__swbuf_r>:
 800bbc2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bbc4:	460e      	mov	r6, r1
 800bbc6:	4614      	mov	r4, r2
 800bbc8:	4605      	mov	r5, r0
 800bbca:	b118      	cbz	r0, 800bbd4 <__swbuf_r+0x12>
 800bbcc:	6a03      	ldr	r3, [r0, #32]
 800bbce:	b90b      	cbnz	r3, 800bbd4 <__swbuf_r+0x12>
 800bbd0:	f7ff fe16 	bl	800b800 <__sinit>
 800bbd4:	69a3      	ldr	r3, [r4, #24]
 800bbd6:	60a3      	str	r3, [r4, #8]
 800bbd8:	89a3      	ldrh	r3, [r4, #12]
 800bbda:	071a      	lsls	r2, r3, #28
 800bbdc:	d525      	bpl.n	800bc2a <__swbuf_r+0x68>
 800bbde:	6923      	ldr	r3, [r4, #16]
 800bbe0:	b31b      	cbz	r3, 800bc2a <__swbuf_r+0x68>
 800bbe2:	6823      	ldr	r3, [r4, #0]
 800bbe4:	6922      	ldr	r2, [r4, #16]
 800bbe6:	1a98      	subs	r0, r3, r2
 800bbe8:	6963      	ldr	r3, [r4, #20]
 800bbea:	b2f6      	uxtb	r6, r6
 800bbec:	4283      	cmp	r3, r0
 800bbee:	4637      	mov	r7, r6
 800bbf0:	dc04      	bgt.n	800bbfc <__swbuf_r+0x3a>
 800bbf2:	4621      	mov	r1, r4
 800bbf4:	4628      	mov	r0, r5
 800bbf6:	f000 fd55 	bl	800c6a4 <_fflush_r>
 800bbfa:	b9e0      	cbnz	r0, 800bc36 <__swbuf_r+0x74>
 800bbfc:	68a3      	ldr	r3, [r4, #8]
 800bbfe:	3b01      	subs	r3, #1
 800bc00:	60a3      	str	r3, [r4, #8]
 800bc02:	6823      	ldr	r3, [r4, #0]
 800bc04:	1c5a      	adds	r2, r3, #1
 800bc06:	6022      	str	r2, [r4, #0]
 800bc08:	701e      	strb	r6, [r3, #0]
 800bc0a:	6962      	ldr	r2, [r4, #20]
 800bc0c:	1c43      	adds	r3, r0, #1
 800bc0e:	429a      	cmp	r2, r3
 800bc10:	d004      	beq.n	800bc1c <__swbuf_r+0x5a>
 800bc12:	89a3      	ldrh	r3, [r4, #12]
 800bc14:	07db      	lsls	r3, r3, #31
 800bc16:	d506      	bpl.n	800bc26 <__swbuf_r+0x64>
 800bc18:	2e0a      	cmp	r6, #10
 800bc1a:	d104      	bne.n	800bc26 <__swbuf_r+0x64>
 800bc1c:	4621      	mov	r1, r4
 800bc1e:	4628      	mov	r0, r5
 800bc20:	f000 fd40 	bl	800c6a4 <_fflush_r>
 800bc24:	b938      	cbnz	r0, 800bc36 <__swbuf_r+0x74>
 800bc26:	4638      	mov	r0, r7
 800bc28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bc2a:	4621      	mov	r1, r4
 800bc2c:	4628      	mov	r0, r5
 800bc2e:	f000 f805 	bl	800bc3c <__swsetup_r>
 800bc32:	2800      	cmp	r0, #0
 800bc34:	d0d5      	beq.n	800bbe2 <__swbuf_r+0x20>
 800bc36:	f04f 37ff 	mov.w	r7, #4294967295
 800bc3a:	e7f4      	b.n	800bc26 <__swbuf_r+0x64>

0800bc3c <__swsetup_r>:
 800bc3c:	b538      	push	{r3, r4, r5, lr}
 800bc3e:	4b2a      	ldr	r3, [pc, #168]	; (800bce8 <__swsetup_r+0xac>)
 800bc40:	4605      	mov	r5, r0
 800bc42:	6818      	ldr	r0, [r3, #0]
 800bc44:	460c      	mov	r4, r1
 800bc46:	b118      	cbz	r0, 800bc50 <__swsetup_r+0x14>
 800bc48:	6a03      	ldr	r3, [r0, #32]
 800bc4a:	b90b      	cbnz	r3, 800bc50 <__swsetup_r+0x14>
 800bc4c:	f7ff fdd8 	bl	800b800 <__sinit>
 800bc50:	89a3      	ldrh	r3, [r4, #12]
 800bc52:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800bc56:	0718      	lsls	r0, r3, #28
 800bc58:	d422      	bmi.n	800bca0 <__swsetup_r+0x64>
 800bc5a:	06d9      	lsls	r1, r3, #27
 800bc5c:	d407      	bmi.n	800bc6e <__swsetup_r+0x32>
 800bc5e:	2309      	movs	r3, #9
 800bc60:	602b      	str	r3, [r5, #0]
 800bc62:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800bc66:	81a3      	strh	r3, [r4, #12]
 800bc68:	f04f 30ff 	mov.w	r0, #4294967295
 800bc6c:	e034      	b.n	800bcd8 <__swsetup_r+0x9c>
 800bc6e:	0758      	lsls	r0, r3, #29
 800bc70:	d512      	bpl.n	800bc98 <__swsetup_r+0x5c>
 800bc72:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800bc74:	b141      	cbz	r1, 800bc88 <__swsetup_r+0x4c>
 800bc76:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800bc7a:	4299      	cmp	r1, r3
 800bc7c:	d002      	beq.n	800bc84 <__swsetup_r+0x48>
 800bc7e:	4628      	mov	r0, r5
 800bc80:	f000 f94e 	bl	800bf20 <_free_r>
 800bc84:	2300      	movs	r3, #0
 800bc86:	6363      	str	r3, [r4, #52]	; 0x34
 800bc88:	89a3      	ldrh	r3, [r4, #12]
 800bc8a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800bc8e:	81a3      	strh	r3, [r4, #12]
 800bc90:	2300      	movs	r3, #0
 800bc92:	6063      	str	r3, [r4, #4]
 800bc94:	6923      	ldr	r3, [r4, #16]
 800bc96:	6023      	str	r3, [r4, #0]
 800bc98:	89a3      	ldrh	r3, [r4, #12]
 800bc9a:	f043 0308 	orr.w	r3, r3, #8
 800bc9e:	81a3      	strh	r3, [r4, #12]
 800bca0:	6923      	ldr	r3, [r4, #16]
 800bca2:	b94b      	cbnz	r3, 800bcb8 <__swsetup_r+0x7c>
 800bca4:	89a3      	ldrh	r3, [r4, #12]
 800bca6:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800bcaa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800bcae:	d003      	beq.n	800bcb8 <__swsetup_r+0x7c>
 800bcb0:	4621      	mov	r1, r4
 800bcb2:	4628      	mov	r0, r5
 800bcb4:	f000 fd44 	bl	800c740 <__smakebuf_r>
 800bcb8:	89a0      	ldrh	r0, [r4, #12]
 800bcba:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800bcbe:	f010 0301 	ands.w	r3, r0, #1
 800bcc2:	d00a      	beq.n	800bcda <__swsetup_r+0x9e>
 800bcc4:	2300      	movs	r3, #0
 800bcc6:	60a3      	str	r3, [r4, #8]
 800bcc8:	6963      	ldr	r3, [r4, #20]
 800bcca:	425b      	negs	r3, r3
 800bccc:	61a3      	str	r3, [r4, #24]
 800bcce:	6923      	ldr	r3, [r4, #16]
 800bcd0:	b943      	cbnz	r3, 800bce4 <__swsetup_r+0xa8>
 800bcd2:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800bcd6:	d1c4      	bne.n	800bc62 <__swsetup_r+0x26>
 800bcd8:	bd38      	pop	{r3, r4, r5, pc}
 800bcda:	0781      	lsls	r1, r0, #30
 800bcdc:	bf58      	it	pl
 800bcde:	6963      	ldrpl	r3, [r4, #20]
 800bce0:	60a3      	str	r3, [r4, #8]
 800bce2:	e7f4      	b.n	800bcce <__swsetup_r+0x92>
 800bce4:	2000      	movs	r0, #0
 800bce6:	e7f7      	b.n	800bcd8 <__swsetup_r+0x9c>
 800bce8:	20000074 	.word	0x20000074

0800bcec <memcmp>:
 800bcec:	b510      	push	{r4, lr}
 800bcee:	3901      	subs	r1, #1
 800bcf0:	4402      	add	r2, r0
 800bcf2:	4290      	cmp	r0, r2
 800bcf4:	d101      	bne.n	800bcfa <memcmp+0xe>
 800bcf6:	2000      	movs	r0, #0
 800bcf8:	e005      	b.n	800bd06 <memcmp+0x1a>
 800bcfa:	7803      	ldrb	r3, [r0, #0]
 800bcfc:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800bd00:	42a3      	cmp	r3, r4
 800bd02:	d001      	beq.n	800bd08 <memcmp+0x1c>
 800bd04:	1b18      	subs	r0, r3, r4
 800bd06:	bd10      	pop	{r4, pc}
 800bd08:	3001      	adds	r0, #1
 800bd0a:	e7f2      	b.n	800bcf2 <memcmp+0x6>

0800bd0c <memmove>:
 800bd0c:	4288      	cmp	r0, r1
 800bd0e:	b510      	push	{r4, lr}
 800bd10:	eb01 0402 	add.w	r4, r1, r2
 800bd14:	d902      	bls.n	800bd1c <memmove+0x10>
 800bd16:	4284      	cmp	r4, r0
 800bd18:	4623      	mov	r3, r4
 800bd1a:	d807      	bhi.n	800bd2c <memmove+0x20>
 800bd1c:	1e43      	subs	r3, r0, #1
 800bd1e:	42a1      	cmp	r1, r4
 800bd20:	d008      	beq.n	800bd34 <memmove+0x28>
 800bd22:	f811 2b01 	ldrb.w	r2, [r1], #1
 800bd26:	f803 2f01 	strb.w	r2, [r3, #1]!
 800bd2a:	e7f8      	b.n	800bd1e <memmove+0x12>
 800bd2c:	4402      	add	r2, r0
 800bd2e:	4601      	mov	r1, r0
 800bd30:	428a      	cmp	r2, r1
 800bd32:	d100      	bne.n	800bd36 <memmove+0x2a>
 800bd34:	bd10      	pop	{r4, pc}
 800bd36:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800bd3a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800bd3e:	e7f7      	b.n	800bd30 <memmove+0x24>

0800bd40 <memset>:
 800bd40:	4402      	add	r2, r0
 800bd42:	4603      	mov	r3, r0
 800bd44:	4293      	cmp	r3, r2
 800bd46:	d100      	bne.n	800bd4a <memset+0xa>
 800bd48:	4770      	bx	lr
 800bd4a:	f803 1b01 	strb.w	r1, [r3], #1
 800bd4e:	e7f9      	b.n	800bd44 <memset+0x4>

0800bd50 <strncmp>:
 800bd50:	b510      	push	{r4, lr}
 800bd52:	b16a      	cbz	r2, 800bd70 <strncmp+0x20>
 800bd54:	3901      	subs	r1, #1
 800bd56:	1884      	adds	r4, r0, r2
 800bd58:	f810 2b01 	ldrb.w	r2, [r0], #1
 800bd5c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800bd60:	429a      	cmp	r2, r3
 800bd62:	d103      	bne.n	800bd6c <strncmp+0x1c>
 800bd64:	42a0      	cmp	r0, r4
 800bd66:	d001      	beq.n	800bd6c <strncmp+0x1c>
 800bd68:	2a00      	cmp	r2, #0
 800bd6a:	d1f5      	bne.n	800bd58 <strncmp+0x8>
 800bd6c:	1ad0      	subs	r0, r2, r3
 800bd6e:	bd10      	pop	{r4, pc}
 800bd70:	4610      	mov	r0, r2
 800bd72:	e7fc      	b.n	800bd6e <strncmp+0x1e>

0800bd74 <_raise_r>:
 800bd74:	291f      	cmp	r1, #31
 800bd76:	b538      	push	{r3, r4, r5, lr}
 800bd78:	4604      	mov	r4, r0
 800bd7a:	460d      	mov	r5, r1
 800bd7c:	d904      	bls.n	800bd88 <_raise_r+0x14>
 800bd7e:	2316      	movs	r3, #22
 800bd80:	6003      	str	r3, [r0, #0]
 800bd82:	f04f 30ff 	mov.w	r0, #4294967295
 800bd86:	bd38      	pop	{r3, r4, r5, pc}
 800bd88:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800bd8a:	b112      	cbz	r2, 800bd92 <_raise_r+0x1e>
 800bd8c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800bd90:	b94b      	cbnz	r3, 800bda6 <_raise_r+0x32>
 800bd92:	4620      	mov	r0, r4
 800bd94:	f000 f864 	bl	800be60 <_getpid_r>
 800bd98:	462a      	mov	r2, r5
 800bd9a:	4601      	mov	r1, r0
 800bd9c:	4620      	mov	r0, r4
 800bd9e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bda2:	f000 b84b 	b.w	800be3c <_kill_r>
 800bda6:	2b01      	cmp	r3, #1
 800bda8:	d00a      	beq.n	800bdc0 <_raise_r+0x4c>
 800bdaa:	1c59      	adds	r1, r3, #1
 800bdac:	d103      	bne.n	800bdb6 <_raise_r+0x42>
 800bdae:	2316      	movs	r3, #22
 800bdb0:	6003      	str	r3, [r0, #0]
 800bdb2:	2001      	movs	r0, #1
 800bdb4:	e7e7      	b.n	800bd86 <_raise_r+0x12>
 800bdb6:	2400      	movs	r4, #0
 800bdb8:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800bdbc:	4628      	mov	r0, r5
 800bdbe:	4798      	blx	r3
 800bdc0:	2000      	movs	r0, #0
 800bdc2:	e7e0      	b.n	800bd86 <_raise_r+0x12>

0800bdc4 <raise>:
 800bdc4:	4b02      	ldr	r3, [pc, #8]	; (800bdd0 <raise+0xc>)
 800bdc6:	4601      	mov	r1, r0
 800bdc8:	6818      	ldr	r0, [r3, #0]
 800bdca:	f7ff bfd3 	b.w	800bd74 <_raise_r>
 800bdce:	bf00      	nop
 800bdd0:	20000074 	.word	0x20000074

0800bdd4 <_close_r>:
 800bdd4:	b538      	push	{r3, r4, r5, lr}
 800bdd6:	4d06      	ldr	r5, [pc, #24]	; (800bdf0 <_close_r+0x1c>)
 800bdd8:	2300      	movs	r3, #0
 800bdda:	4604      	mov	r4, r0
 800bddc:	4608      	mov	r0, r1
 800bdde:	602b      	str	r3, [r5, #0]
 800bde0:	f7fb fc51 	bl	8007686 <_close>
 800bde4:	1c43      	adds	r3, r0, #1
 800bde6:	d102      	bne.n	800bdee <_close_r+0x1a>
 800bde8:	682b      	ldr	r3, [r5, #0]
 800bdea:	b103      	cbz	r3, 800bdee <_close_r+0x1a>
 800bdec:	6023      	str	r3, [r4, #0]
 800bdee:	bd38      	pop	{r3, r4, r5, pc}
 800bdf0:	200006a0 	.word	0x200006a0

0800bdf4 <_lseek_r>:
 800bdf4:	b538      	push	{r3, r4, r5, lr}
 800bdf6:	4d07      	ldr	r5, [pc, #28]	; (800be14 <_lseek_r+0x20>)
 800bdf8:	4604      	mov	r4, r0
 800bdfa:	4608      	mov	r0, r1
 800bdfc:	4611      	mov	r1, r2
 800bdfe:	2200      	movs	r2, #0
 800be00:	602a      	str	r2, [r5, #0]
 800be02:	461a      	mov	r2, r3
 800be04:	f7fb fc66 	bl	80076d4 <_lseek>
 800be08:	1c43      	adds	r3, r0, #1
 800be0a:	d102      	bne.n	800be12 <_lseek_r+0x1e>
 800be0c:	682b      	ldr	r3, [r5, #0]
 800be0e:	b103      	cbz	r3, 800be12 <_lseek_r+0x1e>
 800be10:	6023      	str	r3, [r4, #0]
 800be12:	bd38      	pop	{r3, r4, r5, pc}
 800be14:	200006a0 	.word	0x200006a0

0800be18 <_read_r>:
 800be18:	b538      	push	{r3, r4, r5, lr}
 800be1a:	4d07      	ldr	r5, [pc, #28]	; (800be38 <_read_r+0x20>)
 800be1c:	4604      	mov	r4, r0
 800be1e:	4608      	mov	r0, r1
 800be20:	4611      	mov	r1, r2
 800be22:	2200      	movs	r2, #0
 800be24:	602a      	str	r2, [r5, #0]
 800be26:	461a      	mov	r2, r3
 800be28:	f7fb fbf4 	bl	8007614 <_read>
 800be2c:	1c43      	adds	r3, r0, #1
 800be2e:	d102      	bne.n	800be36 <_read_r+0x1e>
 800be30:	682b      	ldr	r3, [r5, #0]
 800be32:	b103      	cbz	r3, 800be36 <_read_r+0x1e>
 800be34:	6023      	str	r3, [r4, #0]
 800be36:	bd38      	pop	{r3, r4, r5, pc}
 800be38:	200006a0 	.word	0x200006a0

0800be3c <_kill_r>:
 800be3c:	b538      	push	{r3, r4, r5, lr}
 800be3e:	4d07      	ldr	r5, [pc, #28]	; (800be5c <_kill_r+0x20>)
 800be40:	2300      	movs	r3, #0
 800be42:	4604      	mov	r4, r0
 800be44:	4608      	mov	r0, r1
 800be46:	4611      	mov	r1, r2
 800be48:	602b      	str	r3, [r5, #0]
 800be4a:	f7fb fbc9 	bl	80075e0 <_kill>
 800be4e:	1c43      	adds	r3, r0, #1
 800be50:	d102      	bne.n	800be58 <_kill_r+0x1c>
 800be52:	682b      	ldr	r3, [r5, #0]
 800be54:	b103      	cbz	r3, 800be58 <_kill_r+0x1c>
 800be56:	6023      	str	r3, [r4, #0]
 800be58:	bd38      	pop	{r3, r4, r5, pc}
 800be5a:	bf00      	nop
 800be5c:	200006a0 	.word	0x200006a0

0800be60 <_getpid_r>:
 800be60:	f7fb bbb6 	b.w	80075d0 <_getpid>

0800be64 <_sbrk_r>:
 800be64:	b538      	push	{r3, r4, r5, lr}
 800be66:	4d06      	ldr	r5, [pc, #24]	; (800be80 <_sbrk_r+0x1c>)
 800be68:	2300      	movs	r3, #0
 800be6a:	4604      	mov	r4, r0
 800be6c:	4608      	mov	r0, r1
 800be6e:	602b      	str	r3, [r5, #0]
 800be70:	f7fb fc3e 	bl	80076f0 <_sbrk>
 800be74:	1c43      	adds	r3, r0, #1
 800be76:	d102      	bne.n	800be7e <_sbrk_r+0x1a>
 800be78:	682b      	ldr	r3, [r5, #0]
 800be7a:	b103      	cbz	r3, 800be7e <_sbrk_r+0x1a>
 800be7c:	6023      	str	r3, [r4, #0]
 800be7e:	bd38      	pop	{r3, r4, r5, pc}
 800be80:	200006a0 	.word	0x200006a0

0800be84 <_write_r>:
 800be84:	b538      	push	{r3, r4, r5, lr}
 800be86:	4d07      	ldr	r5, [pc, #28]	; (800bea4 <_write_r+0x20>)
 800be88:	4604      	mov	r4, r0
 800be8a:	4608      	mov	r0, r1
 800be8c:	4611      	mov	r1, r2
 800be8e:	2200      	movs	r2, #0
 800be90:	602a      	str	r2, [r5, #0]
 800be92:	461a      	mov	r2, r3
 800be94:	f7fb fbdb 	bl	800764e <_write>
 800be98:	1c43      	adds	r3, r0, #1
 800be9a:	d102      	bne.n	800bea2 <_write_r+0x1e>
 800be9c:	682b      	ldr	r3, [r5, #0]
 800be9e:	b103      	cbz	r3, 800bea2 <_write_r+0x1e>
 800bea0:	6023      	str	r3, [r4, #0]
 800bea2:	bd38      	pop	{r3, r4, r5, pc}
 800bea4:	200006a0 	.word	0x200006a0

0800bea8 <__errno>:
 800bea8:	4b01      	ldr	r3, [pc, #4]	; (800beb0 <__errno+0x8>)
 800beaa:	6818      	ldr	r0, [r3, #0]
 800beac:	4770      	bx	lr
 800beae:	bf00      	nop
 800beb0:	20000074 	.word	0x20000074

0800beb4 <__libc_init_array>:
 800beb4:	b570      	push	{r4, r5, r6, lr}
 800beb6:	4d0d      	ldr	r5, [pc, #52]	; (800beec <__libc_init_array+0x38>)
 800beb8:	4c0d      	ldr	r4, [pc, #52]	; (800bef0 <__libc_init_array+0x3c>)
 800beba:	1b64      	subs	r4, r4, r5
 800bebc:	10a4      	asrs	r4, r4, #2
 800bebe:	2600      	movs	r6, #0
 800bec0:	42a6      	cmp	r6, r4
 800bec2:	d109      	bne.n	800bed8 <__libc_init_array+0x24>
 800bec4:	4d0b      	ldr	r5, [pc, #44]	; (800bef4 <__libc_init_array+0x40>)
 800bec6:	4c0c      	ldr	r4, [pc, #48]	; (800bef8 <__libc_init_array+0x44>)
 800bec8:	f000 fc9e 	bl	800c808 <_init>
 800becc:	1b64      	subs	r4, r4, r5
 800bece:	10a4      	asrs	r4, r4, #2
 800bed0:	2600      	movs	r6, #0
 800bed2:	42a6      	cmp	r6, r4
 800bed4:	d105      	bne.n	800bee2 <__libc_init_array+0x2e>
 800bed6:	bd70      	pop	{r4, r5, r6, pc}
 800bed8:	f855 3b04 	ldr.w	r3, [r5], #4
 800bedc:	4798      	blx	r3
 800bede:	3601      	adds	r6, #1
 800bee0:	e7ee      	b.n	800bec0 <__libc_init_array+0xc>
 800bee2:	f855 3b04 	ldr.w	r3, [r5], #4
 800bee6:	4798      	blx	r3
 800bee8:	3601      	adds	r6, #1
 800beea:	e7f2      	b.n	800bed2 <__libc_init_array+0x1e>
 800beec:	0800e248 	.word	0x0800e248
 800bef0:	0800e248 	.word	0x0800e248
 800bef4:	0800e248 	.word	0x0800e248
 800bef8:	0800e250 	.word	0x0800e250

0800befc <__retarget_lock_init_recursive>:
 800befc:	4770      	bx	lr

0800befe <__retarget_lock_acquire_recursive>:
 800befe:	4770      	bx	lr

0800bf00 <__retarget_lock_release_recursive>:
 800bf00:	4770      	bx	lr

0800bf02 <memcpy>:
 800bf02:	440a      	add	r2, r1
 800bf04:	4291      	cmp	r1, r2
 800bf06:	f100 33ff 	add.w	r3, r0, #4294967295
 800bf0a:	d100      	bne.n	800bf0e <memcpy+0xc>
 800bf0c:	4770      	bx	lr
 800bf0e:	b510      	push	{r4, lr}
 800bf10:	f811 4b01 	ldrb.w	r4, [r1], #1
 800bf14:	f803 4f01 	strb.w	r4, [r3, #1]!
 800bf18:	4291      	cmp	r1, r2
 800bf1a:	d1f9      	bne.n	800bf10 <memcpy+0xe>
 800bf1c:	bd10      	pop	{r4, pc}
	...

0800bf20 <_free_r>:
 800bf20:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bf22:	2900      	cmp	r1, #0
 800bf24:	d044      	beq.n	800bfb0 <_free_r+0x90>
 800bf26:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800bf2a:	9001      	str	r0, [sp, #4]
 800bf2c:	2b00      	cmp	r3, #0
 800bf2e:	f1a1 0404 	sub.w	r4, r1, #4
 800bf32:	bfb8      	it	lt
 800bf34:	18e4      	addlt	r4, r4, r3
 800bf36:	f7ff fb93 	bl	800b660 <__malloc_lock>
 800bf3a:	4a1e      	ldr	r2, [pc, #120]	; (800bfb4 <_free_r+0x94>)
 800bf3c:	9801      	ldr	r0, [sp, #4]
 800bf3e:	6813      	ldr	r3, [r2, #0]
 800bf40:	b933      	cbnz	r3, 800bf50 <_free_r+0x30>
 800bf42:	6063      	str	r3, [r4, #4]
 800bf44:	6014      	str	r4, [r2, #0]
 800bf46:	b003      	add	sp, #12
 800bf48:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800bf4c:	f7ff bb8e 	b.w	800b66c <__malloc_unlock>
 800bf50:	42a3      	cmp	r3, r4
 800bf52:	d908      	bls.n	800bf66 <_free_r+0x46>
 800bf54:	6825      	ldr	r5, [r4, #0]
 800bf56:	1961      	adds	r1, r4, r5
 800bf58:	428b      	cmp	r3, r1
 800bf5a:	bf01      	itttt	eq
 800bf5c:	6819      	ldreq	r1, [r3, #0]
 800bf5e:	685b      	ldreq	r3, [r3, #4]
 800bf60:	1949      	addeq	r1, r1, r5
 800bf62:	6021      	streq	r1, [r4, #0]
 800bf64:	e7ed      	b.n	800bf42 <_free_r+0x22>
 800bf66:	461a      	mov	r2, r3
 800bf68:	685b      	ldr	r3, [r3, #4]
 800bf6a:	b10b      	cbz	r3, 800bf70 <_free_r+0x50>
 800bf6c:	42a3      	cmp	r3, r4
 800bf6e:	d9fa      	bls.n	800bf66 <_free_r+0x46>
 800bf70:	6811      	ldr	r1, [r2, #0]
 800bf72:	1855      	adds	r5, r2, r1
 800bf74:	42a5      	cmp	r5, r4
 800bf76:	d10b      	bne.n	800bf90 <_free_r+0x70>
 800bf78:	6824      	ldr	r4, [r4, #0]
 800bf7a:	4421      	add	r1, r4
 800bf7c:	1854      	adds	r4, r2, r1
 800bf7e:	42a3      	cmp	r3, r4
 800bf80:	6011      	str	r1, [r2, #0]
 800bf82:	d1e0      	bne.n	800bf46 <_free_r+0x26>
 800bf84:	681c      	ldr	r4, [r3, #0]
 800bf86:	685b      	ldr	r3, [r3, #4]
 800bf88:	6053      	str	r3, [r2, #4]
 800bf8a:	440c      	add	r4, r1
 800bf8c:	6014      	str	r4, [r2, #0]
 800bf8e:	e7da      	b.n	800bf46 <_free_r+0x26>
 800bf90:	d902      	bls.n	800bf98 <_free_r+0x78>
 800bf92:	230c      	movs	r3, #12
 800bf94:	6003      	str	r3, [r0, #0]
 800bf96:	e7d6      	b.n	800bf46 <_free_r+0x26>
 800bf98:	6825      	ldr	r5, [r4, #0]
 800bf9a:	1961      	adds	r1, r4, r5
 800bf9c:	428b      	cmp	r3, r1
 800bf9e:	bf04      	itt	eq
 800bfa0:	6819      	ldreq	r1, [r3, #0]
 800bfa2:	685b      	ldreq	r3, [r3, #4]
 800bfa4:	6063      	str	r3, [r4, #4]
 800bfa6:	bf04      	itt	eq
 800bfa8:	1949      	addeq	r1, r1, r5
 800bfaa:	6021      	streq	r1, [r4, #0]
 800bfac:	6054      	str	r4, [r2, #4]
 800bfae:	e7ca      	b.n	800bf46 <_free_r+0x26>
 800bfb0:	b003      	add	sp, #12
 800bfb2:	bd30      	pop	{r4, r5, pc}
 800bfb4:	2000055c 	.word	0x2000055c

0800bfb8 <_malloc_usable_size_r>:
 800bfb8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800bfbc:	1f18      	subs	r0, r3, #4
 800bfbe:	2b00      	cmp	r3, #0
 800bfc0:	bfbc      	itt	lt
 800bfc2:	580b      	ldrlt	r3, [r1, r0]
 800bfc4:	18c0      	addlt	r0, r0, r3
 800bfc6:	4770      	bx	lr

0800bfc8 <__ssputs_r>:
 800bfc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bfcc:	688e      	ldr	r6, [r1, #8]
 800bfce:	461f      	mov	r7, r3
 800bfd0:	42be      	cmp	r6, r7
 800bfd2:	680b      	ldr	r3, [r1, #0]
 800bfd4:	4682      	mov	sl, r0
 800bfd6:	460c      	mov	r4, r1
 800bfd8:	4690      	mov	r8, r2
 800bfda:	d82c      	bhi.n	800c036 <__ssputs_r+0x6e>
 800bfdc:	898a      	ldrh	r2, [r1, #12]
 800bfde:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800bfe2:	d026      	beq.n	800c032 <__ssputs_r+0x6a>
 800bfe4:	6965      	ldr	r5, [r4, #20]
 800bfe6:	6909      	ldr	r1, [r1, #16]
 800bfe8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800bfec:	eba3 0901 	sub.w	r9, r3, r1
 800bff0:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800bff4:	1c7b      	adds	r3, r7, #1
 800bff6:	444b      	add	r3, r9
 800bff8:	106d      	asrs	r5, r5, #1
 800bffa:	429d      	cmp	r5, r3
 800bffc:	bf38      	it	cc
 800bffe:	461d      	movcc	r5, r3
 800c000:	0553      	lsls	r3, r2, #21
 800c002:	d527      	bpl.n	800c054 <__ssputs_r+0x8c>
 800c004:	4629      	mov	r1, r5
 800c006:	f7ff faab 	bl	800b560 <_malloc_r>
 800c00a:	4606      	mov	r6, r0
 800c00c:	b360      	cbz	r0, 800c068 <__ssputs_r+0xa0>
 800c00e:	6921      	ldr	r1, [r4, #16]
 800c010:	464a      	mov	r2, r9
 800c012:	f7ff ff76 	bl	800bf02 <memcpy>
 800c016:	89a3      	ldrh	r3, [r4, #12]
 800c018:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800c01c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800c020:	81a3      	strh	r3, [r4, #12]
 800c022:	6126      	str	r6, [r4, #16]
 800c024:	6165      	str	r5, [r4, #20]
 800c026:	444e      	add	r6, r9
 800c028:	eba5 0509 	sub.w	r5, r5, r9
 800c02c:	6026      	str	r6, [r4, #0]
 800c02e:	60a5      	str	r5, [r4, #8]
 800c030:	463e      	mov	r6, r7
 800c032:	42be      	cmp	r6, r7
 800c034:	d900      	bls.n	800c038 <__ssputs_r+0x70>
 800c036:	463e      	mov	r6, r7
 800c038:	6820      	ldr	r0, [r4, #0]
 800c03a:	4632      	mov	r2, r6
 800c03c:	4641      	mov	r1, r8
 800c03e:	f7ff fe65 	bl	800bd0c <memmove>
 800c042:	68a3      	ldr	r3, [r4, #8]
 800c044:	1b9b      	subs	r3, r3, r6
 800c046:	60a3      	str	r3, [r4, #8]
 800c048:	6823      	ldr	r3, [r4, #0]
 800c04a:	4433      	add	r3, r6
 800c04c:	6023      	str	r3, [r4, #0]
 800c04e:	2000      	movs	r0, #0
 800c050:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c054:	462a      	mov	r2, r5
 800c056:	f7ff fb17 	bl	800b688 <_realloc_r>
 800c05a:	4606      	mov	r6, r0
 800c05c:	2800      	cmp	r0, #0
 800c05e:	d1e0      	bne.n	800c022 <__ssputs_r+0x5a>
 800c060:	6921      	ldr	r1, [r4, #16]
 800c062:	4650      	mov	r0, sl
 800c064:	f7ff ff5c 	bl	800bf20 <_free_r>
 800c068:	230c      	movs	r3, #12
 800c06a:	f8ca 3000 	str.w	r3, [sl]
 800c06e:	89a3      	ldrh	r3, [r4, #12]
 800c070:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c074:	81a3      	strh	r3, [r4, #12]
 800c076:	f04f 30ff 	mov.w	r0, #4294967295
 800c07a:	e7e9      	b.n	800c050 <__ssputs_r+0x88>

0800c07c <_svfiprintf_r>:
 800c07c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c080:	4698      	mov	r8, r3
 800c082:	898b      	ldrh	r3, [r1, #12]
 800c084:	061b      	lsls	r3, r3, #24
 800c086:	b09d      	sub	sp, #116	; 0x74
 800c088:	4607      	mov	r7, r0
 800c08a:	460d      	mov	r5, r1
 800c08c:	4614      	mov	r4, r2
 800c08e:	d50e      	bpl.n	800c0ae <_svfiprintf_r+0x32>
 800c090:	690b      	ldr	r3, [r1, #16]
 800c092:	b963      	cbnz	r3, 800c0ae <_svfiprintf_r+0x32>
 800c094:	2140      	movs	r1, #64	; 0x40
 800c096:	f7ff fa63 	bl	800b560 <_malloc_r>
 800c09a:	6028      	str	r0, [r5, #0]
 800c09c:	6128      	str	r0, [r5, #16]
 800c09e:	b920      	cbnz	r0, 800c0aa <_svfiprintf_r+0x2e>
 800c0a0:	230c      	movs	r3, #12
 800c0a2:	603b      	str	r3, [r7, #0]
 800c0a4:	f04f 30ff 	mov.w	r0, #4294967295
 800c0a8:	e0d0      	b.n	800c24c <_svfiprintf_r+0x1d0>
 800c0aa:	2340      	movs	r3, #64	; 0x40
 800c0ac:	616b      	str	r3, [r5, #20]
 800c0ae:	2300      	movs	r3, #0
 800c0b0:	9309      	str	r3, [sp, #36]	; 0x24
 800c0b2:	2320      	movs	r3, #32
 800c0b4:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800c0b8:	f8cd 800c 	str.w	r8, [sp, #12]
 800c0bc:	2330      	movs	r3, #48	; 0x30
 800c0be:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 800c264 <_svfiprintf_r+0x1e8>
 800c0c2:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800c0c6:	f04f 0901 	mov.w	r9, #1
 800c0ca:	4623      	mov	r3, r4
 800c0cc:	469a      	mov	sl, r3
 800c0ce:	f813 2b01 	ldrb.w	r2, [r3], #1
 800c0d2:	b10a      	cbz	r2, 800c0d8 <_svfiprintf_r+0x5c>
 800c0d4:	2a25      	cmp	r2, #37	; 0x25
 800c0d6:	d1f9      	bne.n	800c0cc <_svfiprintf_r+0x50>
 800c0d8:	ebba 0b04 	subs.w	fp, sl, r4
 800c0dc:	d00b      	beq.n	800c0f6 <_svfiprintf_r+0x7a>
 800c0de:	465b      	mov	r3, fp
 800c0e0:	4622      	mov	r2, r4
 800c0e2:	4629      	mov	r1, r5
 800c0e4:	4638      	mov	r0, r7
 800c0e6:	f7ff ff6f 	bl	800bfc8 <__ssputs_r>
 800c0ea:	3001      	adds	r0, #1
 800c0ec:	f000 80a9 	beq.w	800c242 <_svfiprintf_r+0x1c6>
 800c0f0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c0f2:	445a      	add	r2, fp
 800c0f4:	9209      	str	r2, [sp, #36]	; 0x24
 800c0f6:	f89a 3000 	ldrb.w	r3, [sl]
 800c0fa:	2b00      	cmp	r3, #0
 800c0fc:	f000 80a1 	beq.w	800c242 <_svfiprintf_r+0x1c6>
 800c100:	2300      	movs	r3, #0
 800c102:	f04f 32ff 	mov.w	r2, #4294967295
 800c106:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800c10a:	f10a 0a01 	add.w	sl, sl, #1
 800c10e:	9304      	str	r3, [sp, #16]
 800c110:	9307      	str	r3, [sp, #28]
 800c112:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800c116:	931a      	str	r3, [sp, #104]	; 0x68
 800c118:	4654      	mov	r4, sl
 800c11a:	2205      	movs	r2, #5
 800c11c:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c120:	4850      	ldr	r0, [pc, #320]	; (800c264 <_svfiprintf_r+0x1e8>)
 800c122:	f7fa f845 	bl	80061b0 <memchr>
 800c126:	9a04      	ldr	r2, [sp, #16]
 800c128:	b9d8      	cbnz	r0, 800c162 <_svfiprintf_r+0xe6>
 800c12a:	06d0      	lsls	r0, r2, #27
 800c12c:	bf44      	itt	mi
 800c12e:	2320      	movmi	r3, #32
 800c130:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800c134:	0711      	lsls	r1, r2, #28
 800c136:	bf44      	itt	mi
 800c138:	232b      	movmi	r3, #43	; 0x2b
 800c13a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800c13e:	f89a 3000 	ldrb.w	r3, [sl]
 800c142:	2b2a      	cmp	r3, #42	; 0x2a
 800c144:	d015      	beq.n	800c172 <_svfiprintf_r+0xf6>
 800c146:	9a07      	ldr	r2, [sp, #28]
 800c148:	4654      	mov	r4, sl
 800c14a:	2000      	movs	r0, #0
 800c14c:	f04f 0c0a 	mov.w	ip, #10
 800c150:	4621      	mov	r1, r4
 800c152:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c156:	3b30      	subs	r3, #48	; 0x30
 800c158:	2b09      	cmp	r3, #9
 800c15a:	d94d      	bls.n	800c1f8 <_svfiprintf_r+0x17c>
 800c15c:	b1b0      	cbz	r0, 800c18c <_svfiprintf_r+0x110>
 800c15e:	9207      	str	r2, [sp, #28]
 800c160:	e014      	b.n	800c18c <_svfiprintf_r+0x110>
 800c162:	eba0 0308 	sub.w	r3, r0, r8
 800c166:	fa09 f303 	lsl.w	r3, r9, r3
 800c16a:	4313      	orrs	r3, r2
 800c16c:	9304      	str	r3, [sp, #16]
 800c16e:	46a2      	mov	sl, r4
 800c170:	e7d2      	b.n	800c118 <_svfiprintf_r+0x9c>
 800c172:	9b03      	ldr	r3, [sp, #12]
 800c174:	1d19      	adds	r1, r3, #4
 800c176:	681b      	ldr	r3, [r3, #0]
 800c178:	9103      	str	r1, [sp, #12]
 800c17a:	2b00      	cmp	r3, #0
 800c17c:	bfbb      	ittet	lt
 800c17e:	425b      	neglt	r3, r3
 800c180:	f042 0202 	orrlt.w	r2, r2, #2
 800c184:	9307      	strge	r3, [sp, #28]
 800c186:	9307      	strlt	r3, [sp, #28]
 800c188:	bfb8      	it	lt
 800c18a:	9204      	strlt	r2, [sp, #16]
 800c18c:	7823      	ldrb	r3, [r4, #0]
 800c18e:	2b2e      	cmp	r3, #46	; 0x2e
 800c190:	d10c      	bne.n	800c1ac <_svfiprintf_r+0x130>
 800c192:	7863      	ldrb	r3, [r4, #1]
 800c194:	2b2a      	cmp	r3, #42	; 0x2a
 800c196:	d134      	bne.n	800c202 <_svfiprintf_r+0x186>
 800c198:	9b03      	ldr	r3, [sp, #12]
 800c19a:	1d1a      	adds	r2, r3, #4
 800c19c:	681b      	ldr	r3, [r3, #0]
 800c19e:	9203      	str	r2, [sp, #12]
 800c1a0:	2b00      	cmp	r3, #0
 800c1a2:	bfb8      	it	lt
 800c1a4:	f04f 33ff 	movlt.w	r3, #4294967295
 800c1a8:	3402      	adds	r4, #2
 800c1aa:	9305      	str	r3, [sp, #20]
 800c1ac:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 800c274 <_svfiprintf_r+0x1f8>
 800c1b0:	7821      	ldrb	r1, [r4, #0]
 800c1b2:	2203      	movs	r2, #3
 800c1b4:	4650      	mov	r0, sl
 800c1b6:	f7f9 fffb 	bl	80061b0 <memchr>
 800c1ba:	b138      	cbz	r0, 800c1cc <_svfiprintf_r+0x150>
 800c1bc:	9b04      	ldr	r3, [sp, #16]
 800c1be:	eba0 000a 	sub.w	r0, r0, sl
 800c1c2:	2240      	movs	r2, #64	; 0x40
 800c1c4:	4082      	lsls	r2, r0
 800c1c6:	4313      	orrs	r3, r2
 800c1c8:	3401      	adds	r4, #1
 800c1ca:	9304      	str	r3, [sp, #16]
 800c1cc:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c1d0:	4825      	ldr	r0, [pc, #148]	; (800c268 <_svfiprintf_r+0x1ec>)
 800c1d2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800c1d6:	2206      	movs	r2, #6
 800c1d8:	f7f9 ffea 	bl	80061b0 <memchr>
 800c1dc:	2800      	cmp	r0, #0
 800c1de:	d038      	beq.n	800c252 <_svfiprintf_r+0x1d6>
 800c1e0:	4b22      	ldr	r3, [pc, #136]	; (800c26c <_svfiprintf_r+0x1f0>)
 800c1e2:	bb1b      	cbnz	r3, 800c22c <_svfiprintf_r+0x1b0>
 800c1e4:	9b03      	ldr	r3, [sp, #12]
 800c1e6:	3307      	adds	r3, #7
 800c1e8:	f023 0307 	bic.w	r3, r3, #7
 800c1ec:	3308      	adds	r3, #8
 800c1ee:	9303      	str	r3, [sp, #12]
 800c1f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c1f2:	4433      	add	r3, r6
 800c1f4:	9309      	str	r3, [sp, #36]	; 0x24
 800c1f6:	e768      	b.n	800c0ca <_svfiprintf_r+0x4e>
 800c1f8:	fb0c 3202 	mla	r2, ip, r2, r3
 800c1fc:	460c      	mov	r4, r1
 800c1fe:	2001      	movs	r0, #1
 800c200:	e7a6      	b.n	800c150 <_svfiprintf_r+0xd4>
 800c202:	2300      	movs	r3, #0
 800c204:	3401      	adds	r4, #1
 800c206:	9305      	str	r3, [sp, #20]
 800c208:	4619      	mov	r1, r3
 800c20a:	f04f 0c0a 	mov.w	ip, #10
 800c20e:	4620      	mov	r0, r4
 800c210:	f810 2b01 	ldrb.w	r2, [r0], #1
 800c214:	3a30      	subs	r2, #48	; 0x30
 800c216:	2a09      	cmp	r2, #9
 800c218:	d903      	bls.n	800c222 <_svfiprintf_r+0x1a6>
 800c21a:	2b00      	cmp	r3, #0
 800c21c:	d0c6      	beq.n	800c1ac <_svfiprintf_r+0x130>
 800c21e:	9105      	str	r1, [sp, #20]
 800c220:	e7c4      	b.n	800c1ac <_svfiprintf_r+0x130>
 800c222:	fb0c 2101 	mla	r1, ip, r1, r2
 800c226:	4604      	mov	r4, r0
 800c228:	2301      	movs	r3, #1
 800c22a:	e7f0      	b.n	800c20e <_svfiprintf_r+0x192>
 800c22c:	ab03      	add	r3, sp, #12
 800c22e:	9300      	str	r3, [sp, #0]
 800c230:	462a      	mov	r2, r5
 800c232:	4b0f      	ldr	r3, [pc, #60]	; (800c270 <_svfiprintf_r+0x1f4>)
 800c234:	a904      	add	r1, sp, #16
 800c236:	4638      	mov	r0, r7
 800c238:	f3af 8000 	nop.w
 800c23c:	1c42      	adds	r2, r0, #1
 800c23e:	4606      	mov	r6, r0
 800c240:	d1d6      	bne.n	800c1f0 <_svfiprintf_r+0x174>
 800c242:	89ab      	ldrh	r3, [r5, #12]
 800c244:	065b      	lsls	r3, r3, #25
 800c246:	f53f af2d 	bmi.w	800c0a4 <_svfiprintf_r+0x28>
 800c24a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800c24c:	b01d      	add	sp, #116	; 0x74
 800c24e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c252:	ab03      	add	r3, sp, #12
 800c254:	9300      	str	r3, [sp, #0]
 800c256:	462a      	mov	r2, r5
 800c258:	4b05      	ldr	r3, [pc, #20]	; (800c270 <_svfiprintf_r+0x1f4>)
 800c25a:	a904      	add	r1, sp, #16
 800c25c:	4638      	mov	r0, r7
 800c25e:	f000 f879 	bl	800c354 <_printf_i>
 800c262:	e7eb      	b.n	800c23c <_svfiprintf_r+0x1c0>
 800c264:	0800dcf5 	.word	0x0800dcf5
 800c268:	0800dcff 	.word	0x0800dcff
 800c26c:	00000000 	.word	0x00000000
 800c270:	0800bfc9 	.word	0x0800bfc9
 800c274:	0800dcfb 	.word	0x0800dcfb

0800c278 <_printf_common>:
 800c278:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c27c:	4616      	mov	r6, r2
 800c27e:	4699      	mov	r9, r3
 800c280:	688a      	ldr	r2, [r1, #8]
 800c282:	690b      	ldr	r3, [r1, #16]
 800c284:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800c288:	4293      	cmp	r3, r2
 800c28a:	bfb8      	it	lt
 800c28c:	4613      	movlt	r3, r2
 800c28e:	6033      	str	r3, [r6, #0]
 800c290:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800c294:	4607      	mov	r7, r0
 800c296:	460c      	mov	r4, r1
 800c298:	b10a      	cbz	r2, 800c29e <_printf_common+0x26>
 800c29a:	3301      	adds	r3, #1
 800c29c:	6033      	str	r3, [r6, #0]
 800c29e:	6823      	ldr	r3, [r4, #0]
 800c2a0:	0699      	lsls	r1, r3, #26
 800c2a2:	bf42      	ittt	mi
 800c2a4:	6833      	ldrmi	r3, [r6, #0]
 800c2a6:	3302      	addmi	r3, #2
 800c2a8:	6033      	strmi	r3, [r6, #0]
 800c2aa:	6825      	ldr	r5, [r4, #0]
 800c2ac:	f015 0506 	ands.w	r5, r5, #6
 800c2b0:	d106      	bne.n	800c2c0 <_printf_common+0x48>
 800c2b2:	f104 0a19 	add.w	sl, r4, #25
 800c2b6:	68e3      	ldr	r3, [r4, #12]
 800c2b8:	6832      	ldr	r2, [r6, #0]
 800c2ba:	1a9b      	subs	r3, r3, r2
 800c2bc:	42ab      	cmp	r3, r5
 800c2be:	dc26      	bgt.n	800c30e <_printf_common+0x96>
 800c2c0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800c2c4:	1e13      	subs	r3, r2, #0
 800c2c6:	6822      	ldr	r2, [r4, #0]
 800c2c8:	bf18      	it	ne
 800c2ca:	2301      	movne	r3, #1
 800c2cc:	0692      	lsls	r2, r2, #26
 800c2ce:	d42b      	bmi.n	800c328 <_printf_common+0xb0>
 800c2d0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800c2d4:	4649      	mov	r1, r9
 800c2d6:	4638      	mov	r0, r7
 800c2d8:	47c0      	blx	r8
 800c2da:	3001      	adds	r0, #1
 800c2dc:	d01e      	beq.n	800c31c <_printf_common+0xa4>
 800c2de:	6823      	ldr	r3, [r4, #0]
 800c2e0:	6922      	ldr	r2, [r4, #16]
 800c2e2:	f003 0306 	and.w	r3, r3, #6
 800c2e6:	2b04      	cmp	r3, #4
 800c2e8:	bf02      	ittt	eq
 800c2ea:	68e5      	ldreq	r5, [r4, #12]
 800c2ec:	6833      	ldreq	r3, [r6, #0]
 800c2ee:	1aed      	subeq	r5, r5, r3
 800c2f0:	68a3      	ldr	r3, [r4, #8]
 800c2f2:	bf0c      	ite	eq
 800c2f4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800c2f8:	2500      	movne	r5, #0
 800c2fa:	4293      	cmp	r3, r2
 800c2fc:	bfc4      	itt	gt
 800c2fe:	1a9b      	subgt	r3, r3, r2
 800c300:	18ed      	addgt	r5, r5, r3
 800c302:	2600      	movs	r6, #0
 800c304:	341a      	adds	r4, #26
 800c306:	42b5      	cmp	r5, r6
 800c308:	d11a      	bne.n	800c340 <_printf_common+0xc8>
 800c30a:	2000      	movs	r0, #0
 800c30c:	e008      	b.n	800c320 <_printf_common+0xa8>
 800c30e:	2301      	movs	r3, #1
 800c310:	4652      	mov	r2, sl
 800c312:	4649      	mov	r1, r9
 800c314:	4638      	mov	r0, r7
 800c316:	47c0      	blx	r8
 800c318:	3001      	adds	r0, #1
 800c31a:	d103      	bne.n	800c324 <_printf_common+0xac>
 800c31c:	f04f 30ff 	mov.w	r0, #4294967295
 800c320:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c324:	3501      	adds	r5, #1
 800c326:	e7c6      	b.n	800c2b6 <_printf_common+0x3e>
 800c328:	18e1      	adds	r1, r4, r3
 800c32a:	1c5a      	adds	r2, r3, #1
 800c32c:	2030      	movs	r0, #48	; 0x30
 800c32e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800c332:	4422      	add	r2, r4
 800c334:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800c338:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800c33c:	3302      	adds	r3, #2
 800c33e:	e7c7      	b.n	800c2d0 <_printf_common+0x58>
 800c340:	2301      	movs	r3, #1
 800c342:	4622      	mov	r2, r4
 800c344:	4649      	mov	r1, r9
 800c346:	4638      	mov	r0, r7
 800c348:	47c0      	blx	r8
 800c34a:	3001      	adds	r0, #1
 800c34c:	d0e6      	beq.n	800c31c <_printf_common+0xa4>
 800c34e:	3601      	adds	r6, #1
 800c350:	e7d9      	b.n	800c306 <_printf_common+0x8e>
	...

0800c354 <_printf_i>:
 800c354:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c358:	7e0f      	ldrb	r7, [r1, #24]
 800c35a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800c35c:	2f78      	cmp	r7, #120	; 0x78
 800c35e:	4691      	mov	r9, r2
 800c360:	4680      	mov	r8, r0
 800c362:	460c      	mov	r4, r1
 800c364:	469a      	mov	sl, r3
 800c366:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800c36a:	d807      	bhi.n	800c37c <_printf_i+0x28>
 800c36c:	2f62      	cmp	r7, #98	; 0x62
 800c36e:	d80a      	bhi.n	800c386 <_printf_i+0x32>
 800c370:	2f00      	cmp	r7, #0
 800c372:	f000 80d4 	beq.w	800c51e <_printf_i+0x1ca>
 800c376:	2f58      	cmp	r7, #88	; 0x58
 800c378:	f000 80c0 	beq.w	800c4fc <_printf_i+0x1a8>
 800c37c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800c380:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800c384:	e03a      	b.n	800c3fc <_printf_i+0xa8>
 800c386:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800c38a:	2b15      	cmp	r3, #21
 800c38c:	d8f6      	bhi.n	800c37c <_printf_i+0x28>
 800c38e:	a101      	add	r1, pc, #4	; (adr r1, 800c394 <_printf_i+0x40>)
 800c390:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800c394:	0800c3ed 	.word	0x0800c3ed
 800c398:	0800c401 	.word	0x0800c401
 800c39c:	0800c37d 	.word	0x0800c37d
 800c3a0:	0800c37d 	.word	0x0800c37d
 800c3a4:	0800c37d 	.word	0x0800c37d
 800c3a8:	0800c37d 	.word	0x0800c37d
 800c3ac:	0800c401 	.word	0x0800c401
 800c3b0:	0800c37d 	.word	0x0800c37d
 800c3b4:	0800c37d 	.word	0x0800c37d
 800c3b8:	0800c37d 	.word	0x0800c37d
 800c3bc:	0800c37d 	.word	0x0800c37d
 800c3c0:	0800c505 	.word	0x0800c505
 800c3c4:	0800c42d 	.word	0x0800c42d
 800c3c8:	0800c4bf 	.word	0x0800c4bf
 800c3cc:	0800c37d 	.word	0x0800c37d
 800c3d0:	0800c37d 	.word	0x0800c37d
 800c3d4:	0800c527 	.word	0x0800c527
 800c3d8:	0800c37d 	.word	0x0800c37d
 800c3dc:	0800c42d 	.word	0x0800c42d
 800c3e0:	0800c37d 	.word	0x0800c37d
 800c3e4:	0800c37d 	.word	0x0800c37d
 800c3e8:	0800c4c7 	.word	0x0800c4c7
 800c3ec:	682b      	ldr	r3, [r5, #0]
 800c3ee:	1d1a      	adds	r2, r3, #4
 800c3f0:	681b      	ldr	r3, [r3, #0]
 800c3f2:	602a      	str	r2, [r5, #0]
 800c3f4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800c3f8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800c3fc:	2301      	movs	r3, #1
 800c3fe:	e09f      	b.n	800c540 <_printf_i+0x1ec>
 800c400:	6820      	ldr	r0, [r4, #0]
 800c402:	682b      	ldr	r3, [r5, #0]
 800c404:	0607      	lsls	r7, r0, #24
 800c406:	f103 0104 	add.w	r1, r3, #4
 800c40a:	6029      	str	r1, [r5, #0]
 800c40c:	d501      	bpl.n	800c412 <_printf_i+0xbe>
 800c40e:	681e      	ldr	r6, [r3, #0]
 800c410:	e003      	b.n	800c41a <_printf_i+0xc6>
 800c412:	0646      	lsls	r6, r0, #25
 800c414:	d5fb      	bpl.n	800c40e <_printf_i+0xba>
 800c416:	f9b3 6000 	ldrsh.w	r6, [r3]
 800c41a:	2e00      	cmp	r6, #0
 800c41c:	da03      	bge.n	800c426 <_printf_i+0xd2>
 800c41e:	232d      	movs	r3, #45	; 0x2d
 800c420:	4276      	negs	r6, r6
 800c422:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c426:	485a      	ldr	r0, [pc, #360]	; (800c590 <_printf_i+0x23c>)
 800c428:	230a      	movs	r3, #10
 800c42a:	e012      	b.n	800c452 <_printf_i+0xfe>
 800c42c:	682b      	ldr	r3, [r5, #0]
 800c42e:	6820      	ldr	r0, [r4, #0]
 800c430:	1d19      	adds	r1, r3, #4
 800c432:	6029      	str	r1, [r5, #0]
 800c434:	0605      	lsls	r5, r0, #24
 800c436:	d501      	bpl.n	800c43c <_printf_i+0xe8>
 800c438:	681e      	ldr	r6, [r3, #0]
 800c43a:	e002      	b.n	800c442 <_printf_i+0xee>
 800c43c:	0641      	lsls	r1, r0, #25
 800c43e:	d5fb      	bpl.n	800c438 <_printf_i+0xe4>
 800c440:	881e      	ldrh	r6, [r3, #0]
 800c442:	4853      	ldr	r0, [pc, #332]	; (800c590 <_printf_i+0x23c>)
 800c444:	2f6f      	cmp	r7, #111	; 0x6f
 800c446:	bf0c      	ite	eq
 800c448:	2308      	moveq	r3, #8
 800c44a:	230a      	movne	r3, #10
 800c44c:	2100      	movs	r1, #0
 800c44e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800c452:	6865      	ldr	r5, [r4, #4]
 800c454:	60a5      	str	r5, [r4, #8]
 800c456:	2d00      	cmp	r5, #0
 800c458:	bfa2      	ittt	ge
 800c45a:	6821      	ldrge	r1, [r4, #0]
 800c45c:	f021 0104 	bicge.w	r1, r1, #4
 800c460:	6021      	strge	r1, [r4, #0]
 800c462:	b90e      	cbnz	r6, 800c468 <_printf_i+0x114>
 800c464:	2d00      	cmp	r5, #0
 800c466:	d04b      	beq.n	800c500 <_printf_i+0x1ac>
 800c468:	4615      	mov	r5, r2
 800c46a:	fbb6 f1f3 	udiv	r1, r6, r3
 800c46e:	fb03 6711 	mls	r7, r3, r1, r6
 800c472:	5dc7      	ldrb	r7, [r0, r7]
 800c474:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800c478:	4637      	mov	r7, r6
 800c47a:	42bb      	cmp	r3, r7
 800c47c:	460e      	mov	r6, r1
 800c47e:	d9f4      	bls.n	800c46a <_printf_i+0x116>
 800c480:	2b08      	cmp	r3, #8
 800c482:	d10b      	bne.n	800c49c <_printf_i+0x148>
 800c484:	6823      	ldr	r3, [r4, #0]
 800c486:	07de      	lsls	r6, r3, #31
 800c488:	d508      	bpl.n	800c49c <_printf_i+0x148>
 800c48a:	6923      	ldr	r3, [r4, #16]
 800c48c:	6861      	ldr	r1, [r4, #4]
 800c48e:	4299      	cmp	r1, r3
 800c490:	bfde      	ittt	le
 800c492:	2330      	movle	r3, #48	; 0x30
 800c494:	f805 3c01 	strble.w	r3, [r5, #-1]
 800c498:	f105 35ff 	addle.w	r5, r5, #4294967295
 800c49c:	1b52      	subs	r2, r2, r5
 800c49e:	6122      	str	r2, [r4, #16]
 800c4a0:	f8cd a000 	str.w	sl, [sp]
 800c4a4:	464b      	mov	r3, r9
 800c4a6:	aa03      	add	r2, sp, #12
 800c4a8:	4621      	mov	r1, r4
 800c4aa:	4640      	mov	r0, r8
 800c4ac:	f7ff fee4 	bl	800c278 <_printf_common>
 800c4b0:	3001      	adds	r0, #1
 800c4b2:	d14a      	bne.n	800c54a <_printf_i+0x1f6>
 800c4b4:	f04f 30ff 	mov.w	r0, #4294967295
 800c4b8:	b004      	add	sp, #16
 800c4ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c4be:	6823      	ldr	r3, [r4, #0]
 800c4c0:	f043 0320 	orr.w	r3, r3, #32
 800c4c4:	6023      	str	r3, [r4, #0]
 800c4c6:	4833      	ldr	r0, [pc, #204]	; (800c594 <_printf_i+0x240>)
 800c4c8:	2778      	movs	r7, #120	; 0x78
 800c4ca:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800c4ce:	6823      	ldr	r3, [r4, #0]
 800c4d0:	6829      	ldr	r1, [r5, #0]
 800c4d2:	061f      	lsls	r7, r3, #24
 800c4d4:	f851 6b04 	ldr.w	r6, [r1], #4
 800c4d8:	d402      	bmi.n	800c4e0 <_printf_i+0x18c>
 800c4da:	065f      	lsls	r7, r3, #25
 800c4dc:	bf48      	it	mi
 800c4de:	b2b6      	uxthmi	r6, r6
 800c4e0:	07df      	lsls	r7, r3, #31
 800c4e2:	bf48      	it	mi
 800c4e4:	f043 0320 	orrmi.w	r3, r3, #32
 800c4e8:	6029      	str	r1, [r5, #0]
 800c4ea:	bf48      	it	mi
 800c4ec:	6023      	strmi	r3, [r4, #0]
 800c4ee:	b91e      	cbnz	r6, 800c4f8 <_printf_i+0x1a4>
 800c4f0:	6823      	ldr	r3, [r4, #0]
 800c4f2:	f023 0320 	bic.w	r3, r3, #32
 800c4f6:	6023      	str	r3, [r4, #0]
 800c4f8:	2310      	movs	r3, #16
 800c4fa:	e7a7      	b.n	800c44c <_printf_i+0xf8>
 800c4fc:	4824      	ldr	r0, [pc, #144]	; (800c590 <_printf_i+0x23c>)
 800c4fe:	e7e4      	b.n	800c4ca <_printf_i+0x176>
 800c500:	4615      	mov	r5, r2
 800c502:	e7bd      	b.n	800c480 <_printf_i+0x12c>
 800c504:	682b      	ldr	r3, [r5, #0]
 800c506:	6826      	ldr	r6, [r4, #0]
 800c508:	6961      	ldr	r1, [r4, #20]
 800c50a:	1d18      	adds	r0, r3, #4
 800c50c:	6028      	str	r0, [r5, #0]
 800c50e:	0635      	lsls	r5, r6, #24
 800c510:	681b      	ldr	r3, [r3, #0]
 800c512:	d501      	bpl.n	800c518 <_printf_i+0x1c4>
 800c514:	6019      	str	r1, [r3, #0]
 800c516:	e002      	b.n	800c51e <_printf_i+0x1ca>
 800c518:	0670      	lsls	r0, r6, #25
 800c51a:	d5fb      	bpl.n	800c514 <_printf_i+0x1c0>
 800c51c:	8019      	strh	r1, [r3, #0]
 800c51e:	2300      	movs	r3, #0
 800c520:	6123      	str	r3, [r4, #16]
 800c522:	4615      	mov	r5, r2
 800c524:	e7bc      	b.n	800c4a0 <_printf_i+0x14c>
 800c526:	682b      	ldr	r3, [r5, #0]
 800c528:	1d1a      	adds	r2, r3, #4
 800c52a:	602a      	str	r2, [r5, #0]
 800c52c:	681d      	ldr	r5, [r3, #0]
 800c52e:	6862      	ldr	r2, [r4, #4]
 800c530:	2100      	movs	r1, #0
 800c532:	4628      	mov	r0, r5
 800c534:	f7f9 fe3c 	bl	80061b0 <memchr>
 800c538:	b108      	cbz	r0, 800c53e <_printf_i+0x1ea>
 800c53a:	1b40      	subs	r0, r0, r5
 800c53c:	6060      	str	r0, [r4, #4]
 800c53e:	6863      	ldr	r3, [r4, #4]
 800c540:	6123      	str	r3, [r4, #16]
 800c542:	2300      	movs	r3, #0
 800c544:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c548:	e7aa      	b.n	800c4a0 <_printf_i+0x14c>
 800c54a:	6923      	ldr	r3, [r4, #16]
 800c54c:	462a      	mov	r2, r5
 800c54e:	4649      	mov	r1, r9
 800c550:	4640      	mov	r0, r8
 800c552:	47d0      	blx	sl
 800c554:	3001      	adds	r0, #1
 800c556:	d0ad      	beq.n	800c4b4 <_printf_i+0x160>
 800c558:	6823      	ldr	r3, [r4, #0]
 800c55a:	079b      	lsls	r3, r3, #30
 800c55c:	d413      	bmi.n	800c586 <_printf_i+0x232>
 800c55e:	68e0      	ldr	r0, [r4, #12]
 800c560:	9b03      	ldr	r3, [sp, #12]
 800c562:	4298      	cmp	r0, r3
 800c564:	bfb8      	it	lt
 800c566:	4618      	movlt	r0, r3
 800c568:	e7a6      	b.n	800c4b8 <_printf_i+0x164>
 800c56a:	2301      	movs	r3, #1
 800c56c:	4632      	mov	r2, r6
 800c56e:	4649      	mov	r1, r9
 800c570:	4640      	mov	r0, r8
 800c572:	47d0      	blx	sl
 800c574:	3001      	adds	r0, #1
 800c576:	d09d      	beq.n	800c4b4 <_printf_i+0x160>
 800c578:	3501      	adds	r5, #1
 800c57a:	68e3      	ldr	r3, [r4, #12]
 800c57c:	9903      	ldr	r1, [sp, #12]
 800c57e:	1a5b      	subs	r3, r3, r1
 800c580:	42ab      	cmp	r3, r5
 800c582:	dcf2      	bgt.n	800c56a <_printf_i+0x216>
 800c584:	e7eb      	b.n	800c55e <_printf_i+0x20a>
 800c586:	2500      	movs	r5, #0
 800c588:	f104 0619 	add.w	r6, r4, #25
 800c58c:	e7f5      	b.n	800c57a <_printf_i+0x226>
 800c58e:	bf00      	nop
 800c590:	0800dd06 	.word	0x0800dd06
 800c594:	0800dd17 	.word	0x0800dd17

0800c598 <__sflush_r>:
 800c598:	898a      	ldrh	r2, [r1, #12]
 800c59a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c59e:	4605      	mov	r5, r0
 800c5a0:	0710      	lsls	r0, r2, #28
 800c5a2:	460c      	mov	r4, r1
 800c5a4:	d458      	bmi.n	800c658 <__sflush_r+0xc0>
 800c5a6:	684b      	ldr	r3, [r1, #4]
 800c5a8:	2b00      	cmp	r3, #0
 800c5aa:	dc05      	bgt.n	800c5b8 <__sflush_r+0x20>
 800c5ac:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800c5ae:	2b00      	cmp	r3, #0
 800c5b0:	dc02      	bgt.n	800c5b8 <__sflush_r+0x20>
 800c5b2:	2000      	movs	r0, #0
 800c5b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c5b8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800c5ba:	2e00      	cmp	r6, #0
 800c5bc:	d0f9      	beq.n	800c5b2 <__sflush_r+0x1a>
 800c5be:	2300      	movs	r3, #0
 800c5c0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800c5c4:	682f      	ldr	r7, [r5, #0]
 800c5c6:	6a21      	ldr	r1, [r4, #32]
 800c5c8:	602b      	str	r3, [r5, #0]
 800c5ca:	d032      	beq.n	800c632 <__sflush_r+0x9a>
 800c5cc:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800c5ce:	89a3      	ldrh	r3, [r4, #12]
 800c5d0:	075a      	lsls	r2, r3, #29
 800c5d2:	d505      	bpl.n	800c5e0 <__sflush_r+0x48>
 800c5d4:	6863      	ldr	r3, [r4, #4]
 800c5d6:	1ac0      	subs	r0, r0, r3
 800c5d8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c5da:	b10b      	cbz	r3, 800c5e0 <__sflush_r+0x48>
 800c5dc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c5de:	1ac0      	subs	r0, r0, r3
 800c5e0:	2300      	movs	r3, #0
 800c5e2:	4602      	mov	r2, r0
 800c5e4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800c5e6:	6a21      	ldr	r1, [r4, #32]
 800c5e8:	4628      	mov	r0, r5
 800c5ea:	47b0      	blx	r6
 800c5ec:	1c43      	adds	r3, r0, #1
 800c5ee:	89a3      	ldrh	r3, [r4, #12]
 800c5f0:	d106      	bne.n	800c600 <__sflush_r+0x68>
 800c5f2:	6829      	ldr	r1, [r5, #0]
 800c5f4:	291d      	cmp	r1, #29
 800c5f6:	d82b      	bhi.n	800c650 <__sflush_r+0xb8>
 800c5f8:	4a29      	ldr	r2, [pc, #164]	; (800c6a0 <__sflush_r+0x108>)
 800c5fa:	410a      	asrs	r2, r1
 800c5fc:	07d6      	lsls	r6, r2, #31
 800c5fe:	d427      	bmi.n	800c650 <__sflush_r+0xb8>
 800c600:	2200      	movs	r2, #0
 800c602:	6062      	str	r2, [r4, #4]
 800c604:	04d9      	lsls	r1, r3, #19
 800c606:	6922      	ldr	r2, [r4, #16]
 800c608:	6022      	str	r2, [r4, #0]
 800c60a:	d504      	bpl.n	800c616 <__sflush_r+0x7e>
 800c60c:	1c42      	adds	r2, r0, #1
 800c60e:	d101      	bne.n	800c614 <__sflush_r+0x7c>
 800c610:	682b      	ldr	r3, [r5, #0]
 800c612:	b903      	cbnz	r3, 800c616 <__sflush_r+0x7e>
 800c614:	6560      	str	r0, [r4, #84]	; 0x54
 800c616:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800c618:	602f      	str	r7, [r5, #0]
 800c61a:	2900      	cmp	r1, #0
 800c61c:	d0c9      	beq.n	800c5b2 <__sflush_r+0x1a>
 800c61e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800c622:	4299      	cmp	r1, r3
 800c624:	d002      	beq.n	800c62c <__sflush_r+0x94>
 800c626:	4628      	mov	r0, r5
 800c628:	f7ff fc7a 	bl	800bf20 <_free_r>
 800c62c:	2000      	movs	r0, #0
 800c62e:	6360      	str	r0, [r4, #52]	; 0x34
 800c630:	e7c0      	b.n	800c5b4 <__sflush_r+0x1c>
 800c632:	2301      	movs	r3, #1
 800c634:	4628      	mov	r0, r5
 800c636:	47b0      	blx	r6
 800c638:	1c41      	adds	r1, r0, #1
 800c63a:	d1c8      	bne.n	800c5ce <__sflush_r+0x36>
 800c63c:	682b      	ldr	r3, [r5, #0]
 800c63e:	2b00      	cmp	r3, #0
 800c640:	d0c5      	beq.n	800c5ce <__sflush_r+0x36>
 800c642:	2b1d      	cmp	r3, #29
 800c644:	d001      	beq.n	800c64a <__sflush_r+0xb2>
 800c646:	2b16      	cmp	r3, #22
 800c648:	d101      	bne.n	800c64e <__sflush_r+0xb6>
 800c64a:	602f      	str	r7, [r5, #0]
 800c64c:	e7b1      	b.n	800c5b2 <__sflush_r+0x1a>
 800c64e:	89a3      	ldrh	r3, [r4, #12]
 800c650:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c654:	81a3      	strh	r3, [r4, #12]
 800c656:	e7ad      	b.n	800c5b4 <__sflush_r+0x1c>
 800c658:	690f      	ldr	r7, [r1, #16]
 800c65a:	2f00      	cmp	r7, #0
 800c65c:	d0a9      	beq.n	800c5b2 <__sflush_r+0x1a>
 800c65e:	0793      	lsls	r3, r2, #30
 800c660:	680e      	ldr	r6, [r1, #0]
 800c662:	bf08      	it	eq
 800c664:	694b      	ldreq	r3, [r1, #20]
 800c666:	600f      	str	r7, [r1, #0]
 800c668:	bf18      	it	ne
 800c66a:	2300      	movne	r3, #0
 800c66c:	eba6 0807 	sub.w	r8, r6, r7
 800c670:	608b      	str	r3, [r1, #8]
 800c672:	f1b8 0f00 	cmp.w	r8, #0
 800c676:	dd9c      	ble.n	800c5b2 <__sflush_r+0x1a>
 800c678:	6a21      	ldr	r1, [r4, #32]
 800c67a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800c67c:	4643      	mov	r3, r8
 800c67e:	463a      	mov	r2, r7
 800c680:	4628      	mov	r0, r5
 800c682:	47b0      	blx	r6
 800c684:	2800      	cmp	r0, #0
 800c686:	dc06      	bgt.n	800c696 <__sflush_r+0xfe>
 800c688:	89a3      	ldrh	r3, [r4, #12]
 800c68a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c68e:	81a3      	strh	r3, [r4, #12]
 800c690:	f04f 30ff 	mov.w	r0, #4294967295
 800c694:	e78e      	b.n	800c5b4 <__sflush_r+0x1c>
 800c696:	4407      	add	r7, r0
 800c698:	eba8 0800 	sub.w	r8, r8, r0
 800c69c:	e7e9      	b.n	800c672 <__sflush_r+0xda>
 800c69e:	bf00      	nop
 800c6a0:	dfbffffe 	.word	0xdfbffffe

0800c6a4 <_fflush_r>:
 800c6a4:	b538      	push	{r3, r4, r5, lr}
 800c6a6:	690b      	ldr	r3, [r1, #16]
 800c6a8:	4605      	mov	r5, r0
 800c6aa:	460c      	mov	r4, r1
 800c6ac:	b913      	cbnz	r3, 800c6b4 <_fflush_r+0x10>
 800c6ae:	2500      	movs	r5, #0
 800c6b0:	4628      	mov	r0, r5
 800c6b2:	bd38      	pop	{r3, r4, r5, pc}
 800c6b4:	b118      	cbz	r0, 800c6be <_fflush_r+0x1a>
 800c6b6:	6a03      	ldr	r3, [r0, #32]
 800c6b8:	b90b      	cbnz	r3, 800c6be <_fflush_r+0x1a>
 800c6ba:	f7ff f8a1 	bl	800b800 <__sinit>
 800c6be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c6c2:	2b00      	cmp	r3, #0
 800c6c4:	d0f3      	beq.n	800c6ae <_fflush_r+0xa>
 800c6c6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800c6c8:	07d0      	lsls	r0, r2, #31
 800c6ca:	d404      	bmi.n	800c6d6 <_fflush_r+0x32>
 800c6cc:	0599      	lsls	r1, r3, #22
 800c6ce:	d402      	bmi.n	800c6d6 <_fflush_r+0x32>
 800c6d0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c6d2:	f7ff fc14 	bl	800befe <__retarget_lock_acquire_recursive>
 800c6d6:	4628      	mov	r0, r5
 800c6d8:	4621      	mov	r1, r4
 800c6da:	f7ff ff5d 	bl	800c598 <__sflush_r>
 800c6de:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800c6e0:	07da      	lsls	r2, r3, #31
 800c6e2:	4605      	mov	r5, r0
 800c6e4:	d4e4      	bmi.n	800c6b0 <_fflush_r+0xc>
 800c6e6:	89a3      	ldrh	r3, [r4, #12]
 800c6e8:	059b      	lsls	r3, r3, #22
 800c6ea:	d4e1      	bmi.n	800c6b0 <_fflush_r+0xc>
 800c6ec:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c6ee:	f7ff fc07 	bl	800bf00 <__retarget_lock_release_recursive>
 800c6f2:	e7dd      	b.n	800c6b0 <_fflush_r+0xc>

0800c6f4 <__swhatbuf_r>:
 800c6f4:	b570      	push	{r4, r5, r6, lr}
 800c6f6:	460c      	mov	r4, r1
 800c6f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c6fc:	2900      	cmp	r1, #0
 800c6fe:	b096      	sub	sp, #88	; 0x58
 800c700:	4615      	mov	r5, r2
 800c702:	461e      	mov	r6, r3
 800c704:	da0d      	bge.n	800c722 <__swhatbuf_r+0x2e>
 800c706:	89a3      	ldrh	r3, [r4, #12]
 800c708:	f013 0f80 	tst.w	r3, #128	; 0x80
 800c70c:	f04f 0100 	mov.w	r1, #0
 800c710:	bf0c      	ite	eq
 800c712:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 800c716:	2340      	movne	r3, #64	; 0x40
 800c718:	2000      	movs	r0, #0
 800c71a:	6031      	str	r1, [r6, #0]
 800c71c:	602b      	str	r3, [r5, #0]
 800c71e:	b016      	add	sp, #88	; 0x58
 800c720:	bd70      	pop	{r4, r5, r6, pc}
 800c722:	466a      	mov	r2, sp
 800c724:	f000 f848 	bl	800c7b8 <_fstat_r>
 800c728:	2800      	cmp	r0, #0
 800c72a:	dbec      	blt.n	800c706 <__swhatbuf_r+0x12>
 800c72c:	9901      	ldr	r1, [sp, #4]
 800c72e:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800c732:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 800c736:	4259      	negs	r1, r3
 800c738:	4159      	adcs	r1, r3
 800c73a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800c73e:	e7eb      	b.n	800c718 <__swhatbuf_r+0x24>

0800c740 <__smakebuf_r>:
 800c740:	898b      	ldrh	r3, [r1, #12]
 800c742:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c744:	079d      	lsls	r5, r3, #30
 800c746:	4606      	mov	r6, r0
 800c748:	460c      	mov	r4, r1
 800c74a:	d507      	bpl.n	800c75c <__smakebuf_r+0x1c>
 800c74c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800c750:	6023      	str	r3, [r4, #0]
 800c752:	6123      	str	r3, [r4, #16]
 800c754:	2301      	movs	r3, #1
 800c756:	6163      	str	r3, [r4, #20]
 800c758:	b002      	add	sp, #8
 800c75a:	bd70      	pop	{r4, r5, r6, pc}
 800c75c:	ab01      	add	r3, sp, #4
 800c75e:	466a      	mov	r2, sp
 800c760:	f7ff ffc8 	bl	800c6f4 <__swhatbuf_r>
 800c764:	9900      	ldr	r1, [sp, #0]
 800c766:	4605      	mov	r5, r0
 800c768:	4630      	mov	r0, r6
 800c76a:	f7fe fef9 	bl	800b560 <_malloc_r>
 800c76e:	b948      	cbnz	r0, 800c784 <__smakebuf_r+0x44>
 800c770:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c774:	059a      	lsls	r2, r3, #22
 800c776:	d4ef      	bmi.n	800c758 <__smakebuf_r+0x18>
 800c778:	f023 0303 	bic.w	r3, r3, #3
 800c77c:	f043 0302 	orr.w	r3, r3, #2
 800c780:	81a3      	strh	r3, [r4, #12]
 800c782:	e7e3      	b.n	800c74c <__smakebuf_r+0xc>
 800c784:	89a3      	ldrh	r3, [r4, #12]
 800c786:	6020      	str	r0, [r4, #0]
 800c788:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800c78c:	81a3      	strh	r3, [r4, #12]
 800c78e:	9b00      	ldr	r3, [sp, #0]
 800c790:	6163      	str	r3, [r4, #20]
 800c792:	9b01      	ldr	r3, [sp, #4]
 800c794:	6120      	str	r0, [r4, #16]
 800c796:	b15b      	cbz	r3, 800c7b0 <__smakebuf_r+0x70>
 800c798:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800c79c:	4630      	mov	r0, r6
 800c79e:	f000 f81d 	bl	800c7dc <_isatty_r>
 800c7a2:	b128      	cbz	r0, 800c7b0 <__smakebuf_r+0x70>
 800c7a4:	89a3      	ldrh	r3, [r4, #12]
 800c7a6:	f023 0303 	bic.w	r3, r3, #3
 800c7aa:	f043 0301 	orr.w	r3, r3, #1
 800c7ae:	81a3      	strh	r3, [r4, #12]
 800c7b0:	89a3      	ldrh	r3, [r4, #12]
 800c7b2:	431d      	orrs	r5, r3
 800c7b4:	81a5      	strh	r5, [r4, #12]
 800c7b6:	e7cf      	b.n	800c758 <__smakebuf_r+0x18>

0800c7b8 <_fstat_r>:
 800c7b8:	b538      	push	{r3, r4, r5, lr}
 800c7ba:	4d07      	ldr	r5, [pc, #28]	; (800c7d8 <_fstat_r+0x20>)
 800c7bc:	2300      	movs	r3, #0
 800c7be:	4604      	mov	r4, r0
 800c7c0:	4608      	mov	r0, r1
 800c7c2:	4611      	mov	r1, r2
 800c7c4:	602b      	str	r3, [r5, #0]
 800c7c6:	f7fa ff6a 	bl	800769e <_fstat>
 800c7ca:	1c43      	adds	r3, r0, #1
 800c7cc:	d102      	bne.n	800c7d4 <_fstat_r+0x1c>
 800c7ce:	682b      	ldr	r3, [r5, #0]
 800c7d0:	b103      	cbz	r3, 800c7d4 <_fstat_r+0x1c>
 800c7d2:	6023      	str	r3, [r4, #0]
 800c7d4:	bd38      	pop	{r3, r4, r5, pc}
 800c7d6:	bf00      	nop
 800c7d8:	200006a0 	.word	0x200006a0

0800c7dc <_isatty_r>:
 800c7dc:	b538      	push	{r3, r4, r5, lr}
 800c7de:	4d06      	ldr	r5, [pc, #24]	; (800c7f8 <_isatty_r+0x1c>)
 800c7e0:	2300      	movs	r3, #0
 800c7e2:	4604      	mov	r4, r0
 800c7e4:	4608      	mov	r0, r1
 800c7e6:	602b      	str	r3, [r5, #0]
 800c7e8:	f7fa ff69 	bl	80076be <_isatty>
 800c7ec:	1c43      	adds	r3, r0, #1
 800c7ee:	d102      	bne.n	800c7f6 <_isatty_r+0x1a>
 800c7f0:	682b      	ldr	r3, [r5, #0]
 800c7f2:	b103      	cbz	r3, 800c7f6 <_isatty_r+0x1a>
 800c7f4:	6023      	str	r3, [r4, #0]
 800c7f6:	bd38      	pop	{r3, r4, r5, pc}
 800c7f8:	200006a0 	.word	0x200006a0

0800c7fc <_Unwind_GetDataRelBase>:
 800c7fc:	b508      	push	{r3, lr}
 800c7fe:	f7fe fe77 	bl	800b4f0 <abort>

0800c802 <_Unwind_GetTextRelBase>:
 800c802:	b508      	push	{r3, lr}
 800c804:	f7ff fffa 	bl	800c7fc <_Unwind_GetDataRelBase>

0800c808 <_init>:
 800c808:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c80a:	bf00      	nop
 800c80c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800c80e:	bc08      	pop	{r3}
 800c810:	469e      	mov	lr, r3
 800c812:	4770      	bx	lr

0800c814 <_fini>:
 800c814:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c816:	bf00      	nop
 800c818:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800c81a:	bc08      	pop	{r3}
 800c81c:	469e      	mov	lr, r3
 800c81e:	4770      	bx	lr
